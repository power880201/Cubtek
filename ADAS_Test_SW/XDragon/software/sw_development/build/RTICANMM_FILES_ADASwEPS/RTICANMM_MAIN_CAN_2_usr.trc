

-- START@RTICANMM_MAIN_CAN_2_DS1401_1_2_1



group "CAN_2" -- subsystem-group
{
     flags: COLLAPSED
}


CANMM_CTL_SETUP_CAN_2_ID
{
type: UINT(8)
alias: "Variation"
flags: OUTPUT|READONLY
desc: "current Variation of CAN_2"
unit: ""
value: 0
}




CANMMCAN_2_NL
{
type: UINT(32)
alias: "NumLostMsgs"
flags: OUTPUT|READONLY
desc: "Number of lost messages"
unit: ""
value: 0
}




CANMMCAN_2_TRAFFIC
{
type: UINT(8)
alias: "Traffic"
flags: OUTPUT|READONLY
desc: "Traffic"
unit: ""
value: 0
}




CANMMCAN_2_GEIN
{
type: UINT(8)
alias: "GlobalEnable"
flags: PARAM
desc: "Enable CAN_2"
unit: ""
range: <0; 1>
value: 1
}




CANMMCAN_2_TXGEIN
{
type: UINT(8)
alias: "GlobalEnableTX"
flags: PARAM
desc: "Enable TX of CAN_2"
unit: ""
range: <0; 1>
value: 1
}




CANMMCAN_2_MAXMSGPERSTEP
{
type: INT(32)
alias: "MaxMessagesPerStep"
flags: PARAM
desc: "MaxMessagesPerStep"
unit: ""
range: <0; 100>
value: 0
}




CANMMCAN_2_TXEEIE[0]
{
type: UINT(8)
alias: "ADAS_Enable"
flags: PARAM
desc: "Enable ADAS"
unit: ""
range: <0; 1>
value: 1
}




CANMMCAN_2_TXEEIE[1]
{
type: UINT(8)
alias: "ExternalUnit_Enable"
flags: PARAM
desc: "Enable ExternalUnit"
unit: ""
range: <0; 1>
value: 1
}




CANMMCAN_2_TXEEIE[2]
{
type: UINT(8)
alias: "Vector__XXX_Enable"
flags: PARAM
desc: "Enable Vector__XXX"
unit: ""
range: <0; 1>
value: 1
}





group "ABS2_C" -- subsystem-group
{
     flags: COLLAPSED
}



group "RX" -- subsystem-group
{
     flags: COLLAPSED
}


CANMMCAN_2_RX_Msg_1_Sgn_1
{
type: UINT(8)
alias: "BrkSw_Sta"
flags: OUTPUT|READONLY
desc: ""
unit: ""
value: 0
}




CANMMCAN_2_RX_Msg_1_Sgn_2
{
type: UINT(8)
alias: "BrkSw_V"
flags: OUTPUT|READONLY
desc: ""
unit: ""
value: 0
}




CANMMCAN_2_RX_Msg_1_Sgn_3
{
type: flt(64,IEEE)
alias: "VehSpeed"
flags: OUTPUT|READONLY
desc: ""
unit: ""
value: 0
}




CANMMCAN_2_MIDRX[6]
{
type: UINT(32)
alias: "ABS2_C_ID"
flags: OUTPUT|READONLY
desc: "Message ID"
unit: ""
value: 864
}




CANMMCAN_2_MIDFRX[6]
{
type: UINT(8)
alias: "ABS2_C_IDFormat"
flags: OUTPUT|READONLY
desc: "Message ID Format"
unit: ""
value: 0
}




CANMMCAN_2_RXLEN[6]
{
type: UINT(8)
alias: "ABS2_C_Length"
flags: OUTPUT|READONLY
desc: "Message Length"
unit: ""
value: 8
}




CANMMCAN_2_RXsta[6]
{
type: UINT(8)
alias: "ABS2_C_status"
flags: OUTPUT|READONLY
desc: "ABS2_C Status"
unit: ""
value: 0
}




CANMMCAN_2_RXdt[6]
{
type: flt(64,IEEE)
alias: "ABS2_C_dt"
flags: OUTPUT|READONLY
desc: "ABS2_C DeltaTime"
unit: "s"
value: 0.01
}




CANMMCAN_2_RXt[6]
{
type: flt(64,IEEE)
alias: "ABS2_C_time"
flags: OUTPUT|READONLY
desc: "ABS2_C Time"
unit: "s"
value: 0.0
}





endgroup -- block-group "RX"



group "TX" -- subsystem-group
{
     flags: COLLAPSED
}


CANMMCAN_2_WBS[6]
{
type: UINT(8)
alias: "ABS2_C_CheckEnable"
flags: OUTPUT|READONLY
desc: "Check enabled ABS2_C"
unit: ""
value: 0
}




CANMMCAN_2_TXDT[6]
{
type: flt(64,IEEE)
alias: "ABS2_C_DelayTime"
flags: OUTPUT|READONLY
desc: "DelayTime ABS2_C"
unit: "s"
value: 0
}




CANMMCAN_2_TXsta[6]
{
type: UINT(8)
alias: "ABS2_C_status"
flags: OUTPUT|READONLY
desc: "ABS2_C Status"
unit: ""
value: 0
}




CANMMCAN_2_TXEIN[6]
{
type: UINT(8)
alias: "ABS2_C_Enable"
flags: PARAM
desc: "Enable ABS2_C"
unit: ""
range: <0; 1>
value: 1
}




CANMMCAN_2_TXCIE[6]
{
type: UINT(8)
alias: "ABS2_C_PeriodicalOn"
flags: PARAM
desc: "Activate cyclic transmission for ABS2_C"
unit: ""
range: <0; 1>
value: 1
}




CANMMCAN_2_TXKIEX[6]
{
type: UINT(8)
alias: "ABS2_C_Kickout"
flags: PARAM
desc: "Kickout ABS2_C"
unit: ""
range: <0; 1>
value: 0
}




CANMMCAN_2_TXCT[6]
{
type: flt(64,IEEE)
alias: "ABS2_C_CycleTime"
flags: PARAM
desc: "CycleTime ABS2_C"
unit: "s"
range: <0; 1000>
value: 1.000000e-02
}





endgroup -- block-group "TX"



endgroup -- block-group "ABS2_C"



group "ABS4_C" -- subsystem-group
{
     flags: COLLAPSED
}



group "RX" -- subsystem-group
{
     flags: COLLAPSED
}


CANMMCAN_2_RX_Msg_2_Sgn_1
{
type: flt(64,IEEE)
alias: "YawRate"
flags: OUTPUT|READONLY
desc: ""
unit: "deg/s"
value: -100
}




CANMMCAN_2_RX_Msg_2_Sgn_2
{
type: UINT(8)
alias: "YawRate_V"
flags: OUTPUT|READONLY
desc: ""
unit: ""
value: 0
}




CANMMCAN_2_MIDRX[9]
{
type: UINT(32)
alias: "ABS4_C_ID"
flags: OUTPUT|READONLY
desc: "Message ID"
unit: ""
value: 896
}




CANMMCAN_2_MIDFRX[9]
{
type: UINT(8)
alias: "ABS4_C_IDFormat"
flags: OUTPUT|READONLY
desc: "Message ID Format"
unit: ""
value: 0
}




CANMMCAN_2_RXLEN[9]
{
type: UINT(8)
alias: "ABS4_C_Length"
flags: OUTPUT|READONLY
desc: "Message Length"
unit: ""
value: 8
}




CANMMCAN_2_RXsta[9]
{
type: UINT(8)
alias: "ABS4_C_status"
flags: OUTPUT|READONLY
desc: "ABS4_C Status"
unit: ""
value: 0
}




CANMMCAN_2_RXdt[9]
{
type: flt(64,IEEE)
alias: "ABS4_C_dt"
flags: OUTPUT|READONLY
desc: "ABS4_C DeltaTime"
unit: "s"
value: 0.01
}




CANMMCAN_2_RXt[9]
{
type: flt(64,IEEE)
alias: "ABS4_C_time"
flags: OUTPUT|READONLY
desc: "ABS4_C Time"
unit: "s"
value: 0.0
}





endgroup -- block-group "RX"



group "TX" -- subsystem-group
{
     flags: COLLAPSED
}


CANMMCAN_2_WBS[9]
{
type: UINT(8)
alias: "ABS4_C_CheckEnable"
flags: OUTPUT|READONLY
desc: "Check enabled ABS4_C"
unit: ""
value: 0
}




CANMMCAN_2_TXDT[9]
{
type: flt(64,IEEE)
alias: "ABS4_C_DelayTime"
flags: OUTPUT|READONLY
desc: "DelayTime ABS4_C"
unit: "s"
value: 0
}




CANMMCAN_2_TXsta[9]
{
type: UINT(8)
alias: "ABS4_C_status"
flags: OUTPUT|READONLY
desc: "ABS4_C Status"
unit: ""
value: 0
}




CANMMCAN_2_TXEIN[9]
{
type: UINT(8)
alias: "ABS4_C_Enable"
flags: PARAM
desc: "Enable ABS4_C"
unit: ""
range: <0; 1>
value: 1
}




CANMMCAN_2_TXCIE[9]
{
type: UINT(8)
alias: "ABS4_C_PeriodicalOn"
flags: PARAM
desc: "Activate cyclic transmission for ABS4_C"
unit: ""
range: <0; 1>
value: 1
}




CANMMCAN_2_TXKIEX[9]
{
type: UINT(8)
alias: "ABS4_C_Kickout"
flags: PARAM
desc: "Kickout ABS4_C"
unit: ""
range: <0; 1>
value: 0
}




CANMMCAN_2_TXCT[9]
{
type: flt(64,IEEE)
alias: "ABS4_C_CycleTime"
flags: PARAM
desc: "CycleTime ABS4_C"
unit: "s"
range: <0; 1000>
value: 1.000000e-02
}





endgroup -- block-group "TX"



endgroup -- block-group "ABS4_C"



group "BCM1_C" -- subsystem-group
{
     flags: COLLAPSED
}



group "RX" -- subsystem-group
{
     flags: COLLAPSED
}


CANMMCAN_2_RX_Msg_3_Sgn_1
{
type: UINT(8)
alias: "BCM_RTurnLp_Sta"
flags: OUTPUT|READONLY
desc: ""
unit: ""
value: 0
}




CANMMCAN_2_RX_Msg_3_Sgn_2
{
type: UINT(8)
alias: "BCM_LTurnLp_Sta"
flags: OUTPUT|READONLY
desc: ""
unit: ""
value: 0
}




CANMMCAN_2_MIDRX[12]
{
type: UINT(32)
alias: "BCM1_C_ID"
flags: OUTPUT|READONLY
desc: "Message ID"
unit: ""
value: 1056
}




CANMMCAN_2_MIDFRX[12]
{
type: UINT(8)
alias: "BCM1_C_IDFormat"
flags: OUTPUT|READONLY
desc: "Message ID Format"
unit: ""
value: 0
}




CANMMCAN_2_RXLEN[12]
{
type: UINT(8)
alias: "BCM1_C_Length"
flags: OUTPUT|READONLY
desc: "Message Length"
unit: ""
value: 8
}




CANMMCAN_2_RXsta[12]
{
type: UINT(8)
alias: "BCM1_C_status"
flags: OUTPUT|READONLY
desc: "BCM1_C Status"
unit: ""
value: 0
}




CANMMCAN_2_RXdt[12]
{
type: flt(64,IEEE)
alias: "BCM1_C_dt"
flags: OUTPUT|READONLY
desc: "BCM1_C DeltaTime"
unit: "s"
value: 0.2
}




CANMMCAN_2_RXt[12]
{
type: flt(64,IEEE)
alias: "BCM1_C_time"
flags: OUTPUT|READONLY
desc: "BCM1_C Time"
unit: "s"
value: 0.0
}





endgroup -- block-group "RX"



group "TX" -- subsystem-group
{
     flags: COLLAPSED
}


CANMMCAN_2_WBS[12]
{
type: UINT(8)
alias: "BCM1_C_CheckEnable"
flags: OUTPUT|READONLY
desc: "Check enabled BCM1_C"
unit: ""
value: 0
}




CANMMCAN_2_TXDT[12]
{
type: flt(64,IEEE)
alias: "BCM1_C_DelayTime"
flags: OUTPUT|READONLY
desc: "DelayTime BCM1_C"
unit: "s"
value: 0
}




CANMMCAN_2_TXsta[12]
{
type: UINT(8)
alias: "BCM1_C_status"
flags: OUTPUT|READONLY
desc: "BCM1_C Status"
unit: ""
value: 0
}




CANMMCAN_2_TXEIN[12]
{
type: UINT(8)
alias: "BCM1_C_Enable"
flags: PARAM
desc: "Enable BCM1_C"
unit: ""
range: <0; 1>
value: 1
}




CANMMCAN_2_TXCIE[12]
{
type: UINT(8)
alias: "BCM1_C_PeriodicalOn"
flags: PARAM
desc: "Activate cyclic transmission for BCM1_C"
unit: ""
range: <0; 1>
value: 1
}




CANMMCAN_2_TXKIEX[12]
{
type: UINT(8)
alias: "BCM1_C_Kickout"
flags: PARAM
desc: "Kickout BCM1_C"
unit: ""
range: <0; 1>
value: 0
}




CANMMCAN_2_TXCT[12]
{
type: flt(64,IEEE)
alias: "BCM1_C_CycleTime"
flags: PARAM
desc: "CycleTime BCM1_C"
unit: "s"
range: <0; 1000>
value: 2.000000e-01
}





endgroup -- block-group "TX"



endgroup -- block-group "BCM1_C"



group "CSW1_C" -- subsystem-group
{
     flags: COLLAPSED
}



group "RX" -- subsystem-group
{
     flags: COLLAPSED
}


CANMMCAN_2_RX_Msg_4_Sgn_1
{
type: UINT(8)
alias: "CSW_FWipSw_Sta"
flags: OUTPUT|READONLY
desc: ""
unit: ""
value: 0
}




CANMMCAN_2_MIDRX[11]
{
type: UINT(32)
alias: "CSW1_C_ID"
flags: OUTPUT|READONLY
desc: "Message ID"
unit: ""
value: 1040
}




CANMMCAN_2_MIDFRX[11]
{
type: UINT(8)
alias: "CSW1_C_IDFormat"
flags: OUTPUT|READONLY
desc: "Message ID Format"
unit: ""
value: 0
}




CANMMCAN_2_RXLEN[11]
{
type: UINT(8)
alias: "CSW1_C_Length"
flags: OUTPUT|READONLY
desc: "Message Length"
unit: ""
value: 8
}




CANMMCAN_2_RXsta[11]
{
type: UINT(8)
alias: "CSW1_C_status"
flags: OUTPUT|READONLY
desc: "CSW1_C Status"
unit: ""
value: 0
}




CANMMCAN_2_RXdt[11]
{
type: flt(64,IEEE)
alias: "CSW1_C_dt"
flags: OUTPUT|READONLY
desc: "CSW1_C DeltaTime"
unit: "s"
value: 0.2
}




CANMMCAN_2_RXt[11]
{
type: flt(64,IEEE)
alias: "CSW1_C_time"
flags: OUTPUT|READONLY
desc: "CSW1_C Time"
unit: "s"
value: 0.0
}





endgroup -- block-group "RX"



group "TX" -- subsystem-group
{
     flags: COLLAPSED
}


CANMMCAN_2_WBS[11]
{
type: UINT(8)
alias: "CSW1_C_CheckEnable"
flags: OUTPUT|READONLY
desc: "Check enabled CSW1_C"
unit: ""
value: 0
}




CANMMCAN_2_TXDT[11]
{
type: flt(64,IEEE)
alias: "CSW1_C_DelayTime"
flags: OUTPUT|READONLY
desc: "DelayTime CSW1_C"
unit: "s"
value: 0
}




CANMMCAN_2_TXsta[11]
{
type: UINT(8)
alias: "CSW1_C_status"
flags: OUTPUT|READONLY
desc: "CSW1_C Status"
unit: ""
value: 0
}




CANMMCAN_2_TXEIN[11]
{
type: UINT(8)
alias: "CSW1_C_Enable"
flags: PARAM
desc: "Enable CSW1_C"
unit: ""
range: <0; 1>
value: 1
}




CANMMCAN_2_TXCIE[11]
{
type: UINT(8)
alias: "CSW1_C_PeriodicalOn"
flags: PARAM
desc: "Activate cyclic transmission for CSW1_C"
unit: ""
range: <0; 1>
value: 1
}




CANMMCAN_2_TXKIEX[11]
{
type: UINT(8)
alias: "CSW1_C_Kickout"
flags: PARAM
desc: "Kickout CSW1_C"
unit: ""
range: <0; 1>
value: 0
}




CANMMCAN_2_TXCT[11]
{
type: flt(64,IEEE)
alias: "CSW1_C_CycleTime"
flags: PARAM
desc: "CycleTime CSW1_C"
unit: "s"
range: <0; 1000>
value: 2.000000e-01
}





endgroup -- block-group "TX"



endgroup -- block-group "CSW1_C"



group "FECU1_C" -- subsystem-group
{
     flags: COLLAPSED
}



group "RX" -- subsystem-group
{
     flags: COLLAPSED
}


CANMMCAN_2_RX_Msg_5_Sgn_1
{
type: UINT(8)
alias: "FECU_HiBeamRly_Sta"
flags: OUTPUT|READONLY
desc: ""
unit: ""
value: 0
}




CANMMCAN_2_MIDRX[13]
{
type: UINT(32)
alias: "FECU1_C_ID"
flags: OUTPUT|READONLY
desc: "Message ID"
unit: ""
value: 1088
}




CANMMCAN_2_MIDFRX[13]
{
type: UINT(8)
alias: "FECU1_C_IDFormat"
flags: OUTPUT|READONLY
desc: "Message ID Format"
unit: ""
value: 0
}




CANMMCAN_2_RXLEN[13]
{
type: UINT(8)
alias: "FECU1_C_Length"
flags: OUTPUT|READONLY
desc: "Message Length"
unit: ""
value: 8
}




CANMMCAN_2_RXsta[13]
{
type: UINT(8)
alias: "FECU1_C_status"
flags: OUTPUT|READONLY
desc: "FECU1_C Status"
unit: ""
value: 0
}




CANMMCAN_2_RXdt[13]
{
type: flt(64,IEEE)
alias: "FECU1_C_dt"
flags: OUTPUT|READONLY
desc: "FECU1_C DeltaTime"
unit: "s"
value: 0.2
}




CANMMCAN_2_RXt[13]
{
type: flt(64,IEEE)
alias: "FECU1_C_time"
flags: OUTPUT|READONLY
desc: "FECU1_C Time"
unit: "s"
value: 0.0
}





endgroup -- block-group "RX"



group "TX" -- subsystem-group
{
     flags: COLLAPSED
}


CANMMCAN_2_WBS[13]
{
type: UINT(8)
alias: "FECU1_C_CheckEnable"
flags: OUTPUT|READONLY
desc: "Check enabled FECU1_C"
unit: ""
value: 0
}




CANMMCAN_2_TXDT[13]
{
type: flt(64,IEEE)
alias: "FECU1_C_DelayTime"
flags: OUTPUT|READONLY
desc: "DelayTime FECU1_C"
unit: "s"
value: 0
}




CANMMCAN_2_TXsta[13]
{
type: UINT(8)
alias: "FECU1_C_status"
flags: OUTPUT|READONLY
desc: "FECU1_C Status"
unit: ""
value: 0
}




CANMMCAN_2_TXEIN[13]
{
type: UINT(8)
alias: "FECU1_C_Enable"
flags: PARAM
desc: "Enable FECU1_C"
unit: ""
range: <0; 1>
value: 1
}




CANMMCAN_2_TXCIE[13]
{
type: UINT(8)
alias: "FECU1_C_PeriodicalOn"
flags: PARAM
desc: "Activate cyclic transmission for FECU1_C"
unit: ""
range: <0; 1>
value: 1
}




CANMMCAN_2_TXKIEX[13]
{
type: UINT(8)
alias: "FECU1_C_Kickout"
flags: PARAM
desc: "Kickout FECU1_C"
unit: ""
range: <0; 1>
value: 0
}




CANMMCAN_2_TXCT[13]
{
type: flt(64,IEEE)
alias: "FECU1_C_CycleTime"
flags: PARAM
desc: "CycleTime FECU1_C"
unit: "s"
range: <0; 1000>
value: 2.000000e-01
}





endgroup -- block-group "TX"



endgroup -- block-group "FECU1_C"



group "HighLowBeam" -- subsystem-group
{
     flags: COLLAPSED
}



group "RX" -- subsystem-group
{
     flags: COLLAPSED
}


CANMMCAN_2_RX_Msg_6_Sgn_1
{
type: UINT(8)
alias: "Reason_Preceding"
flags: OUTPUT|READONLY
desc: ""
unit: "bool"
value: 0
}




CANMMCAN_2_RX_Msg_6_Sgn_2
{
type: UINT(8)
alias: "Reason_Preceding_Grace"
flags: OUTPUT|READONLY
desc: ""
unit: "bool"
value: 0
}




CANMMCAN_2_RX_Msg_6_Sgn_3
{
type: UINT(8)
alias: "Reason_Oncoming"
flags: OUTPUT|READONLY
desc: ""
unit: "bool"
value: 0
}




CANMMCAN_2_RX_Msg_6_Sgn_4
{
type: UINT(8)
alias: "Reason_Oncoming_Grace"
flags: OUTPUT|READONLY
desc: ""
unit: "bool"
value: 0
}




CANMMCAN_2_RX_Msg_6_Sgn_5
{
type: UINT(8)
alias: "Reason_Street_Light"
flags: OUTPUT|READONLY
desc: ""
unit: "bool"
value: 0
}




CANMMCAN_2_RX_Msg_6_Sgn_6
{
type: UINT(8)
alias: "Reason_Street_Light_Grace"
flags: OUTPUT|READONLY
desc: ""
unit: "bool"
value: 0
}




CANMMCAN_2_RX_Msg_6_Sgn_7
{
type: UINT(8)
alias: "Reason_Lit_Night"
flags: OUTPUT|READONLY
desc: ""
unit: "bool"
value: 0
}




CANMMCAN_2_RX_Msg_6_Sgn_8
{
type: UINT(8)
alias: "Reason_Lit_Night_US"
flags: OUTPUT|READONLY
desc: ""
unit: "bool"
value: 0
}




CANMMCAN_2_RX_Msg_6_Sgn_9
{
type: UINT(8)
alias: "Reason_Low_speed"
flags: OUTPUT|READONLY
desc: ""
unit: "bool"
value: 0
}




CANMMCAN_2_RX_Msg_6_Sgn_10
{
type: UINT(8)
alias: "Reason_Bright_Scene"
flags: OUTPUT|READONLY
desc: ""
unit: "bool"
value: 0
}




CANMMCAN_2_RX_Msg_6_Sgn_11
{
type: UINT(8)
alias: "Reason_Sharp_Curve"
flags: OUTPUT|READONLY
desc: ""
unit: "bool"
value: 0
}




CANMMCAN_2_RX_Msg_6_Sgn_12
{
type: UINT(8)
alias: "Reason_Load_Balance"
flags: OUTPUT|READONLY
desc: ""
unit: "bool"
value: 0
}




CANMMCAN_2_RX_Msg_6_Sgn_13
{
type: UINT(8)
alias: "reserved_4"
flags: OUTPUT|READONLY
desc: ""
unit: ""
value: 0
}




CANMMCAN_2_RX_Msg_6_Sgn_14
{
type: UINT(8)
alias: "HLB_decision"
flags: OUTPUT|READONLY
desc: ""
unit: "bool"
value: 0
}




CANMMCAN_2_RX_Msg_6_Sgn_15
{
type: UINT(8)
alias: "HLB_Running_Mode"
flags: OUTPUT|READONLY
desc: ""
unit: ""
value: 0
}




CANMMCAN_2_RX_Msg_6_Sgn_16
{
type: UINT(8)
alias: "Reason_for_HLB_Inactive"
flags: OUTPUT|READONLY
desc: ""
unit: ""
value: 0
}




CANMMCAN_2_RX_Msg_6_Sgn_17
{
type: UINT(8)
alias: "reserved_1"
flags: OUTPUT|READONLY
desc: ""
unit: ""
value: 0
}




CANMMCAN_2_MIDRX[22]
{
type: UINT(32)
alias: "HighLowBeam_ID"
flags: OUTPUT|READONLY
desc: "Message ID"
unit: ""
value: 1536
}




CANMMCAN_2_MIDFRX[22]
{
type: UINT(8)
alias: "HighLowBeam_IDFormat"
flags: OUTPUT|READONLY
desc: "Message ID Format"
unit: ""
value: 0
}




CANMMCAN_2_RXLEN[22]
{
type: UINT(8)
alias: "HighLowBeam_Length"
flags: OUTPUT|READONLY
desc: "Message Length"
unit: ""
value: 3
}




CANMMCAN_2_RXsta[22]
{
type: UINT(8)
alias: "HighLowBeam_status"
flags: OUTPUT|READONLY
desc: "HighLowBeam Status"
unit: ""
value: 0
}




CANMMCAN_2_RXdt[22]
{
type: flt(64,IEEE)
alias: "HighLowBeam_dt"
flags: OUTPUT|READONLY
desc: "HighLowBeam DeltaTime"
unit: "s"
value: 0
}




CANMMCAN_2_RXt[22]
{
type: flt(64,IEEE)
alias: "HighLowBeam_time"
flags: OUTPUT|READONLY
desc: "HighLowBeam Time"
unit: "s"
value: 0.0
}





endgroup -- block-group "RX"



endgroup -- block-group "HighLowBeam"



group "IBEO1" -- subsystem-group
{
     flags: COLLAPSED
}



group "RX" -- subsystem-group
{
     flags: COLLAPSED
}


CANMMCAN_2_RX_Msg_7_Sgn_1
{
type: UINT(8)
alias: "HeaderCounter"
flags: OUTPUT|READONLY
desc: ""
unit: ""
value: 0
}




CANMMCAN_2_RX_Msg_7_Sgn_2
{
type: UINT(8)
alias: "ObjDataInfoFlag_vel"
flags: OUTPUT|READONLY
desc: ""
unit: ""
value: 0
}




CANMMCAN_2_RX_Msg_7_Sgn_3
{
type: UINT(8)
alias: "ObjDataInfoFlag_box"
flags: OUTPUT|READONLY
desc: ""
unit: ""
value: 0
}




CANMMCAN_2_RX_Msg_7_Sgn_4
{
type: INT(8)
alias: "SensorTemp"
flags: OUTPUT|READONLY
desc: ""
unit: ""
value: 0
}




CANMMCAN_2_RX_Msg_7_Sgn_5
{
type: UINT(8)
alias: "SensorViewRange"
flags: OUTPUT|READONLY
desc: ""
unit: ""
value: 0
}




CANMMCAN_2_RX_Msg_7_Sgn_6
{
type: UINT(8)
alias: "NumberOfObject"
flags: OUTPUT|READONLY
desc: ""
unit: ""
value: 0
}




CANMMCAN_2_RX_Msg_7_Sgn_7
{
type: UINT(8)
alias: "Version"
flags: OUTPUT|READONLY
desc: ""
unit: ""
value: 0
}




CANMMCAN_2_MIDRX[14]
{
type: UINT(32)
alias: "IBEO1_ID"
flags: OUTPUT|READONLY
desc: "Message ID"
unit: ""
value: 1280
}




CANMMCAN_2_MIDFRX[14]
{
type: UINT(8)
alias: "IBEO1_IDFormat"
flags: OUTPUT|READONLY
desc: "Message ID Format"
unit: ""
value: 0
}




CANMMCAN_2_RXLEN[14]
{
type: UINT(8)
alias: "IBEO1_Length"
flags: OUTPUT|READONLY
desc: "Message Length"
unit: ""
value: 6
}




CANMMCAN_2_RXsta[14]
{
type: UINT(8)
alias: "IBEO1_status"
flags: OUTPUT|READONLY
desc: "IBEO1 Status"
unit: ""
value: 0
}




CANMMCAN_2_RXdt[14]
{
type: flt(64,IEEE)
alias: "IBEO1_dt"
flags: OUTPUT|READONLY
desc: "IBEO1 DeltaTime"
unit: "s"
value: 0
}




CANMMCAN_2_RXt[14]
{
type: flt(64,IEEE)
alias: "IBEO1_time"
flags: OUTPUT|READONLY
desc: "IBEO1 Time"
unit: "s"
value: 0.0
}





endgroup -- block-group "RX"



endgroup -- block-group "IBEO1"



group "IBEO2" -- subsystem-group
{
     flags: COLLAPSED
}



group "RX" -- subsystem-group
{
     flags: COLLAPSED
}


CANMMCAN_2_RX_Msg_8_Sgn_1
{
type: UINT(32)
alias: "NTP_fractional_seconds"
flags: OUTPUT|READONLY
desc: ""
unit: ""
value: 0
}




CANMMCAN_2_RX_Msg_8_Sgn_2
{
type: UINT(32)
alias: "NTP_seconds"
flags: OUTPUT|READONLY
desc: ""
unit: ""
value: 0
}




CANMMCAN_2_MIDRX[15]
{
type: UINT(32)
alias: "IBEO2_ID"
flags: OUTPUT|READONLY
desc: "Message ID"
unit: ""
value: 1281
}




CANMMCAN_2_MIDFRX[15]
{
type: UINT(8)
alias: "IBEO2_IDFormat"
flags: OUTPUT|READONLY
desc: "Message ID Format"
unit: ""
value: 0
}




CANMMCAN_2_RXLEN[15]
{
type: UINT(8)
alias: "IBEO2_Length"
flags: OUTPUT|READONLY
desc: "Message Length"
unit: ""
value: 8
}




CANMMCAN_2_RXsta[15]
{
type: UINT(8)
alias: "IBEO2_status"
flags: OUTPUT|READONLY
desc: "IBEO2 Status"
unit: ""
value: 0
}




CANMMCAN_2_RXdt[15]
{
type: flt(64,IEEE)
alias: "IBEO2_dt"
flags: OUTPUT|READONLY
desc: "IBEO2 DeltaTime"
unit: "s"
value: 0
}




CANMMCAN_2_RXt[15]
{
type: flt(64,IEEE)
alias: "IBEO2_time"
flags: OUTPUT|READONLY
desc: "IBEO2 Time"
unit: "s"
value: 0.0
}





endgroup -- block-group "RX"



endgroup -- block-group "IBEO2"



group "IBEO3" -- subsystem-group
{
     flags: COLLAPSED
}



group "RX" -- subsystem-group
{
     flags: COLLAPSED
}


CANMMCAN_2_RX_Msg_9_Sgn_1
{
type: INT(16)
alias: "VelocityY"
flags: OUTPUT|READONLY
desc: ""
unit: ""
value: 0
}




CANMMCAN_2_RX_Msg_9_Sgn_2
{
type: INT(16)
alias: "VelocityX"
flags: OUTPUT|READONLY
desc: ""
unit: ""
value: 0
}




CANMMCAN_2_RX_Msg_9_Sgn_3
{
type: INT(16)
alias: "PositionY"
flags: OUTPUT|READONLY
desc: ""
unit: ""
value: 0
}




CANMMCAN_2_RX_Msg_9_Sgn_4
{
type: INT(16)
alias: "PositionX"
flags: OUTPUT|READONLY
desc: ""
unit: ""
value: 0
}




CANMMCAN_2_RX_Msg_9_Sgn_5
{
type: UINT(8)
alias: "ObjID"
flags: OUTPUT|READONLY
desc: ""
unit: ""
value: 0
}




CANMMCAN_2_MIDRX[16]
{
type: UINT(32)
alias: "IBEO3_ID"
flags: OUTPUT|READONLY
desc: "Message ID"
unit: ""
value: 1282
}




CANMMCAN_2_MIDFRX[16]
{
type: UINT(8)
alias: "IBEO3_IDFormat"
flags: OUTPUT|READONLY
desc: "Message ID Format"
unit: ""
value: 0
}




CANMMCAN_2_RXLEN[16]
{
type: UINT(8)
alias: "IBEO3_Length"
flags: OUTPUT|READONLY
desc: "Message Length"
unit: ""
value: 8
}




CANMMCAN_2_RXsta[16]
{
type: UINT(8)
alias: "IBEO3_status"
flags: OUTPUT|READONLY
desc: "IBEO3 Status"
unit: ""
value: 0
}




CANMMCAN_2_RXdt[16]
{
type: flt(64,IEEE)
alias: "IBEO3_dt"
flags: OUTPUT|READONLY
desc: "IBEO3 DeltaTime"
unit: "s"
value: 0
}




CANMMCAN_2_RXt[16]
{
type: flt(64,IEEE)
alias: "IBEO3_time"
flags: OUTPUT|READONLY
desc: "IBEO3 Time"
unit: "s"
value: 0.0
}





endgroup -- block-group "RX"



endgroup -- block-group "IBEO3"



group "IBEO4" -- subsystem-group
{
     flags: COLLAPSED
}



group "RX" -- subsystem-group
{
     flags: COLLAPSED
}


CANMMCAN_2_RX_Msg_10_Sgn_1
{
type: UINT(8)
alias: "VelocityYSigma"
flags: OUTPUT|READONLY
desc: ""
unit: ""
value: 0
}




CANMMCAN_2_RX_Msg_10_Sgn_2
{
type: UINT(8)
alias: "VelocityXSigma"
flags: OUTPUT|READONLY
desc: ""
unit: ""
value: 0
}




CANMMCAN_2_RX_Msg_10_Sgn_3
{
type: UINT(8)
alias: "PositionYSigma"
flags: OUTPUT|READONLY
desc: ""
unit: ""
value: 0
}




CANMMCAN_2_RX_Msg_10_Sgn_4
{
type: UINT(8)
alias: "PositionXSigma"
flags: OUTPUT|READONLY
desc: ""
unit: ""
value: 0
}




CANMMCAN_2_RX_Msg_10_Sgn_5
{
type: UINT(8)
alias: "ObjTimeOffset"
flags: OUTPUT|READONLY
desc: ""
unit: ""
value: 0
}




CANMMCAN_2_RX_Msg_10_Sgn_6
{
type: UINT(8)
alias: "ObjPredictionAge"
flags: OUTPUT|READONLY
desc: ""
unit: ""
value: 0
}




CANMMCAN_2_RX_Msg_10_Sgn_7
{
type: UINT(8)
alias: "ObjAge"
flags: OUTPUT|READONLY
desc: ""
unit: ""
value: 0
}




CANMMCAN_2_RX_Msg_10_Sgn_8
{
type: UINT(8)
alias: "ObjID"
flags: OUTPUT|READONLY
desc: ""
unit: ""
value: 0
}




CANMMCAN_2_MIDRX[17]
{
type: UINT(32)
alias: "IBEO4_ID"
flags: OUTPUT|READONLY
desc: "Message ID"
unit: ""
value: 1283
}




CANMMCAN_2_MIDFRX[17]
{
type: UINT(8)
alias: "IBEO4_IDFormat"
flags: OUTPUT|READONLY
desc: "Message ID Format"
unit: ""
value: 0
}




CANMMCAN_2_RXLEN[17]
{
type: UINT(8)
alias: "IBEO4_Length"
flags: OUTPUT|READONLY
desc: "Message Length"
unit: ""
value: 8
}




CANMMCAN_2_RXsta[17]
{
type: UINT(8)
alias: "IBEO4_status"
flags: OUTPUT|READONLY
desc: "IBEO4 Status"
unit: ""
value: 0
}




CANMMCAN_2_RXdt[17]
{
type: flt(64,IEEE)
alias: "IBEO4_dt"
flags: OUTPUT|READONLY
desc: "IBEO4 DeltaTime"
unit: "s"
value: 0
}




CANMMCAN_2_RXt[17]
{
type: flt(64,IEEE)
alias: "IBEO4_time"
flags: OUTPUT|READONLY
desc: "IBEO4 Time"
unit: "s"
value: 0.0
}





endgroup -- block-group "RX"



endgroup -- block-group "IBEO4"



group "IBEO5" -- subsystem-group
{
     flags: COLLAPSED
}



group "RX" -- subsystem-group
{
     flags: COLLAPSED
}


CANMMCAN_2_RX_Msg_11_Sgn_1
{
type: INT(16)
alias: "BoxCenterY"
flags: OUTPUT|READONLY
desc: ""
unit: ""
value: 0
}




CANMMCAN_2_RX_Msg_11_Sgn_2
{
type: INT(16)
alias: "BoxCenterX"
flags: OUTPUT|READONLY
desc: ""
unit: ""
value: 0
}




CANMMCAN_2_RX_Msg_11_Sgn_3
{
type: UINT(8)
alias: "ObjClassAge"
flags: OUTPUT|READONLY
desc: ""
unit: ""
value: 0
}




CANMMCAN_2_RX_Msg_11_Sgn_4
{
type: UINT(8)
alias: "ObjClassCertainty"
flags: OUTPUT|READONLY
desc: ""
unit: ""
value: 0
}




CANMMCAN_2_RX_Msg_11_Sgn_5
{
type: UINT(8)
alias: "ObjClassification"
flags: OUTPUT|READONLY
desc: ""
unit: ""
value: 0
}




CANMMCAN_2_RX_Msg_11_Sgn_6
{
type: UINT(8)
alias: "ObjID"
flags: OUTPUT|READONLY
desc: ""
unit: ""
value: 0
}




CANMMCAN_2_MIDRX[18]
{
type: UINT(32)
alias: "IBEO5_ID"
flags: OUTPUT|READONLY
desc: "Message ID"
unit: ""
value: 1284
}




CANMMCAN_2_MIDFRX[18]
{
type: UINT(8)
alias: "IBEO5_IDFormat"
flags: OUTPUT|READONLY
desc: "Message ID Format"
unit: ""
value: 0
}




CANMMCAN_2_RXLEN[18]
{
type: UINT(8)
alias: "IBEO5_Length"
flags: OUTPUT|READONLY
desc: "Message Length"
unit: ""
value: 8
}




CANMMCAN_2_RXsta[18]
{
type: UINT(8)
alias: "IBEO5_status"
flags: OUTPUT|READONLY
desc: "IBEO5 Status"
unit: ""
value: 0
}




CANMMCAN_2_RXdt[18]
{
type: flt(64,IEEE)
alias: "IBEO5_dt"
flags: OUTPUT|READONLY
desc: "IBEO5 DeltaTime"
unit: "s"
value: 0
}




CANMMCAN_2_RXt[18]
{
type: flt(64,IEEE)
alias: "IBEO5_time"
flags: OUTPUT|READONLY
desc: "IBEO5 Time"
unit: "s"
value: 0.0
}





endgroup -- block-group "RX"



endgroup -- block-group "IBEO5"



group "IBEO6" -- subsystem-group
{
     flags: COLLAPSED
}



group "RX" -- subsystem-group
{
     flags: COLLAPSED
}


CANMMCAN_2_RX_Msg_12_Sgn_1
{
type: INT(16)
alias: "BoxOrientation"
flags: OUTPUT|READONLY
desc: ""
unit: ""
value: 0
}




CANMMCAN_2_RX_Msg_12_Sgn_2
{
type: UINT(16)
alias: "BoxSizeY"
flags: OUTPUT|READONLY
desc: ""
unit: ""
value: 0
}




CANMMCAN_2_RX_Msg_12_Sgn_3
{
type: UINT(16)
alias: "BoxSizeX"
flags: OUTPUT|READONLY
desc: ""
unit: ""
value: 0
}




CANMMCAN_2_RX_Msg_12_Sgn_4
{
type: UINT(8)
alias: "ObjID"
flags: OUTPUT|READONLY
desc: ""
unit: ""
value: 0
}




CANMMCAN_2_MIDRX[19]
{
type: UINT(32)
alias: "IBEO6_ID"
flags: OUTPUT|READONLY
desc: "Message ID"
unit: ""
value: 1285
}




CANMMCAN_2_MIDFRX[19]
{
type: UINT(8)
alias: "IBEO6_IDFormat"
flags: OUTPUT|READONLY
desc: "Message ID Format"
unit: ""
value: 0
}




CANMMCAN_2_RXLEN[19]
{
type: UINT(8)
alias: "IBEO6_Length"
flags: OUTPUT|READONLY
desc: "Message Length"
unit: ""
value: 8
}




CANMMCAN_2_RXsta[19]
{
type: UINT(8)
alias: "IBEO6_status"
flags: OUTPUT|READONLY
desc: "IBEO6 Status"
unit: ""
value: 0
}




CANMMCAN_2_RXdt[19]
{
type: flt(64,IEEE)
alias: "IBEO6_dt"
flags: OUTPUT|READONLY
desc: "IBEO6 DeltaTime"
unit: "s"
value: 0
}




CANMMCAN_2_RXt[19]
{
type: flt(64,IEEE)
alias: "IBEO6_time"
flags: OUTPUT|READONLY
desc: "IBEO6 Time"
unit: "s"
value: 0.0
}





endgroup -- block-group "RX"



endgroup -- block-group "IBEO6"



group "IBEO7" -- subsystem-group
{
     flags: COLLAPSED
}



group "RX" -- subsystem-group
{
     flags: COLLAPSED
}


CANMMCAN_2_RX_Msg_13_Sgn_1
{
type: INT(16)
alias: "StartPointY"
flags: OUTPUT|READONLY
desc: ""
unit: ""
value: 0
}




CANMMCAN_2_RX_Msg_13_Sgn_2
{
type: INT(16)
alias: "StartPointX"
flags: OUTPUT|READONLY
desc: ""
unit: ""
value: 0
}




CANMMCAN_2_RX_Msg_13_Sgn_3
{
type: UINT(8)
alias: "ClosestContourPointNum"
flags: OUTPUT|READONLY
desc: ""
unit: ""
value: 0
}




CANMMCAN_2_RX_Msg_13_Sgn_4
{
type: UINT(8)
alias: "NumberOfContourPoints"
flags: OUTPUT|READONLY
desc: ""
unit: ""
value: 0
}




CANMMCAN_2_RX_Msg_13_Sgn_5
{
type: UINT(8)
alias: "ObjID"
flags: OUTPUT|READONLY
desc: ""
unit: ""
value: 0
}




CANMMCAN_2_MIDRX[20]
{
type: UINT(32)
alias: "IBEO7_ID"
flags: OUTPUT|READONLY
desc: "Message ID"
unit: ""
value: 1286
}




CANMMCAN_2_MIDFRX[20]
{
type: UINT(8)
alias: "IBEO7_IDFormat"
flags: OUTPUT|READONLY
desc: "Message ID Format"
unit: ""
value: 0
}




CANMMCAN_2_RXLEN[20]
{
type: UINT(8)
alias: "IBEO7_Length"
flags: OUTPUT|READONLY
desc: "Message Length"
unit: ""
value: 8
}




CANMMCAN_2_RXsta[20]
{
type: UINT(8)
alias: "IBEO7_status"
flags: OUTPUT|READONLY
desc: "IBEO7 Status"
unit: ""
value: 0
}




CANMMCAN_2_RXdt[20]
{
type: flt(64,IEEE)
alias: "IBEO7_dt"
flags: OUTPUT|READONLY
desc: "IBEO7 DeltaTime"
unit: "s"
value: 0
}




CANMMCAN_2_RXt[20]
{
type: flt(64,IEEE)
alias: "IBEO7_time"
flags: OUTPUT|READONLY
desc: "IBEO7 Time"
unit: "s"
value: 0.0
}





endgroup -- block-group "RX"



endgroup -- block-group "IBEO7"



group "IBEO8" -- subsystem-group
{
     flags: COLLAPSED
}



group "RX" -- subsystem-group
{
     flags: COLLAPSED
}


CANMMCAN_2_RX_Msg_14_Sgn_1
{
type: UINT(8)
alias: "yOffset3"
flags: OUTPUT|READONLY
desc: ""
unit: ""
value: 0
}




CANMMCAN_2_RX_Msg_14_Sgn_2
{
type: UINT(8)
alias: "xOffset3"
flags: OUTPUT|READONLY
desc: ""
unit: ""
value: 0
}




CANMMCAN_2_RX_Msg_14_Sgn_3
{
type: UINT(8)
alias: "yOffset2"
flags: OUTPUT|READONLY
desc: ""
unit: ""
value: 0
}




CANMMCAN_2_RX_Msg_14_Sgn_4
{
type: UINT(8)
alias: "xOffset2"
flags: OUTPUT|READONLY
desc: ""
unit: ""
value: 0
}




CANMMCAN_2_RX_Msg_14_Sgn_5
{
type: UINT(8)
alias: "yOffset"
flags: OUTPUT|READONLY
desc: ""
unit: ""
value: 0
}




CANMMCAN_2_RX_Msg_14_Sgn_6
{
type: UINT(8)
alias: "xOffset"
flags: OUTPUT|READONLY
desc: ""
unit: ""
value: 0
}




CANMMCAN_2_RX_Msg_14_Sgn_7
{
type: UINT(8)
alias: "ContourMessageNum"
flags: OUTPUT|READONLY
desc: ""
unit: ""
value: 0
}




CANMMCAN_2_RX_Msg_14_Sgn_8
{
type: UINT(8)
alias: "ObjID"
flags: OUTPUT|READONLY
desc: ""
unit: ""
value: 0
}




CANMMCAN_2_MIDRX[21]
{
type: UINT(32)
alias: "IBEO8_ID"
flags: OUTPUT|READONLY
desc: "Message ID"
unit: ""
value: 1287
}




CANMMCAN_2_MIDFRX[21]
{
type: UINT(8)
alias: "IBEO8_IDFormat"
flags: OUTPUT|READONLY
desc: "Message ID Format"
unit: ""
value: 0
}




CANMMCAN_2_RXLEN[21]
{
type: UINT(8)
alias: "IBEO8_Length"
flags: OUTPUT|READONLY
desc: "Message Length"
unit: ""
value: 8
}




CANMMCAN_2_RXsta[21]
{
type: UINT(8)
alias: "IBEO8_status"
flags: OUTPUT|READONLY
desc: "IBEO8 Status"
unit: ""
value: 0
}




CANMMCAN_2_RXdt[21]
{
type: flt(64,IEEE)
alias: "IBEO8_dt"
flags: OUTPUT|READONLY
desc: "IBEO8 DeltaTime"
unit: "s"
value: 0
}




CANMMCAN_2_RXt[21]
{
type: flt(64,IEEE)
alias: "IBEO8_time"
flags: OUTPUT|READONLY
desc: "IBEO8 Time"
unit: "s"
value: 0.0
}





endgroup -- block-group "RX"



endgroup -- block-group "IBEO8"



group "LKA_Left_Lane_A" -- subsystem-group
{
     flags: COLLAPSED
}



group "RX" -- subsystem-group
{
     flags: COLLAPSED
}


CANMMCAN_2_RX_Msg_15_Sgn_1
{
type: UINT(8)
alias: "Lane_Type"
flags: OUTPUT|READONLY
desc: ""
unit: ""
value: 0
}




CANMMCAN_2_RX_Msg_15_Sgn_2
{
type: UINT(8)
alias: "Quality"
flags: OUTPUT|READONLY
desc: ""
unit: ""
value: 0
}




CANMMCAN_2_RX_Msg_15_Sgn_3
{
type: flt(64,IEEE)
alias: "Position"
flags: OUTPUT|READONLY
desc: ""
unit: "meter"
value: 0
}




CANMMCAN_2_RX_Msg_15_Sgn_4
{
type: flt(64,IEEE)
alias: "Curvature"
flags: OUTPUT|READONLY
desc: ""
unit: "1/meter"
value: -0.031999023438
}




CANMMCAN_2_RX_Msg_15_Sgn_5
{
type: flt(64,IEEE)
alias: "Curvature_Derivative"
flags: OUTPUT|READONLY
desc: ""
unit: "1/meter^2"
value: -0.00012206658721
}




CANMMCAN_2_RX_Msg_15_Sgn_6
{
type: flt(64,IEEE)
alias: "Width_left_marking"
flags: OUTPUT|READONLY
desc: ""
unit: "m"
value: 0
}




CANMMCAN_2_MIDRX[56]
{
type: UINT(32)
alias: "LKA_Left_Lane_A_ID"
flags: OUTPUT|READONLY
desc: "Message ID"
unit: ""
value: 1894
}




CANMMCAN_2_MIDFRX[56]
{
type: UINT(8)
alias: "LKA_Left_Lane_A_IDFormat"
flags: OUTPUT|READONLY
desc: "Message ID Format"
unit: ""
value: 0
}




CANMMCAN_2_RXLEN[56]
{
type: UINT(8)
alias: "LKA_Left_Lane_A_Length"
flags: OUTPUT|READONLY
desc: "Message Length"
unit: ""
value: 8
}




CANMMCAN_2_RXsta[56]
{
type: UINT(8)
alias: "LKA_Left_Lane_A_status"
flags: OUTPUT|READONLY
desc: "LKA_Left_Lane_A Status"
unit: ""
value: 0
}




CANMMCAN_2_RXdt[56]
{
type: flt(64,IEEE)
alias: "LKA_Left_Lane_A_dt"
flags: OUTPUT|READONLY
desc: "LKA_Left_Lane_A DeltaTime"
unit: "s"
value: 0
}




CANMMCAN_2_RXt[56]
{
type: flt(64,IEEE)
alias: "LKA_Left_Lane_A_time"
flags: OUTPUT|READONLY
desc: "LKA_Left_Lane_A Time"
unit: "s"
value: 0.0
}





endgroup -- block-group "RX"



endgroup -- block-group "LKA_Left_Lane_A"



group "LKA_Left_Lane_B" -- subsystem-group
{
     flags: COLLAPSED
}



group "RX" -- subsystem-group
{
     flags: COLLAPSED
}


CANMMCAN_2_RX_Msg_16_Sgn_1
{
type: flt(64,IEEE)
alias: "Heading_Angle"
flags: OUTPUT|READONLY
desc: ""
unit: "radians"
value: -31.999023438
}




CANMMCAN_2_RX_Msg_16_Sgn_2
{
type: flt(64,IEEE)
alias: "View_Range_Start"
flags: OUTPUT|READONLY
desc: ""
unit: "meter"
value: 0
}




CANMMCAN_2_RX_Msg_16_Sgn_3
{
type: flt(64,IEEE)
alias: "View_Range_End"
flags: OUTPUT|READONLY
desc: ""
unit: "meter"
value: 0
}




CANMMCAN_2_RX_Msg_16_Sgn_4
{
type: UINT(8)
alias: "Lane_Crossing"
flags: OUTPUT|READONLY
desc: ""
unit: ""
value: 0
}




CANMMCAN_2_RX_Msg_16_Sgn_5
{
type: UINT(8)
alias: "Lane_mark_color"
flags: OUTPUT|READONLY
desc: ""
unit: ""
value: 0
}




CANMMCAN_2_RX_Msg_16_Sgn_6
{
type: UINT(8)
alias: "PRED_DIST_BASED_EXTRAPOLATION"
flags: OUTPUT|READONLY
desc: ""
unit: "ENUM"
value: 0
}




CANMMCAN_2_RX_Msg_16_Sgn_7
{
type: UINT(8)
alias: "PRED_OTHER_SIDE"
flags: OUTPUT|READONLY
desc: ""
unit: "ENUM"
value: 0
}




CANMMCAN_2_RX_Msg_16_Sgn_8
{
type: UINT(8)
alias: "PRED_OVERRIDE"
flags: OUTPUT|READONLY
desc: ""
unit: "ENUM"
value: 0
}




CANMMCAN_2_RX_Msg_16_Sgn_9
{
type: UINT(8)
alias: "PRED_OCCLUDED_LM_EXTRAPOLATION"
flags: OUTPUT|READONLY
desc: ""
unit: "ENUM"
value: 0
}




CANMMCAN_2_RX_Msg_16_Sgn_10
{
type: UINT(8)
alias: "PRED_HEADWAY_ORIENTED"
flags: OUTPUT|READONLY
desc: ""
unit: "ENUM"
value: 0
}




CANMMCAN_2_RX_Msg_16_Sgn_11
{
type: UINT(8)
alias: "Reserved1_laneB"
flags: OUTPUT|READONLY
desc: ""
unit: ""
value: 0
}




CANMMCAN_2_RX_Msg_16_Sgn_12
{
type: UINT(8)
alias: "PRED_SOURCE_DIVERGING_LANES"
flags: OUTPUT|READONLY
desc: ""
unit: "ENUM"
value: 0
}




CANMMCAN_2_RX_Msg_16_Sgn_13
{
type: UINT(8)
alias: "PRED_SOURCE_GUARDRAIL_SHADOW"
flags: OUTPUT|READONLY
desc: ""
unit: "ENUM"
value: 0
}




CANMMCAN_2_RX_Msg_16_Sgn_14
{
type: UINT(8)
alias: "PRED_SOURCE_HWE_SPAIN"
flags: OUTPUT|READONLY
desc: ""
unit: "ENUM"
value: 0
}




CANMMCAN_2_RX_Msg_16_Sgn_15
{
type: UINT(8)
alias: "PRED_SOURCE_STD"
flags: OUTPUT|READONLY
desc: ""
unit: "ENUM"
value: 0
}




CANMMCAN_2_RX_Msg_16_Sgn_16
{
type: UINT(8)
alias: "PRED_SOURCE_VRTL_MERGE"
flags: OUTPUT|READONLY
desc: ""
unit: "ENUM"
value: 0
}




CANMMCAN_2_RX_Msg_16_Sgn_17
{
type: flt(64,IEEE)
alias: "TLC"
flags: OUTPUT|READONLY
desc: ""
unit: ""
value: 0
}




CANMMCAN_2_MIDRX[57]
{
type: UINT(32)
alias: "LKA_Left_Lane_B_ID"
flags: OUTPUT|READONLY
desc: "Message ID"
unit: ""
value: 1895
}




CANMMCAN_2_MIDFRX[57]
{
type: UINT(8)
alias: "LKA_Left_Lane_B_IDFormat"
flags: OUTPUT|READONLY
desc: "Message ID Format"
unit: ""
value: 0
}




CANMMCAN_2_RXLEN[57]
{
type: UINT(8)
alias: "LKA_Left_Lane_B_Length"
flags: OUTPUT|READONLY
desc: "Message Length"
unit: ""
value: 7
}




CANMMCAN_2_RXsta[57]
{
type: UINT(8)
alias: "LKA_Left_Lane_B_status"
flags: OUTPUT|READONLY
desc: "LKA_Left_Lane_B Status"
unit: ""
value: 0
}




CANMMCAN_2_RXdt[57]
{
type: flt(64,IEEE)
alias: "LKA_Left_Lane_B_dt"
flags: OUTPUT|READONLY
desc: "LKA_Left_Lane_B DeltaTime"
unit: "s"
value: 0
}




CANMMCAN_2_RXt[57]
{
type: flt(64,IEEE)
alias: "LKA_Left_Lane_B_time"
flags: OUTPUT|READONLY
desc: "LKA_Left_Lane_B Time"
unit: "s"
value: 0.0
}





endgroup -- block-group "RX"



endgroup -- block-group "LKA_Left_Lane_B"



group "LKA_Right_Lane_A" -- subsystem-group
{
     flags: COLLAPSED
}



group "RX" -- subsystem-group
{
     flags: COLLAPSED
}


CANMMCAN_2_RX_Msg_17_Sgn_1
{
type: UINT(8)
alias: "Lane_Type"
flags: OUTPUT|READONLY
desc: ""
unit: ""
value: 0
}




CANMMCAN_2_RX_Msg_17_Sgn_2
{
type: UINT(8)
alias: "Quality"
flags: OUTPUT|READONLY
desc: ""
unit: ""
value: 0
}




CANMMCAN_2_RX_Msg_17_Sgn_3
{
type: flt(64,IEEE)
alias: "Position"
flags: OUTPUT|READONLY
desc: ""
unit: "meter"
value: 0
}




CANMMCAN_2_RX_Msg_17_Sgn_4
{
type: flt(64,IEEE)
alias: "Curvature"
flags: OUTPUT|READONLY
desc: ""
unit: "1/meter"
value: -0.031999023438
}




CANMMCAN_2_RX_Msg_17_Sgn_5
{
type: flt(64,IEEE)
alias: "Curvature_Derivative"
flags: OUTPUT|READONLY
desc: ""
unit: "1/meter^2"
value: -0.00012206658721
}




CANMMCAN_2_RX_Msg_17_Sgn_6
{
type: flt(64,IEEE)
alias: "Width_right_marking"
flags: OUTPUT|READONLY
desc: ""
unit: "m"
value: 0
}




CANMMCAN_2_MIDRX[58]
{
type: UINT(32)
alias: "LKA_Right_Lane_A_ID"
flags: OUTPUT|READONLY
desc: "Message ID"
unit: ""
value: 1896
}




CANMMCAN_2_MIDFRX[58]
{
type: UINT(8)
alias: "LKA_Right_Lane_A_IDFormat"
flags: OUTPUT|READONLY
desc: "Message ID Format"
unit: ""
value: 0
}




CANMMCAN_2_RXLEN[58]
{
type: UINT(8)
alias: "LKA_Right_Lane_A_Length"
flags: OUTPUT|READONLY
desc: "Message Length"
unit: ""
value: 8
}




CANMMCAN_2_RXsta[58]
{
type: UINT(8)
alias: "LKA_Right_Lane_A_status"
flags: OUTPUT|READONLY
desc: "LKA_Right_Lane_A Status"
unit: ""
value: 0
}




CANMMCAN_2_RXdt[58]
{
type: flt(64,IEEE)
alias: "LKA_Right_Lane_A_dt"
flags: OUTPUT|READONLY
desc: "LKA_Right_Lane_A DeltaTime"
unit: "s"
value: 0
}




CANMMCAN_2_RXt[58]
{
type: flt(64,IEEE)
alias: "LKA_Right_Lane_A_time"
flags: OUTPUT|READONLY
desc: "LKA_Right_Lane_A Time"
unit: "s"
value: 0.0
}





endgroup -- block-group "RX"



endgroup -- block-group "LKA_Right_Lane_A"



group "LKA_Right_Lane_B" -- subsystem-group
{
     flags: COLLAPSED
}



group "RX" -- subsystem-group
{
     flags: COLLAPSED
}


CANMMCAN_2_RX_Msg_18_Sgn_1
{
type: flt(64,IEEE)
alias: "Heading_Angle"
flags: OUTPUT|READONLY
desc: ""
unit: "radians"
value: -31.999023438
}




CANMMCAN_2_RX_Msg_18_Sgn_2
{
type: flt(64,IEEE)
alias: "View_Range_Start"
flags: OUTPUT|READONLY
desc: ""
unit: "meter"
value: 0
}




CANMMCAN_2_RX_Msg_18_Sgn_3
{
type: flt(64,IEEE)
alias: "View_Range_End"
flags: OUTPUT|READONLY
desc: ""
unit: "meter"
value: 0
}




CANMMCAN_2_RX_Msg_18_Sgn_4
{
type: UINT(8)
alias: "Lane_Crossing"
flags: OUTPUT|READONLY
desc: ""
unit: ""
value: 0
}




CANMMCAN_2_RX_Msg_18_Sgn_5
{
type: UINT(8)
alias: "Lane_mark_color"
flags: OUTPUT|READONLY
desc: ""
unit: ""
value: 0
}




CANMMCAN_2_RX_Msg_18_Sgn_6
{
type: UINT(8)
alias: "PRED_DIST_BASED_EXTRAPOLATION"
flags: OUTPUT|READONLY
desc: ""
unit: "ENUM"
value: 0
}




CANMMCAN_2_RX_Msg_18_Sgn_7
{
type: UINT(8)
alias: "PRED_OTHER_SIDE"
flags: OUTPUT|READONLY
desc: ""
unit: "ENUM"
value: 0
}




CANMMCAN_2_RX_Msg_18_Sgn_8
{
type: UINT(8)
alias: "PRED_OVERRIDE"
flags: OUTPUT|READONLY
desc: ""
unit: "ENUM"
value: 0
}




CANMMCAN_2_RX_Msg_18_Sgn_9
{
type: UINT(8)
alias: "PRED_OCCLUDED_LM_EXTRAPOLATION"
flags: OUTPUT|READONLY
desc: ""
unit: "ENUM"
value: 0
}




CANMMCAN_2_RX_Msg_18_Sgn_10
{
type: UINT(8)
alias: "PRED_HEADWAY_ORIENTED"
flags: OUTPUT|READONLY
desc: ""
unit: "ENUM"
value: 0
}




CANMMCAN_2_RX_Msg_18_Sgn_11
{
type: UINT(8)
alias: "Reserved1_laneB"
flags: OUTPUT|READONLY
desc: ""
unit: ""
value: 0
}




CANMMCAN_2_RX_Msg_18_Sgn_12
{
type: UINT(8)
alias: "PRED_SOURCE_DIVERGING_LANES"
flags: OUTPUT|READONLY
desc: ""
unit: "ENUM"
value: 0
}




CANMMCAN_2_RX_Msg_18_Sgn_13
{
type: UINT(8)
alias: "PRED_SOURCE_GUARDRAIL_SHADOW"
flags: OUTPUT|READONLY
desc: ""
unit: "ENUM"
value: 0
}




CANMMCAN_2_RX_Msg_18_Sgn_14
{
type: UINT(8)
alias: "PRED_SOURCE_HWE_SPAIN"
flags: OUTPUT|READONLY
desc: ""
unit: "ENUM"
value: 0
}




CANMMCAN_2_RX_Msg_18_Sgn_15
{
type: UINT(8)
alias: "PRED_SOURCE_STD"
flags: OUTPUT|READONLY
desc: ""
unit: "ENUM"
value: 0
}




CANMMCAN_2_RX_Msg_18_Sgn_16
{
type: UINT(8)
alias: "PRED_SOURCE_VRTL_MERGE"
flags: OUTPUT|READONLY
desc: ""
unit: "ENUM"
value: 0
}




CANMMCAN_2_RX_Msg_18_Sgn_17
{
type: flt(64,IEEE)
alias: "TLC"
flags: OUTPUT|READONLY
desc: ""
unit: ""
value: 0
}




CANMMCAN_2_MIDRX[59]
{
type: UINT(32)
alias: "LKA_Right_Lane_B_ID"
flags: OUTPUT|READONLY
desc: "Message ID"
unit: ""
value: 1897
}




CANMMCAN_2_MIDFRX[59]
{
type: UINT(8)
alias: "LKA_Right_Lane_B_IDFormat"
flags: OUTPUT|READONLY
desc: "Message ID Format"
unit: ""
value: 0
}




CANMMCAN_2_RXLEN[59]
{
type: UINT(8)
alias: "LKA_Right_Lane_B_Length"
flags: OUTPUT|READONLY
desc: "Message Length"
unit: ""
value: 7
}




CANMMCAN_2_RXsta[59]
{
type: UINT(8)
alias: "LKA_Right_Lane_B_status"
flags: OUTPUT|READONLY
desc: "LKA_Right_Lane_B Status"
unit: ""
value: 0
}




CANMMCAN_2_RXdt[59]
{
type: flt(64,IEEE)
alias: "LKA_Right_Lane_B_dt"
flags: OUTPUT|READONLY
desc: "LKA_Right_Lane_B DeltaTime"
unit: "s"
value: 0
}




CANMMCAN_2_RXt[59]
{
type: flt(64,IEEE)
alias: "LKA_Right_Lane_B_time"
flags: OUTPUT|READONLY
desc: "LKA_Right_Lane_B Time"
unit: "s"
value: 0.0
}





endgroup -- block-group "RX"



endgroup -- block-group "LKA_Right_Lane_B"



group "Next_Left_Lane_A" -- subsystem-group
{
     flags: COLLAPSED
}



group "RX" -- subsystem-group
{
     flags: COLLAPSED
}


CANMMCAN_2_RX_Msg_19_Sgn_1
{
type: UINT(8)
alias: "Lane_Type"
flags: OUTPUT|READONLY
desc: ""
unit: ""
value: 0
}




CANMMCAN_2_RX_Msg_19_Sgn_2
{
type: UINT(8)
alias: "Quality"
flags: OUTPUT|READONLY
desc: ""
unit: ""
value: 0
}




CANMMCAN_2_RX_Msg_19_Sgn_3
{
type: flt(64,IEEE)
alias: "Position"
flags: OUTPUT|READONLY
desc: ""
unit: "meter"
value: 0
}




CANMMCAN_2_RX_Msg_19_Sgn_4
{
type: flt(64,IEEE)
alias: "Curvature"
flags: OUTPUT|READONLY
desc: ""
unit: "1/meter"
value: -0.031999023438
}




CANMMCAN_2_RX_Msg_19_Sgn_5
{
type: flt(64,IEEE)
alias: "Curvature_Derivative"
flags: OUTPUT|READONLY
desc: ""
unit: "1/meter^2"
value: -0.00012206658721
}




CANMMCAN_2_RX_Msg_19_Sgn_6
{
type: flt(64,IEEE)
alias: "Lane_mark_width"
flags: OUTPUT|READONLY
desc: ""
unit: "meter"
value: 0
}




CANMMCAN_2_MIDRX[61]
{
type: UINT(32)
alias: "Next_Left_Lane_A_ID"
flags: OUTPUT|READONLY
desc: "Message ID"
unit: ""
value: 1900
}




CANMMCAN_2_MIDFRX[61]
{
type: UINT(8)
alias: "Next_Left_Lane_A_IDFormat"
flags: OUTPUT|READONLY
desc: "Message ID Format"
unit: ""
value: 0
}




CANMMCAN_2_RXLEN[61]
{
type: UINT(8)
alias: "Next_Left_Lane_A_Length"
flags: OUTPUT|READONLY
desc: "Message Length"
unit: ""
value: 8
}




CANMMCAN_2_RXsta[61]
{
type: UINT(8)
alias: "Next_Left_Lane_A_status"
flags: OUTPUT|READONLY
desc: "Next_Left_Lane_A Status"
unit: ""
value: 0
}




CANMMCAN_2_RXdt[61]
{
type: flt(64,IEEE)
alias: "Next_Left_Lane_A_dt"
flags: OUTPUT|READONLY
desc: "Next_Left_Lane_A DeltaTime"
unit: "s"
value: 0
}




CANMMCAN_2_RXt[61]
{
type: flt(64,IEEE)
alias: "Next_Left_Lane_A_time"
flags: OUTPUT|READONLY
desc: "Next_Left_Lane_A Time"
unit: "s"
value: 0.0
}





endgroup -- block-group "RX"



endgroup -- block-group "Next_Left_Lane_A"



group "Next_Left_Lane_B" -- subsystem-group
{
     flags: COLLAPSED
}



group "RX" -- subsystem-group
{
     flags: COLLAPSED
}


CANMMCAN_2_RX_Msg_20_Sgn_1
{
type: flt(64,IEEE)
alias: "Heading_Angle"
flags: OUTPUT|READONLY
desc: ""
unit: "radians"
value: -31.999023438
}




CANMMCAN_2_RX_Msg_20_Sgn_2
{
type: flt(64,IEEE)
alias: "View_Range_Start"
flags: OUTPUT|READONLY
desc: ""
unit: "meter"
value: 0
}




CANMMCAN_2_RX_Msg_20_Sgn_3
{
type: flt(64,IEEE)
alias: "View_Range_End"
flags: OUTPUT|READONLY
desc: ""
unit: "meter"
value: 0
}




CANMMCAN_2_MIDRX[62]
{
type: UINT(32)
alias: "Next_Left_Lane_B_ID"
flags: OUTPUT|READONLY
desc: "Message ID"
unit: ""
value: 1901
}




CANMMCAN_2_MIDFRX[62]
{
type: UINT(8)
alias: "Next_Left_Lane_B_IDFormat"
flags: OUTPUT|READONLY
desc: "Message ID Format"
unit: ""
value: 0
}




CANMMCAN_2_RXLEN[62]
{
type: UINT(8)
alias: "Next_Left_Lane_B_Length"
flags: OUTPUT|READONLY
desc: "Message Length"
unit: ""
value: 4
}




CANMMCAN_2_RXsta[62]
{
type: UINT(8)
alias: "Next_Left_Lane_B_status"
flags: OUTPUT|READONLY
desc: "Next_Left_Lane_B Status"
unit: ""
value: 0
}




CANMMCAN_2_RXdt[62]
{
type: flt(64,IEEE)
alias: "Next_Left_Lane_B_dt"
flags: OUTPUT|READONLY
desc: "Next_Left_Lane_B DeltaTime"
unit: "s"
value: 0
}




CANMMCAN_2_RXt[62]
{
type: flt(64,IEEE)
alias: "Next_Left_Lane_B_time"
flags: OUTPUT|READONLY
desc: "Next_Left_Lane_B Time"
unit: "s"
value: 0.0
}





endgroup -- block-group "RX"



endgroup -- block-group "Next_Left_Lane_B"



group "Next_Right_Lane_A" -- subsystem-group
{
     flags: COLLAPSED
}



group "RX" -- subsystem-group
{
     flags: COLLAPSED
}


CANMMCAN_2_RX_Msg_21_Sgn_1
{
type: UINT(8)
alias: "Lane_Type"
flags: OUTPUT|READONLY
desc: ""
unit: ""
value: 0
}




CANMMCAN_2_RX_Msg_21_Sgn_2
{
type: UINT(8)
alias: "Quality"
flags: OUTPUT|READONLY
desc: ""
unit: ""
value: 0
}




CANMMCAN_2_RX_Msg_21_Sgn_3
{
type: flt(64,IEEE)
alias: "Position"
flags: OUTPUT|READONLY
desc: ""
unit: "meter"
value: 0
}




CANMMCAN_2_RX_Msg_21_Sgn_4
{
type: flt(64,IEEE)
alias: "Curvature"
flags: OUTPUT|READONLY
desc: ""
unit: "1/meter"
value: -0.031999023438
}




CANMMCAN_2_RX_Msg_21_Sgn_5
{
type: flt(64,IEEE)
alias: "Curvature_Derivative"
flags: OUTPUT|READONLY
desc: ""
unit: "1/meter^2"
value: -0.00012206658721
}




CANMMCAN_2_RX_Msg_21_Sgn_6
{
type: flt(64,IEEE)
alias: "Lane_mark_width"
flags: OUTPUT|READONLY
desc: ""
unit: "meter"
value: 0
}




CANMMCAN_2_MIDRX[63]
{
type: UINT(32)
alias: "Next_Right_Lane_A_ID"
flags: OUTPUT|READONLY
desc: "Message ID"
unit: ""
value: 1902
}




CANMMCAN_2_MIDFRX[63]
{
type: UINT(8)
alias: "Next_Right_Lane_A_IDFormat"
flags: OUTPUT|READONLY
desc: "Message ID Format"
unit: ""
value: 0
}




CANMMCAN_2_RXLEN[63]
{
type: UINT(8)
alias: "Next_Right_Lane_A_Length"
flags: OUTPUT|READONLY
desc: "Message Length"
unit: ""
value: 8
}




CANMMCAN_2_RXsta[63]
{
type: UINT(8)
alias: "Next_Right_Lane_A_status"
flags: OUTPUT|READONLY
desc: "Next_Right_Lane_A Status"
unit: ""
value: 0
}




CANMMCAN_2_RXdt[63]
{
type: flt(64,IEEE)
alias: "Next_Right_Lane_A_dt"
flags: OUTPUT|READONLY
desc: "Next_Right_Lane_A DeltaTime"
unit: "s"
value: 0
}




CANMMCAN_2_RXt[63]
{
type: flt(64,IEEE)
alias: "Next_Right_Lane_A_time"
flags: OUTPUT|READONLY
desc: "Next_Right_Lane_A Time"
unit: "s"
value: 0.0
}





endgroup -- block-group "RX"



endgroup -- block-group "Next_Right_Lane_A"



group "Next_Right_Lane_B" -- subsystem-group
{
     flags: COLLAPSED
}



group "RX" -- subsystem-group
{
     flags: COLLAPSED
}


CANMMCAN_2_RX_Msg_22_Sgn_1
{
type: flt(64,IEEE)
alias: "Heading_Angle"
flags: OUTPUT|READONLY
desc: ""
unit: "radians"
value: -31.999023438
}




CANMMCAN_2_RX_Msg_22_Sgn_2
{
type: flt(64,IEEE)
alias: "View_Range_Start"
flags: OUTPUT|READONLY
desc: ""
unit: "meter"
value: 0
}




CANMMCAN_2_RX_Msg_22_Sgn_3
{
type: flt(64,IEEE)
alias: "View_Range_End"
flags: OUTPUT|READONLY
desc: ""
unit: "meter"
value: 0
}




CANMMCAN_2_MIDRX[64]
{
type: UINT(32)
alias: "Next_Right_Lane_B_ID"
flags: OUTPUT|READONLY
desc: "Message ID"
unit: ""
value: 1903
}




CANMMCAN_2_MIDFRX[64]
{
type: UINT(8)
alias: "Next_Right_Lane_B_IDFormat"
flags: OUTPUT|READONLY
desc: "Message ID Format"
unit: ""
value: 0
}




CANMMCAN_2_RXLEN[64]
{
type: UINT(8)
alias: "Next_Right_Lane_B_Length"
flags: OUTPUT|READONLY
desc: "Message Length"
unit: ""
value: 4
}




CANMMCAN_2_RXsta[64]
{
type: UINT(8)
alias: "Next_Right_Lane_B_status"
flags: OUTPUT|READONLY
desc: "Next_Right_Lane_B Status"
unit: ""
value: 0
}




CANMMCAN_2_RXdt[64]
{
type: flt(64,IEEE)
alias: "Next_Right_Lane_B_dt"
flags: OUTPUT|READONLY
desc: "Next_Right_Lane_B DeltaTime"
unit: "s"
value: 0
}




CANMMCAN_2_RXt[64]
{
type: flt(64,IEEE)
alias: "Next_Right_Lane_B_time"
flags: OUTPUT|READONLY
desc: "Next_Right_Lane_B Time"
unit: "s"
value: 0.0
}





endgroup -- block-group "RX"



endgroup -- block-group "Next_Right_Lane_B"



group "ObstacleDataA1" -- subsystem-group
{
     flags: COLLAPSED
}



group "RX" -- subsystem-group
{
     flags: COLLAPSED
}


CANMMCAN_2_RX_Msg_23_Sgn_1
{
type: UINT(8)
alias: "ObstacleID"
flags: OUTPUT|READONLY
desc: "New obstacles are given the last used free ID"
unit: ""
value: 0
}




CANMMCAN_2_RX_Msg_23_Sgn_2
{
type: flt(64,IEEE)
alias: "ObstaclePosX"
flags: OUTPUT|READONLY
desc: ""
unit: "m"
value: 0
}




CANMMCAN_2_RX_Msg_23_Sgn_3
{
type: UINT(8)
alias: "reserved_4"
flags: OUTPUT|READONLY
desc: ""
unit: ""
value: 0
}




CANMMCAN_2_RX_Msg_23_Sgn_4
{
type: flt(64,IEEE)
alias: "ObstaclePosY"
flags: OUTPUT|READONLY
desc: ""
unit: "m"
value: 0
}




CANMMCAN_2_RX_Msg_23_Sgn_5
{
type: UINT(8)
alias: "BlinkerInfo"
flags: OUTPUT|READONLY
desc: ""
unit: "enum"
value: 0
}




CANMMCAN_2_RX_Msg_23_Sgn_6
{
type: UINT(8)
alias: "Move_in_and_Out"
flags: OUTPUT|READONLY
desc: "The signal is based on our estimation of where the target is now relatively to the lanes, its rate of change, and our estimation of where it is going to be within one second.  "
unit: "enum"
value: 0
}




CANMMCAN_2_RX_Msg_23_Sgn_7
{
type: flt(64,IEEE)
alias: "ObstacleVelX"
flags: OUTPUT|READONLY
desc: ""
unit: "m/sec"
value: 0
}




CANMMCAN_2_RX_Msg_23_Sgn_8
{
type: UINT(8)
alias: "ObstacleType"
flags: OUTPUT|READONLY
desc: ""
unit: "enum"
value: 0
}




CANMMCAN_2_RX_Msg_23_Sgn_9
{
type: UINT(8)
alias: "reserved_1"
flags: OUTPUT|READONLY
desc: ""
unit: ""
value: 0
}




CANMMCAN_2_RX_Msg_23_Sgn_10
{
type: UINT(8)
alias: "ObstacleStatus"
flags: OUTPUT|READONLY
desc: ""
unit: "enum"
value: 0
}




CANMMCAN_2_RX_Msg_23_Sgn_11
{
type: UINT(8)
alias: "ObstacleBrakeLights"
flags: OUTPUT|READONLY
desc: "0 = off or not identifined 1 = on"
unit: "bool"
value: 0
}




CANMMCAN_2_RX_Msg_23_Sgn_12
{
type: UINT(8)
alias: "reserved_2"
flags: OUTPUT|READONLY
desc: ""
unit: ""
value: 0
}




CANMMCAN_2_RX_Msg_23_Sgn_13
{
type: UINT(8)
alias: "ObstacleValid"
flags: OUTPUT|READONLY
desc: ""
unit: "bool"
value: 0
}




CANMMCAN_2_MIDRX[25]
{
type: UINT(32)
alias: "ObstacleDataA1_ID"
flags: OUTPUT|READONLY
desc: "Message ID"
unit: ""
value: 1849
}




CANMMCAN_2_MIDFRX[25]
{
type: UINT(8)
alias: "ObstacleDataA1_IDFormat"
flags: OUTPUT|READONLY
desc: "Message ID Format"
unit: ""
value: 0
}




CANMMCAN_2_RXLEN[25]
{
type: UINT(8)
alias: "ObstacleDataA1_Length"
flags: OUTPUT|READONLY
desc: "Message Length"
unit: ""
value: 8
}




CANMMCAN_2_RXsta[25]
{
type: UINT(8)
alias: "ObstacleDataA1_status"
flags: OUTPUT|READONLY
desc: "ObstacleDataA1 Status"
unit: ""
value: 0
}




CANMMCAN_2_RXdt[25]
{
type: flt(64,IEEE)
alias: "ObstacleDataA1_dt"
flags: OUTPUT|READONLY
desc: "ObstacleDataA1 DeltaTime"
unit: "s"
value: 0
}




CANMMCAN_2_RXt[25]
{
type: flt(64,IEEE)
alias: "ObstacleDataA1_time"
flags: OUTPUT|READONLY
desc: "ObstacleDataA1 Time"
unit: "s"
value: 0.0
}





endgroup -- block-group "RX"



endgroup -- block-group "ObstacleDataA1"



group "ObstacleDataA10" -- subsystem-group
{
     flags: COLLAPSED
}



group "RX" -- subsystem-group
{
     flags: COLLAPSED
}


CANMMCAN_2_RX_Msg_24_Sgn_1
{
type: UINT(8)
alias: "ObstacleID"
flags: OUTPUT|READONLY
desc: "New obstacles are given the last used free ID"
unit: ""
value: 0
}




CANMMCAN_2_RX_Msg_24_Sgn_2
{
type: flt(64,IEEE)
alias: "ObstaclePosX"
flags: OUTPUT|READONLY
desc: ""
unit: "m"
value: 0
}




CANMMCAN_2_RX_Msg_24_Sgn_3
{
type: UINT(8)
alias: "reserved_4"
flags: OUTPUT|READONLY
desc: ""
unit: ""
value: 0
}




CANMMCAN_2_RX_Msg_24_Sgn_4
{
type: flt(64,IEEE)
alias: "ObstaclePosY"
flags: OUTPUT|READONLY
desc: ""
unit: "m"
value: 0
}




CANMMCAN_2_RX_Msg_24_Sgn_5
{
type: UINT(8)
alias: "BlinkerInfo"
flags: OUTPUT|READONLY
desc: ""
unit: "enum"
value: 0
}




CANMMCAN_2_RX_Msg_24_Sgn_6
{
type: UINT(8)
alias: "Move_in_and_Out"
flags: OUTPUT|READONLY
desc: "The signal is based on our estimation of where the target is now relatively to the lanes, its rate of change, and our estimation of where it is going to be within one second.  "
unit: "enum"
value: 0
}




CANMMCAN_2_RX_Msg_24_Sgn_7
{
type: flt(64,IEEE)
alias: "ObstacleVelX"
flags: OUTPUT|READONLY
desc: ""
unit: "m/sec"
value: 0
}




CANMMCAN_2_RX_Msg_24_Sgn_8
{
type: UINT(8)
alias: "ObstacleType"
flags: OUTPUT|READONLY
desc: ""
unit: "enum"
value: 0
}




CANMMCAN_2_RX_Msg_24_Sgn_9
{
type: UINT(8)
alias: "reserved_1"
flags: OUTPUT|READONLY
desc: ""
unit: ""
value: 0
}




CANMMCAN_2_RX_Msg_24_Sgn_10
{
type: UINT(8)
alias: "ObstacleStatus"
flags: OUTPUT|READONLY
desc: ""
unit: "enum"
value: 0
}




CANMMCAN_2_RX_Msg_24_Sgn_11
{
type: UINT(8)
alias: "ObstacleBrakeLights"
flags: OUTPUT|READONLY
desc: "0 = off or not identifined 1 = on"
unit: "bool"
value: 0
}




CANMMCAN_2_RX_Msg_24_Sgn_12
{
type: UINT(8)
alias: "reserved_2"
flags: OUTPUT|READONLY
desc: ""
unit: ""
value: 0
}




CANMMCAN_2_RX_Msg_24_Sgn_13
{
type: UINT(8)
alias: "ObstacleValid"
flags: OUTPUT|READONLY
desc: ""
unit: "bool"
value: 0
}




CANMMCAN_2_MIDRX[52]
{
type: UINT(32)
alias: "ObstacleDataA10_ID"
flags: OUTPUT|READONLY
desc: "Message ID"
unit: ""
value: 1876
}




CANMMCAN_2_MIDFRX[52]
{
type: UINT(8)
alias: "ObstacleDataA10_IDFormat"
flags: OUTPUT|READONLY
desc: "Message ID Format"
unit: ""
value: 0
}




CANMMCAN_2_RXLEN[52]
{
type: UINT(8)
alias: "ObstacleDataA10_Length"
flags: OUTPUT|READONLY
desc: "Message Length"
unit: ""
value: 8
}




CANMMCAN_2_RXsta[52]
{
type: UINT(8)
alias: "ObstacleDataA10_status"
flags: OUTPUT|READONLY
desc: "ObstacleDataA10 Status"
unit: ""
value: 0
}




CANMMCAN_2_RXdt[52]
{
type: flt(64,IEEE)
alias: "ObstacleDataA10_dt"
flags: OUTPUT|READONLY
desc: "ObstacleDataA10 DeltaTime"
unit: "s"
value: 0
}




CANMMCAN_2_RXt[52]
{
type: flt(64,IEEE)
alias: "ObstacleDataA10_time"
flags: OUTPUT|READONLY
desc: "ObstacleDataA10 Time"
unit: "s"
value: 0.0
}





endgroup -- block-group "RX"



endgroup -- block-group "ObstacleDataA10"



group "ObstacleDataA2" -- subsystem-group
{
     flags: COLLAPSED
}



group "RX" -- subsystem-group
{
     flags: COLLAPSED
}


CANMMCAN_2_RX_Msg_25_Sgn_1
{
type: UINT(8)
alias: "ObstacleID"
flags: OUTPUT|READONLY
desc: "New obstacles are given the last used free ID"
unit: ""
value: 0
}




CANMMCAN_2_RX_Msg_25_Sgn_2
{
type: flt(64,IEEE)
alias: "ObstaclePosX"
flags: OUTPUT|READONLY
desc: ""
unit: "m"
value: 0
}




CANMMCAN_2_RX_Msg_25_Sgn_3
{
type: UINT(8)
alias: "reserved_4"
flags: OUTPUT|READONLY
desc: ""
unit: ""
value: 0
}




CANMMCAN_2_RX_Msg_25_Sgn_4
{
type: flt(64,IEEE)
alias: "ObstaclePosY"
flags: OUTPUT|READONLY
desc: ""
unit: "m"
value: 0
}




CANMMCAN_2_RX_Msg_25_Sgn_5
{
type: UINT(8)
alias: "BlinkerInfo"
flags: OUTPUT|READONLY
desc: ""
unit: "enum"
value: 0
}




CANMMCAN_2_RX_Msg_25_Sgn_6
{
type: UINT(8)
alias: "Move_in_and_Out"
flags: OUTPUT|READONLY
desc: "The signal is based on our estimation of where the target is now relatively to the lanes, its rate of change, and our estimation of where it is going to be within one second.  "
unit: "enum"
value: 0
}




CANMMCAN_2_RX_Msg_25_Sgn_7
{
type: flt(64,IEEE)
alias: "ObstacleVelX"
flags: OUTPUT|READONLY
desc: ""
unit: "m/sec"
value: 0
}




CANMMCAN_2_RX_Msg_25_Sgn_8
{
type: UINT(8)
alias: "ObstacleType"
flags: OUTPUT|READONLY
desc: ""
unit: "enum"
value: 0
}




CANMMCAN_2_RX_Msg_25_Sgn_9
{
type: UINT(8)
alias: "reserved_1"
flags: OUTPUT|READONLY
desc: ""
unit: ""
value: 0
}




CANMMCAN_2_RX_Msg_25_Sgn_10
{
type: UINT(8)
alias: "ObstacleStatus"
flags: OUTPUT|READONLY
desc: ""
unit: "enum"
value: 0
}




CANMMCAN_2_RX_Msg_25_Sgn_11
{
type: UINT(8)
alias: "ObstacleBrakeLights"
flags: OUTPUT|READONLY
desc: "0 = off or not identifined 1 = on"
unit: "bool"
value: 0
}




CANMMCAN_2_RX_Msg_25_Sgn_12
{
type: UINT(8)
alias: "reserved_2"
flags: OUTPUT|READONLY
desc: ""
unit: ""
value: 0
}




CANMMCAN_2_RX_Msg_25_Sgn_13
{
type: UINT(8)
alias: "ObstacleValid"
flags: OUTPUT|READONLY
desc: ""
unit: "bool"
value: 0
}




CANMMCAN_2_MIDRX[28]
{
type: UINT(32)
alias: "ObstacleDataA2_ID"
flags: OUTPUT|READONLY
desc: "Message ID"
unit: ""
value: 1852
}




CANMMCAN_2_MIDFRX[28]
{
type: UINT(8)
alias: "ObstacleDataA2_IDFormat"
flags: OUTPUT|READONLY
desc: "Message ID Format"
unit: ""
value: 0
}




CANMMCAN_2_RXLEN[28]
{
type: UINT(8)
alias: "ObstacleDataA2_Length"
flags: OUTPUT|READONLY
desc: "Message Length"
unit: ""
value: 8
}




CANMMCAN_2_RXsta[28]
{
type: UINT(8)
alias: "ObstacleDataA2_status"
flags: OUTPUT|READONLY
desc: "ObstacleDataA2 Status"
unit: ""
value: 0
}




CANMMCAN_2_RXdt[28]
{
type: flt(64,IEEE)
alias: "ObstacleDataA2_dt"
flags: OUTPUT|READONLY
desc: "ObstacleDataA2 DeltaTime"
unit: "s"
value: 0
}




CANMMCAN_2_RXt[28]
{
type: flt(64,IEEE)
alias: "ObstacleDataA2_time"
flags: OUTPUT|READONLY
desc: "ObstacleDataA2 Time"
unit: "s"
value: 0.0
}





endgroup -- block-group "RX"



endgroup -- block-group "ObstacleDataA2"



group "ObstacleDataA3" -- subsystem-group
{
     flags: COLLAPSED
}



group "RX" -- subsystem-group
{
     flags: COLLAPSED
}


CANMMCAN_2_RX_Msg_26_Sgn_1
{
type: UINT(8)
alias: "ObstacleID"
flags: OUTPUT|READONLY
desc: "New obstacles are given the last used free ID"
unit: ""
value: 0
}




CANMMCAN_2_RX_Msg_26_Sgn_2
{
type: flt(64,IEEE)
alias: "ObstaclePosX"
flags: OUTPUT|READONLY
desc: ""
unit: "m"
value: 0
}




CANMMCAN_2_RX_Msg_26_Sgn_3
{
type: UINT(8)
alias: "reserved_4"
flags: OUTPUT|READONLY
desc: ""
unit: ""
value: 0
}




CANMMCAN_2_RX_Msg_26_Sgn_4
{
type: flt(64,IEEE)
alias: "ObstaclePosY"
flags: OUTPUT|READONLY
desc: ""
unit: "m"
value: 0
}




CANMMCAN_2_RX_Msg_26_Sgn_5
{
type: UINT(8)
alias: "BlinkerInfo"
flags: OUTPUT|READONLY
desc: ""
unit: "enum"
value: 0
}




CANMMCAN_2_RX_Msg_26_Sgn_6
{
type: UINT(8)
alias: "Move_in_and_Out"
flags: OUTPUT|READONLY
desc: "The signal is based on our estimation of where the target is now relatively to the lanes, its rate of change, and our estimation of where it is going to be within one second.  "
unit: "enum"
value: 0
}




CANMMCAN_2_RX_Msg_26_Sgn_7
{
type: flt(64,IEEE)
alias: "ObstacleVelX"
flags: OUTPUT|READONLY
desc: ""
unit: "m/sec"
value: 0
}




CANMMCAN_2_RX_Msg_26_Sgn_8
{
type: UINT(8)
alias: "ObstacleType"
flags: OUTPUT|READONLY
desc: ""
unit: "enum"
value: 0
}




CANMMCAN_2_RX_Msg_26_Sgn_9
{
type: UINT(8)
alias: "reserved_1"
flags: OUTPUT|READONLY
desc: ""
unit: ""
value: 0
}




CANMMCAN_2_RX_Msg_26_Sgn_10
{
type: UINT(8)
alias: "ObstacleStatus"
flags: OUTPUT|READONLY
desc: ""
unit: "enum"
value: 0
}




CANMMCAN_2_RX_Msg_26_Sgn_11
{
type: UINT(8)
alias: "ObstacleBrakeLights"
flags: OUTPUT|READONLY
desc: "0 = off or not identifined 1 = on"
unit: "bool"
value: 0
}




CANMMCAN_2_RX_Msg_26_Sgn_12
{
type: UINT(8)
alias: "reserved_2"
flags: OUTPUT|READONLY
desc: ""
unit: ""
value: 0
}




CANMMCAN_2_RX_Msg_26_Sgn_13
{
type: UINT(8)
alias: "ObstacleValid"
flags: OUTPUT|READONLY
desc: ""
unit: "bool"
value: 0
}




CANMMCAN_2_MIDRX[31]
{
type: UINT(32)
alias: "ObstacleDataA3_ID"
flags: OUTPUT|READONLY
desc: "Message ID"
unit: ""
value: 1855
}




CANMMCAN_2_MIDFRX[31]
{
type: UINT(8)
alias: "ObstacleDataA3_IDFormat"
flags: OUTPUT|READONLY
desc: "Message ID Format"
unit: ""
value: 0
}




CANMMCAN_2_RXLEN[31]
{
type: UINT(8)
alias: "ObstacleDataA3_Length"
flags: OUTPUT|READONLY
desc: "Message Length"
unit: ""
value: 8
}




CANMMCAN_2_RXsta[31]
{
type: UINT(8)
alias: "ObstacleDataA3_status"
flags: OUTPUT|READONLY
desc: "ObstacleDataA3 Status"
unit: ""
value: 0
}




CANMMCAN_2_RXdt[31]
{
type: flt(64,IEEE)
alias: "ObstacleDataA3_dt"
flags: OUTPUT|READONLY
desc: "ObstacleDataA3 DeltaTime"
unit: "s"
value: 0
}




CANMMCAN_2_RXt[31]
{
type: flt(64,IEEE)
alias: "ObstacleDataA3_time"
flags: OUTPUT|READONLY
desc: "ObstacleDataA3 Time"
unit: "s"
value: 0.0
}





endgroup -- block-group "RX"



endgroup -- block-group "ObstacleDataA3"



group "ObstacleDataA4" -- subsystem-group
{
     flags: COLLAPSED
}



group "RX" -- subsystem-group
{
     flags: COLLAPSED
}


CANMMCAN_2_RX_Msg_27_Sgn_1
{
type: UINT(8)
alias: "ObstacleID"
flags: OUTPUT|READONLY
desc: "New obstacles are given the last used free ID"
unit: ""
value: 0
}




CANMMCAN_2_RX_Msg_27_Sgn_2
{
type: flt(64,IEEE)
alias: "ObstaclePosX"
flags: OUTPUT|READONLY
desc: ""
unit: "m"
value: 0
}




CANMMCAN_2_RX_Msg_27_Sgn_3
{
type: UINT(8)
alias: "reserved_4"
flags: OUTPUT|READONLY
desc: ""
unit: ""
value: 0
}




CANMMCAN_2_RX_Msg_27_Sgn_4
{
type: flt(64,IEEE)
alias: "ObstaclePosY"
flags: OUTPUT|READONLY
desc: ""
unit: "m"
value: 0
}




CANMMCAN_2_RX_Msg_27_Sgn_5
{
type: UINT(8)
alias: "BlinkerInfo"
flags: OUTPUT|READONLY
desc: ""
unit: "enum"
value: 0
}




CANMMCAN_2_RX_Msg_27_Sgn_6
{
type: UINT(8)
alias: "Move_in_and_Out"
flags: OUTPUT|READONLY
desc: "The signal is based on our estimation of where the target is now relatively to the lanes, its rate of change, and our estimation of where it is going to be within one second.  "
unit: "enum"
value: 0
}




CANMMCAN_2_RX_Msg_27_Sgn_7
{
type: flt(64,IEEE)
alias: "ObstacleVelX"
flags: OUTPUT|READONLY
desc: ""
unit: "m/sec"
value: 0
}




CANMMCAN_2_RX_Msg_27_Sgn_8
{
type: UINT(8)
alias: "ObstacleType"
flags: OUTPUT|READONLY
desc: ""
unit: "enum"
value: 0
}




CANMMCAN_2_RX_Msg_27_Sgn_9
{
type: UINT(8)
alias: "reserved_1"
flags: OUTPUT|READONLY
desc: ""
unit: ""
value: 0
}




CANMMCAN_2_RX_Msg_27_Sgn_10
{
type: UINT(8)
alias: "ObstacleStatus"
flags: OUTPUT|READONLY
desc: ""
unit: "enum"
value: 0
}




CANMMCAN_2_RX_Msg_27_Sgn_11
{
type: UINT(8)
alias: "ObstacleBrakeLights"
flags: OUTPUT|READONLY
desc: "0 = off or not identifined 1 = on"
unit: "bool"
value: 0
}




CANMMCAN_2_RX_Msg_27_Sgn_12
{
type: UINT(8)
alias: "reserved_2"
flags: OUTPUT|READONLY
desc: ""
unit: ""
value: 0
}




CANMMCAN_2_RX_Msg_27_Sgn_13
{
type: UINT(8)
alias: "ObstacleValid"
flags: OUTPUT|READONLY
desc: ""
unit: "bool"
value: 0
}




CANMMCAN_2_MIDRX[34]
{
type: UINT(32)
alias: "ObstacleDataA4_ID"
flags: OUTPUT|READONLY
desc: "Message ID"
unit: ""
value: 1858
}




CANMMCAN_2_MIDFRX[34]
{
type: UINT(8)
alias: "ObstacleDataA4_IDFormat"
flags: OUTPUT|READONLY
desc: "Message ID Format"
unit: ""
value: 0
}




CANMMCAN_2_RXLEN[34]
{
type: UINT(8)
alias: "ObstacleDataA4_Length"
flags: OUTPUT|READONLY
desc: "Message Length"
unit: ""
value: 8
}




CANMMCAN_2_RXsta[34]
{
type: UINT(8)
alias: "ObstacleDataA4_status"
flags: OUTPUT|READONLY
desc: "ObstacleDataA4 Status"
unit: ""
value: 0
}




CANMMCAN_2_RXdt[34]
{
type: flt(64,IEEE)
alias: "ObstacleDataA4_dt"
flags: OUTPUT|READONLY
desc: "ObstacleDataA4 DeltaTime"
unit: "s"
value: 0
}




CANMMCAN_2_RXt[34]
{
type: flt(64,IEEE)
alias: "ObstacleDataA4_time"
flags: OUTPUT|READONLY
desc: "ObstacleDataA4 Time"
unit: "s"
value: 0.0
}





endgroup -- block-group "RX"



endgroup -- block-group "ObstacleDataA4"



group "ObstacleDataA5" -- subsystem-group
{
     flags: COLLAPSED
}



group "RX" -- subsystem-group
{
     flags: COLLAPSED
}


CANMMCAN_2_RX_Msg_28_Sgn_1
{
type: UINT(8)
alias: "ObstacleID"
flags: OUTPUT|READONLY
desc: "New obstacles are given the last used free ID"
unit: ""
value: 0
}




CANMMCAN_2_RX_Msg_28_Sgn_2
{
type: flt(64,IEEE)
alias: "ObstaclePosX"
flags: OUTPUT|READONLY
desc: ""
unit: "m"
value: 0
}




CANMMCAN_2_RX_Msg_28_Sgn_3
{
type: UINT(8)
alias: "reserved_4"
flags: OUTPUT|READONLY
desc: ""
unit: ""
value: 0
}




CANMMCAN_2_RX_Msg_28_Sgn_4
{
type: flt(64,IEEE)
alias: "ObstaclePosY"
flags: OUTPUT|READONLY
desc: ""
unit: "m"
value: 0
}




CANMMCAN_2_RX_Msg_28_Sgn_5
{
type: UINT(8)
alias: "BlinkerInfo"
flags: OUTPUT|READONLY
desc: ""
unit: "enum"
value: 0
}




CANMMCAN_2_RX_Msg_28_Sgn_6
{
type: UINT(8)
alias: "Move_in_and_Out"
flags: OUTPUT|READONLY
desc: "The signal is based on our estimation of where the target is now relatively to the lanes, its rate of change, and our estimation of where it is going to be within one second.  "
unit: "enum"
value: 0
}




CANMMCAN_2_RX_Msg_28_Sgn_7
{
type: flt(64,IEEE)
alias: "ObstacleVelX"
flags: OUTPUT|READONLY
desc: ""
unit: "m/sec"
value: 0
}




CANMMCAN_2_RX_Msg_28_Sgn_8
{
type: UINT(8)
alias: "ObstacleType"
flags: OUTPUT|READONLY
desc: ""
unit: "enum"
value: 0
}




CANMMCAN_2_RX_Msg_28_Sgn_9
{
type: UINT(8)
alias: "reserved_1"
flags: OUTPUT|READONLY
desc: ""
unit: ""
value: 0
}




CANMMCAN_2_RX_Msg_28_Sgn_10
{
type: UINT(8)
alias: "ObstacleStatus"
flags: OUTPUT|READONLY
desc: ""
unit: "enum"
value: 0
}




CANMMCAN_2_RX_Msg_28_Sgn_11
{
type: UINT(8)
alias: "ObstacleBrakeLights"
flags: OUTPUT|READONLY
desc: "0 = off or not identifined 1 = on"
unit: "bool"
value: 0
}




CANMMCAN_2_RX_Msg_28_Sgn_12
{
type: UINT(8)
alias: "reserved_2"
flags: OUTPUT|READONLY
desc: ""
unit: ""
value: 0
}




CANMMCAN_2_RX_Msg_28_Sgn_13
{
type: UINT(8)
alias: "ObstacleValid"
flags: OUTPUT|READONLY
desc: ""
unit: "bool"
value: 0
}




CANMMCAN_2_MIDRX[37]
{
type: UINT(32)
alias: "ObstacleDataA5_ID"
flags: OUTPUT|READONLY
desc: "Message ID"
unit: ""
value: 1861
}




CANMMCAN_2_MIDFRX[37]
{
type: UINT(8)
alias: "ObstacleDataA5_IDFormat"
flags: OUTPUT|READONLY
desc: "Message ID Format"
unit: ""
value: 0
}




CANMMCAN_2_RXLEN[37]
{
type: UINT(8)
alias: "ObstacleDataA5_Length"
flags: OUTPUT|READONLY
desc: "Message Length"
unit: ""
value: 8
}




CANMMCAN_2_RXsta[37]
{
type: UINT(8)
alias: "ObstacleDataA5_status"
flags: OUTPUT|READONLY
desc: "ObstacleDataA5 Status"
unit: ""
value: 0
}




CANMMCAN_2_RXdt[37]
{
type: flt(64,IEEE)
alias: "ObstacleDataA5_dt"
flags: OUTPUT|READONLY
desc: "ObstacleDataA5 DeltaTime"
unit: "s"
value: 0
}




CANMMCAN_2_RXt[37]
{
type: flt(64,IEEE)
alias: "ObstacleDataA5_time"
flags: OUTPUT|READONLY
desc: "ObstacleDataA5 Time"
unit: "s"
value: 0.0
}





endgroup -- block-group "RX"



endgroup -- block-group "ObstacleDataA5"



group "ObstacleDataA6" -- subsystem-group
{
     flags: COLLAPSED
}



group "RX" -- subsystem-group
{
     flags: COLLAPSED
}


CANMMCAN_2_RX_Msg_29_Sgn_1
{
type: UINT(8)
alias: "ObstacleID"
flags: OUTPUT|READONLY
desc: "New obstacles are given the last used free ID"
unit: ""
value: 0
}




CANMMCAN_2_RX_Msg_29_Sgn_2
{
type: flt(64,IEEE)
alias: "ObstaclePosX"
flags: OUTPUT|READONLY
desc: ""
unit: "m"
value: 0
}




CANMMCAN_2_RX_Msg_29_Sgn_3
{
type: UINT(8)
alias: "reserved_4"
flags: OUTPUT|READONLY
desc: ""
unit: ""
value: 0
}




CANMMCAN_2_RX_Msg_29_Sgn_4
{
type: flt(64,IEEE)
alias: "ObstaclePosY"
flags: OUTPUT|READONLY
desc: ""
unit: "m"
value: 0
}




CANMMCAN_2_RX_Msg_29_Sgn_5
{
type: UINT(8)
alias: "BlinkerInfo"
flags: OUTPUT|READONLY
desc: ""
unit: "enum"
value: 0
}




CANMMCAN_2_RX_Msg_29_Sgn_6
{
type: UINT(8)
alias: "Move_in_and_Out"
flags: OUTPUT|READONLY
desc: "The signal is based on our estimation of where the target is now relatively to the lanes, its rate of change, and our estimation of where it is going to be within one second.  "
unit: "enum"
value: 0
}




CANMMCAN_2_RX_Msg_29_Sgn_7
{
type: flt(64,IEEE)
alias: "ObstacleVelX"
flags: OUTPUT|READONLY
desc: ""
unit: "m/sec"
value: 0
}




CANMMCAN_2_RX_Msg_29_Sgn_8
{
type: UINT(8)
alias: "ObstacleType"
flags: OUTPUT|READONLY
desc: ""
unit: "enum"
value: 0
}




CANMMCAN_2_RX_Msg_29_Sgn_9
{
type: UINT(8)
alias: "reserved_1"
flags: OUTPUT|READONLY
desc: ""
unit: ""
value: 0
}




CANMMCAN_2_RX_Msg_29_Sgn_10
{
type: UINT(8)
alias: "ObstacleStatus"
flags: OUTPUT|READONLY
desc: ""
unit: "enum"
value: 0
}




CANMMCAN_2_RX_Msg_29_Sgn_11
{
type: UINT(8)
alias: "ObstacleBrakeLights"
flags: OUTPUT|READONLY
desc: "0 = off or not identifined 1 = on"
unit: "bool"
value: 0
}




CANMMCAN_2_RX_Msg_29_Sgn_12
{
type: UINT(8)
alias: "reserved_2"
flags: OUTPUT|READONLY
desc: ""
unit: ""
value: 0
}




CANMMCAN_2_RX_Msg_29_Sgn_13
{
type: UINT(8)
alias: "ObstacleValid"
flags: OUTPUT|READONLY
desc: ""
unit: "bool"
value: 0
}




CANMMCAN_2_MIDRX[40]
{
type: UINT(32)
alias: "ObstacleDataA6_ID"
flags: OUTPUT|READONLY
desc: "Message ID"
unit: ""
value: 1864
}




CANMMCAN_2_MIDFRX[40]
{
type: UINT(8)
alias: "ObstacleDataA6_IDFormat"
flags: OUTPUT|READONLY
desc: "Message ID Format"
unit: ""
value: 0
}




CANMMCAN_2_RXLEN[40]
{
type: UINT(8)
alias: "ObstacleDataA6_Length"
flags: OUTPUT|READONLY
desc: "Message Length"
unit: ""
value: 8
}




CANMMCAN_2_RXsta[40]
{
type: UINT(8)
alias: "ObstacleDataA6_status"
flags: OUTPUT|READONLY
desc: "ObstacleDataA6 Status"
unit: ""
value: 0
}




CANMMCAN_2_RXdt[40]
{
type: flt(64,IEEE)
alias: "ObstacleDataA6_dt"
flags: OUTPUT|READONLY
desc: "ObstacleDataA6 DeltaTime"
unit: "s"
value: 0
}




CANMMCAN_2_RXt[40]
{
type: flt(64,IEEE)
alias: "ObstacleDataA6_time"
flags: OUTPUT|READONLY
desc: "ObstacleDataA6 Time"
unit: "s"
value: 0.0
}





endgroup -- block-group "RX"



endgroup -- block-group "ObstacleDataA6"



group "ObstacleDataA7" -- subsystem-group
{
     flags: COLLAPSED
}



group "RX" -- subsystem-group
{
     flags: COLLAPSED
}


CANMMCAN_2_RX_Msg_30_Sgn_1
{
type: UINT(8)
alias: "ObstacleID"
flags: OUTPUT|READONLY
desc: "New obstacles are given the last used free ID"
unit: ""
value: 0
}




CANMMCAN_2_RX_Msg_30_Sgn_2
{
type: flt(64,IEEE)
alias: "ObstaclePosX"
flags: OUTPUT|READONLY
desc: ""
unit: "m"
value: 0
}




CANMMCAN_2_RX_Msg_30_Sgn_3
{
type: UINT(8)
alias: "reserved_4"
flags: OUTPUT|READONLY
desc: ""
unit: ""
value: 0
}




CANMMCAN_2_RX_Msg_30_Sgn_4
{
type: flt(64,IEEE)
alias: "ObstaclePosY"
flags: OUTPUT|READONLY
desc: ""
unit: "m"
value: 0
}




CANMMCAN_2_RX_Msg_30_Sgn_5
{
type: UINT(8)
alias: "BlinkerInfo"
flags: OUTPUT|READONLY
desc: ""
unit: "enum"
value: 0
}




CANMMCAN_2_RX_Msg_30_Sgn_6
{
type: UINT(8)
alias: "Move_in_and_Out"
flags: OUTPUT|READONLY
desc: "The signal is based on our estimation of where the target is now relatively to the lanes, its rate of change, and our estimation of where it is going to be within one second.  "
unit: "enum"
value: 0
}




CANMMCAN_2_RX_Msg_30_Sgn_7
{
type: flt(64,IEEE)
alias: "ObstacleVelX"
flags: OUTPUT|READONLY
desc: ""
unit: "m/sec"
value: 0
}




CANMMCAN_2_RX_Msg_30_Sgn_8
{
type: UINT(8)
alias: "ObstacleType"
flags: OUTPUT|READONLY
desc: ""
unit: "enum"
value: 0
}




CANMMCAN_2_RX_Msg_30_Sgn_9
{
type: UINT(8)
alias: "reserved_1"
flags: OUTPUT|READONLY
desc: ""
unit: ""
value: 0
}




CANMMCAN_2_RX_Msg_30_Sgn_10
{
type: UINT(8)
alias: "ObstacleStatus"
flags: OUTPUT|READONLY
desc: ""
unit: "enum"
value: 0
}




CANMMCAN_2_RX_Msg_30_Sgn_11
{
type: UINT(8)
alias: "ObstacleBrakeLights"
flags: OUTPUT|READONLY
desc: "0 = off or not identifined 1 = on"
unit: "bool"
value: 0
}




CANMMCAN_2_RX_Msg_30_Sgn_12
{
type: UINT(8)
alias: "reserved_2"
flags: OUTPUT|READONLY
desc: ""
unit: ""
value: 0
}




CANMMCAN_2_RX_Msg_30_Sgn_13
{
type: UINT(8)
alias: "ObstacleValid"
flags: OUTPUT|READONLY
desc: ""
unit: "bool"
value: 0
}




CANMMCAN_2_MIDRX[43]
{
type: UINT(32)
alias: "ObstacleDataA7_ID"
flags: OUTPUT|READONLY
desc: "Message ID"
unit: ""
value: 1867
}




CANMMCAN_2_MIDFRX[43]
{
type: UINT(8)
alias: "ObstacleDataA7_IDFormat"
flags: OUTPUT|READONLY
desc: "Message ID Format"
unit: ""
value: 0
}




CANMMCAN_2_RXLEN[43]
{
type: UINT(8)
alias: "ObstacleDataA7_Length"
flags: OUTPUT|READONLY
desc: "Message Length"
unit: ""
value: 8
}




CANMMCAN_2_RXsta[43]
{
type: UINT(8)
alias: "ObstacleDataA7_status"
flags: OUTPUT|READONLY
desc: "ObstacleDataA7 Status"
unit: ""
value: 0
}




CANMMCAN_2_RXdt[43]
{
type: flt(64,IEEE)
alias: "ObstacleDataA7_dt"
flags: OUTPUT|READONLY
desc: "ObstacleDataA7 DeltaTime"
unit: "s"
value: 0
}




CANMMCAN_2_RXt[43]
{
type: flt(64,IEEE)
alias: "ObstacleDataA7_time"
flags: OUTPUT|READONLY
desc: "ObstacleDataA7 Time"
unit: "s"
value: 0.0
}





endgroup -- block-group "RX"



endgroup -- block-group "ObstacleDataA7"



group "ObstacleDataA8" -- subsystem-group
{
     flags: COLLAPSED
}



group "RX" -- subsystem-group
{
     flags: COLLAPSED
}


CANMMCAN_2_RX_Msg_31_Sgn_1
{
type: UINT(8)
alias: "ObstacleID"
flags: OUTPUT|READONLY
desc: "New obstacles are given the last used free ID"
unit: ""
value: 0
}




CANMMCAN_2_RX_Msg_31_Sgn_2
{
type: flt(64,IEEE)
alias: "ObstaclePosX"
flags: OUTPUT|READONLY
desc: ""
unit: "m"
value: 0
}




CANMMCAN_2_RX_Msg_31_Sgn_3
{
type: UINT(8)
alias: "reserved_4"
flags: OUTPUT|READONLY
desc: ""
unit: ""
value: 0
}




CANMMCAN_2_RX_Msg_31_Sgn_4
{
type: flt(64,IEEE)
alias: "ObstaclePosY"
flags: OUTPUT|READONLY
desc: ""
unit: "m"
value: 0
}




CANMMCAN_2_RX_Msg_31_Sgn_5
{
type: UINT(8)
alias: "BlinkerInfo"
flags: OUTPUT|READONLY
desc: ""
unit: "enum"
value: 0
}




CANMMCAN_2_RX_Msg_31_Sgn_6
{
type: UINT(8)
alias: "Move_in_and_Out"
flags: OUTPUT|READONLY
desc: "The signal is based on our estimation of where the target is now relatively to the lanes, its rate of change, and our estimation of where it is going to be within one second.  "
unit: "enum"
value: 0
}




CANMMCAN_2_RX_Msg_31_Sgn_7
{
type: flt(64,IEEE)
alias: "ObstacleVelX"
flags: OUTPUT|READONLY
desc: ""
unit: "m/sec"
value: 0
}




CANMMCAN_2_RX_Msg_31_Sgn_8
{
type: UINT(8)
alias: "ObstacleType"
flags: OUTPUT|READONLY
desc: ""
unit: "enum"
value: 0
}




CANMMCAN_2_RX_Msg_31_Sgn_9
{
type: UINT(8)
alias: "reserved_1"
flags: OUTPUT|READONLY
desc: ""
unit: ""
value: 0
}




CANMMCAN_2_RX_Msg_31_Sgn_10
{
type: UINT(8)
alias: "ObstacleStatus"
flags: OUTPUT|READONLY
desc: ""
unit: "enum"
value: 0
}




CANMMCAN_2_RX_Msg_31_Sgn_11
{
type: UINT(8)
alias: "ObstacleBrakeLights"
flags: OUTPUT|READONLY
desc: "0 = off or not identifined 1 = on"
unit: "bool"
value: 0
}




CANMMCAN_2_RX_Msg_31_Sgn_12
{
type: UINT(8)
alias: "reserved_2"
flags: OUTPUT|READONLY
desc: ""
unit: ""
value: 0
}




CANMMCAN_2_RX_Msg_31_Sgn_13
{
type: UINT(8)
alias: "ObstacleValid"
flags: OUTPUT|READONLY
desc: ""
unit: "bool"
value: 0
}




CANMMCAN_2_MIDRX[46]
{
type: UINT(32)
alias: "ObstacleDataA8_ID"
flags: OUTPUT|READONLY
desc: "Message ID"
unit: ""
value: 1870
}




CANMMCAN_2_MIDFRX[46]
{
type: UINT(8)
alias: "ObstacleDataA8_IDFormat"
flags: OUTPUT|READONLY
desc: "Message ID Format"
unit: ""
value: 0
}




CANMMCAN_2_RXLEN[46]
{
type: UINT(8)
alias: "ObstacleDataA8_Length"
flags: OUTPUT|READONLY
desc: "Message Length"
unit: ""
value: 8
}




CANMMCAN_2_RXsta[46]
{
type: UINT(8)
alias: "ObstacleDataA8_status"
flags: OUTPUT|READONLY
desc: "ObstacleDataA8 Status"
unit: ""
value: 0
}




CANMMCAN_2_RXdt[46]
{
type: flt(64,IEEE)
alias: "ObstacleDataA8_dt"
flags: OUTPUT|READONLY
desc: "ObstacleDataA8 DeltaTime"
unit: "s"
value: 0
}




CANMMCAN_2_RXt[46]
{
type: flt(64,IEEE)
alias: "ObstacleDataA8_time"
flags: OUTPUT|READONLY
desc: "ObstacleDataA8 Time"
unit: "s"
value: 0.0
}





endgroup -- block-group "RX"



endgroup -- block-group "ObstacleDataA8"



group "ObstacleDataA9" -- subsystem-group
{
     flags: COLLAPSED
}



group "RX" -- subsystem-group
{
     flags: COLLAPSED
}


CANMMCAN_2_RX_Msg_32_Sgn_1
{
type: UINT(8)
alias: "ObstacleID"
flags: OUTPUT|READONLY
desc: "New obstacles are given the last used free ID"
unit: ""
value: 0
}




CANMMCAN_2_RX_Msg_32_Sgn_2
{
type: flt(64,IEEE)
alias: "ObstaclePosX"
flags: OUTPUT|READONLY
desc: ""
unit: "m"
value: 0
}




CANMMCAN_2_RX_Msg_32_Sgn_3
{
type: UINT(8)
alias: "reserved_4"
flags: OUTPUT|READONLY
desc: ""
unit: ""
value: 0
}




CANMMCAN_2_RX_Msg_32_Sgn_4
{
type: flt(64,IEEE)
alias: "ObstaclePosY"
flags: OUTPUT|READONLY
desc: ""
unit: "m"
value: 0
}




CANMMCAN_2_RX_Msg_32_Sgn_5
{
type: UINT(8)
alias: "BlinkerInfo"
flags: OUTPUT|READONLY
desc: ""
unit: "enum"
value: 0
}




CANMMCAN_2_RX_Msg_32_Sgn_6
{
type: UINT(8)
alias: "Move_in_and_Out"
flags: OUTPUT|READONLY
desc: "The signal is based on our estimation of where the target is now relatively to the lanes, its rate of change, and our estimation of where it is going to be within one second.  "
unit: "enum"
value: 0
}




CANMMCAN_2_RX_Msg_32_Sgn_7
{
type: flt(64,IEEE)
alias: "ObstacleVelX"
flags: OUTPUT|READONLY
desc: ""
unit: "m/sec"
value: 0
}




CANMMCAN_2_RX_Msg_32_Sgn_8
{
type: UINT(8)
alias: "ObstacleType"
flags: OUTPUT|READONLY
desc: ""
unit: "enum"
value: 0
}




CANMMCAN_2_RX_Msg_32_Sgn_9
{
type: UINT(8)
alias: "reserved_1"
flags: OUTPUT|READONLY
desc: ""
unit: ""
value: 0
}




CANMMCAN_2_RX_Msg_32_Sgn_10
{
type: UINT(8)
alias: "ObstacleStatus"
flags: OUTPUT|READONLY
desc: ""
unit: "enum"
value: 0
}




CANMMCAN_2_RX_Msg_32_Sgn_11
{
type: UINT(8)
alias: "ObstacleBrakeLights"
flags: OUTPUT|READONLY
desc: "0 = off or not identifined 1 = on"
unit: "bool"
value: 0
}




CANMMCAN_2_RX_Msg_32_Sgn_12
{
type: UINT(8)
alias: "reserved_2"
flags: OUTPUT|READONLY
desc: ""
unit: ""
value: 0
}




CANMMCAN_2_RX_Msg_32_Sgn_13
{
type: UINT(8)
alias: "ObstacleValid"
flags: OUTPUT|READONLY
desc: ""
unit: "bool"
value: 0
}




CANMMCAN_2_MIDRX[49]
{
type: UINT(32)
alias: "ObstacleDataA9_ID"
flags: OUTPUT|READONLY
desc: "Message ID"
unit: ""
value: 1873
}




CANMMCAN_2_MIDFRX[49]
{
type: UINT(8)
alias: "ObstacleDataA9_IDFormat"
flags: OUTPUT|READONLY
desc: "Message ID Format"
unit: ""
value: 0
}




CANMMCAN_2_RXLEN[49]
{
type: UINT(8)
alias: "ObstacleDataA9_Length"
flags: OUTPUT|READONLY
desc: "Message Length"
unit: ""
value: 8
}




CANMMCAN_2_RXsta[49]
{
type: UINT(8)
alias: "ObstacleDataA9_status"
flags: OUTPUT|READONLY
desc: "ObstacleDataA9 Status"
unit: ""
value: 0
}




CANMMCAN_2_RXdt[49]
{
type: flt(64,IEEE)
alias: "ObstacleDataA9_dt"
flags: OUTPUT|READONLY
desc: "ObstacleDataA9 DeltaTime"
unit: "s"
value: 0
}




CANMMCAN_2_RXt[49]
{
type: flt(64,IEEE)
alias: "ObstacleDataA9_time"
flags: OUTPUT|READONLY
desc: "ObstacleDataA9 Time"
unit: "s"
value: 0.0
}





endgroup -- block-group "RX"



endgroup -- block-group "ObstacleDataA9"



group "ObstacleDataB1" -- subsystem-group
{
     flags: COLLAPSED
}



group "RX" -- subsystem-group
{
     flags: COLLAPSED
}


CANMMCAN_2_RX_Msg_33_Sgn_1
{
type: flt(64,IEEE)
alias: "ObstacleLength"
flags: OUTPUT|READONLY
desc: ""
unit: "m"
value: 0
}




CANMMCAN_2_RX_Msg_33_Sgn_2
{
type: flt(64,IEEE)
alias: "ObstacleWidth"
flags: OUTPUT|READONLY
desc: ""
unit: "m"
value: 0
}




CANMMCAN_2_RX_Msg_33_Sgn_3
{
type: UINT(8)
alias: "ObstacleAge"
flags: OUTPUT|READONLY
desc: ""
unit: ""
value: 0
}




CANMMCAN_2_RX_Msg_33_Sgn_4
{
type: UINT(8)
alias: "ObstacleLane"
flags: OUTPUT|READONLY
desc: ""
unit: ""
value: 0
}




CANMMCAN_2_RX_Msg_33_Sgn_5
{
type: UINT(8)
alias: "CIPVFlag"
flags: OUTPUT|READONLY
desc: "0 - not CIPV 1 - CIPV"
unit: "bool"
value: 0
}




CANMMCAN_2_RX_Msg_33_Sgn_6
{
type: UINT(8)
alias: "reserved_1"
flags: OUTPUT|READONLY
desc: ""
unit: ""
value: 0
}




CANMMCAN_2_RX_Msg_33_Sgn_7
{
type: flt(64,IEEE)
alias: "RadarPosX"
flags: OUTPUT|READONLY
desc: ""
unit: "m"
value: 0
}




CANMMCAN_2_RX_Msg_33_Sgn_8
{
type: flt(64,IEEE)
alias: "RadarVelX"
flags: OUTPUT|READONLY
desc: ""
unit: "m/sec"
value: 0
}




CANMMCAN_2_RX_Msg_33_Sgn_9
{
type: UINT(8)
alias: "RadarMatchConfidence"
flags: OUTPUT|READONLY
desc: ""
unit: "enum"
value: 0
}




CANMMCAN_2_RX_Msg_33_Sgn_10
{
type: UINT(8)
alias: "reserved_1_b"
flags: OUTPUT|READONLY
desc: ""
unit: ""
value: 0
}




CANMMCAN_2_RX_Msg_33_Sgn_11
{
type: UINT(8)
alias: "MatchedRadarID"
flags: OUTPUT|READONLY
desc: ""
unit: ""
value: 0
}




CANMMCAN_2_RX_Msg_33_Sgn_12
{
type: UINT(8)
alias: "reserved_1_c"
flags: OUTPUT|READONLY
desc: ""
unit: ""
value: 0
}




CANMMCAN_2_MIDRX[26]
{
type: UINT(32)
alias: "ObstacleDataB1_ID"
flags: OUTPUT|READONLY
desc: "Message ID"
unit: ""
value: 1850
}




CANMMCAN_2_MIDFRX[26]
{
type: UINT(8)
alias: "ObstacleDataB1_IDFormat"
flags: OUTPUT|READONLY
desc: "Message ID Format"
unit: ""
value: 0
}




CANMMCAN_2_RXLEN[26]
{
type: UINT(8)
alias: "ObstacleDataB1_Length"
flags: OUTPUT|READONLY
desc: "Message Length"
unit: ""
value: 8
}




CANMMCAN_2_RXsta[26]
{
type: UINT(8)
alias: "ObstacleDataB1_status"
flags: OUTPUT|READONLY
desc: "ObstacleDataB1 Status"
unit: ""
value: 0
}




CANMMCAN_2_RXdt[26]
{
type: flt(64,IEEE)
alias: "ObstacleDataB1_dt"
flags: OUTPUT|READONLY
desc: "ObstacleDataB1 DeltaTime"
unit: "s"
value: 0
}




CANMMCAN_2_RXt[26]
{
type: flt(64,IEEE)
alias: "ObstacleDataB1_time"
flags: OUTPUT|READONLY
desc: "ObstacleDataB1 Time"
unit: "s"
value: 0.0
}





endgroup -- block-group "RX"



endgroup -- block-group "ObstacleDataB1"



group "ObstacleDataB10" -- subsystem-group
{
     flags: COLLAPSED
}



group "RX" -- subsystem-group
{
     flags: COLLAPSED
}


CANMMCAN_2_RX_Msg_34_Sgn_1
{
type: flt(64,IEEE)
alias: "ObstacleLength"
flags: OUTPUT|READONLY
desc: ""
unit: "m"
value: 0
}




CANMMCAN_2_RX_Msg_34_Sgn_2
{
type: flt(64,IEEE)
alias: "ObstacleWidth"
flags: OUTPUT|READONLY
desc: ""
unit: "m"
value: 0
}




CANMMCAN_2_RX_Msg_34_Sgn_3
{
type: UINT(8)
alias: "ObstacleAge"
flags: OUTPUT|READONLY
desc: ""
unit: ""
value: 0
}




CANMMCAN_2_RX_Msg_34_Sgn_4
{
type: UINT(8)
alias: "ObstacleLane"
flags: OUTPUT|READONLY
desc: ""
unit: ""
value: 0
}




CANMMCAN_2_RX_Msg_34_Sgn_5
{
type: UINT(8)
alias: "CIPVFlag"
flags: OUTPUT|READONLY
desc: "0 - not CIPV 1 - CIPV"
unit: "bool"
value: 0
}




CANMMCAN_2_RX_Msg_34_Sgn_6
{
type: UINT(8)
alias: "reserved_1"
flags: OUTPUT|READONLY
desc: ""
unit: ""
value: 0
}




CANMMCAN_2_RX_Msg_34_Sgn_7
{
type: flt(64,IEEE)
alias: "RadarPosX"
flags: OUTPUT|READONLY
desc: ""
unit: "m"
value: 0
}




CANMMCAN_2_RX_Msg_34_Sgn_8
{
type: flt(64,IEEE)
alias: "RadarVelX"
flags: OUTPUT|READONLY
desc: ""
unit: "m/sec"
value: 0
}




CANMMCAN_2_RX_Msg_34_Sgn_9
{
type: UINT(8)
alias: "RadarMatchConfidence"
flags: OUTPUT|READONLY
desc: ""
unit: "enum"
value: 0
}




CANMMCAN_2_RX_Msg_34_Sgn_10
{
type: UINT(8)
alias: "reserved_1_b"
flags: OUTPUT|READONLY
desc: ""
unit: ""
value: 0
}




CANMMCAN_2_RX_Msg_34_Sgn_11
{
type: UINT(8)
alias: "MatchedRadarID"
flags: OUTPUT|READONLY
desc: ""
unit: ""
value: 0
}




CANMMCAN_2_RX_Msg_34_Sgn_12
{
type: UINT(8)
alias: "reserved_1_c"
flags: OUTPUT|READONLY
desc: ""
unit: ""
value: 0
}




CANMMCAN_2_MIDRX[53]
{
type: UINT(32)
alias: "ObstacleDataB10_ID"
flags: OUTPUT|READONLY
desc: "Message ID"
unit: ""
value: 1877
}




CANMMCAN_2_MIDFRX[53]
{
type: UINT(8)
alias: "ObstacleDataB10_IDFormat"
flags: OUTPUT|READONLY
desc: "Message ID Format"
unit: ""
value: 0
}




CANMMCAN_2_RXLEN[53]
{
type: UINT(8)
alias: "ObstacleDataB10_Length"
flags: OUTPUT|READONLY
desc: "Message Length"
unit: ""
value: 8
}




CANMMCAN_2_RXsta[53]
{
type: UINT(8)
alias: "ObstacleDataB10_status"
flags: OUTPUT|READONLY
desc: "ObstacleDataB10 Status"
unit: ""
value: 0
}




CANMMCAN_2_RXdt[53]
{
type: flt(64,IEEE)
alias: "ObstacleDataB10_dt"
flags: OUTPUT|READONLY
desc: "ObstacleDataB10 DeltaTime"
unit: "s"
value: 0
}




CANMMCAN_2_RXt[53]
{
type: flt(64,IEEE)
alias: "ObstacleDataB10_time"
flags: OUTPUT|READONLY
desc: "ObstacleDataB10 Time"
unit: "s"
value: 0.0
}





endgroup -- block-group "RX"



endgroup -- block-group "ObstacleDataB10"



group "ObstacleDataB2" -- subsystem-group
{
     flags: COLLAPSED
}



group "RX" -- subsystem-group
{
     flags: COLLAPSED
}


CANMMCAN_2_RX_Msg_35_Sgn_1
{
type: flt(64,IEEE)
alias: "ObstacleLength"
flags: OUTPUT|READONLY
desc: ""
unit: "m"
value: 0
}




CANMMCAN_2_RX_Msg_35_Sgn_2
{
type: flt(64,IEEE)
alias: "ObstacleWidth"
flags: OUTPUT|READONLY
desc: ""
unit: "m"
value: 0
}




CANMMCAN_2_RX_Msg_35_Sgn_3
{
type: UINT(8)
alias: "ObstacleAge"
flags: OUTPUT|READONLY
desc: ""
unit: ""
value: 0
}




CANMMCAN_2_RX_Msg_35_Sgn_4
{
type: UINT(8)
alias: "ObstacleLane"
flags: OUTPUT|READONLY
desc: ""
unit: ""
value: 0
}




CANMMCAN_2_RX_Msg_35_Sgn_5
{
type: UINT(8)
alias: "CIPVFlag"
flags: OUTPUT|READONLY
desc: "0 - not CIPV 1 - CIPV"
unit: "bool"
value: 0
}




CANMMCAN_2_RX_Msg_35_Sgn_6
{
type: UINT(8)
alias: "reserved_1"
flags: OUTPUT|READONLY
desc: ""
unit: ""
value: 0
}




CANMMCAN_2_RX_Msg_35_Sgn_7
{
type: flt(64,IEEE)
alias: "RadarPosX"
flags: OUTPUT|READONLY
desc: ""
unit: "m"
value: 0
}




CANMMCAN_2_RX_Msg_35_Sgn_8
{
type: flt(64,IEEE)
alias: "RadarVelX"
flags: OUTPUT|READONLY
desc: ""
unit: "m/sec"
value: 0
}




CANMMCAN_2_RX_Msg_35_Sgn_9
{
type: UINT(8)
alias: "RadarMatchConfidence"
flags: OUTPUT|READONLY
desc: ""
unit: "enum"
value: 0
}




CANMMCAN_2_RX_Msg_35_Sgn_10
{
type: UINT(8)
alias: "reserved_1_b"
flags: OUTPUT|READONLY
desc: ""
unit: ""
value: 0
}




CANMMCAN_2_RX_Msg_35_Sgn_11
{
type: UINT(8)
alias: "MatchedRadarID"
flags: OUTPUT|READONLY
desc: ""
unit: ""
value: 0
}




CANMMCAN_2_RX_Msg_35_Sgn_12
{
type: UINT(8)
alias: "reserved_1_c"
flags: OUTPUT|READONLY
desc: ""
unit: ""
value: 0
}




CANMMCAN_2_MIDRX[29]
{
type: UINT(32)
alias: "ObstacleDataB2_ID"
flags: OUTPUT|READONLY
desc: "Message ID"
unit: ""
value: 1853
}




CANMMCAN_2_MIDFRX[29]
{
type: UINT(8)
alias: "ObstacleDataB2_IDFormat"
flags: OUTPUT|READONLY
desc: "Message ID Format"
unit: ""
value: 0
}




CANMMCAN_2_RXLEN[29]
{
type: UINT(8)
alias: "ObstacleDataB2_Length"
flags: OUTPUT|READONLY
desc: "Message Length"
unit: ""
value: 8
}




CANMMCAN_2_RXsta[29]
{
type: UINT(8)
alias: "ObstacleDataB2_status"
flags: OUTPUT|READONLY
desc: "ObstacleDataB2 Status"
unit: ""
value: 0
}




CANMMCAN_2_RXdt[29]
{
type: flt(64,IEEE)
alias: "ObstacleDataB2_dt"
flags: OUTPUT|READONLY
desc: "ObstacleDataB2 DeltaTime"
unit: "s"
value: 0
}




CANMMCAN_2_RXt[29]
{
type: flt(64,IEEE)
alias: "ObstacleDataB2_time"
flags: OUTPUT|READONLY
desc: "ObstacleDataB2 Time"
unit: "s"
value: 0.0
}





endgroup -- block-group "RX"



endgroup -- block-group "ObstacleDataB2"



group "ObstacleDataB3" -- subsystem-group
{
     flags: COLLAPSED
}



group "RX" -- subsystem-group
{
     flags: COLLAPSED
}


CANMMCAN_2_RX_Msg_36_Sgn_1
{
type: flt(64,IEEE)
alias: "ObstacleLength"
flags: OUTPUT|READONLY
desc: ""
unit: "m"
value: 0
}




CANMMCAN_2_RX_Msg_36_Sgn_2
{
type: flt(64,IEEE)
alias: "ObstacleWidth"
flags: OUTPUT|READONLY
desc: ""
unit: "m"
value: 0
}




CANMMCAN_2_RX_Msg_36_Sgn_3
{
type: UINT(8)
alias: "ObstacleAge"
flags: OUTPUT|READONLY
desc: ""
unit: ""
value: 0
}




CANMMCAN_2_RX_Msg_36_Sgn_4
{
type: UINT(8)
alias: "ObstacleLane"
flags: OUTPUT|READONLY
desc: ""
unit: ""
value: 0
}




CANMMCAN_2_RX_Msg_36_Sgn_5
{
type: UINT(8)
alias: "CIPVFlag"
flags: OUTPUT|READONLY
desc: "0 - not CIPV 1 - CIPV"
unit: "bool"
value: 0
}




CANMMCAN_2_RX_Msg_36_Sgn_6
{
type: UINT(8)
alias: "reserved_1"
flags: OUTPUT|READONLY
desc: ""
unit: ""
value: 0
}




CANMMCAN_2_RX_Msg_36_Sgn_7
{
type: flt(64,IEEE)
alias: "RadarPosX"
flags: OUTPUT|READONLY
desc: ""
unit: "m"
value: 0
}




CANMMCAN_2_RX_Msg_36_Sgn_8
{
type: flt(64,IEEE)
alias: "RadarVelX"
flags: OUTPUT|READONLY
desc: ""
unit: "m/sec"
value: 0
}




CANMMCAN_2_RX_Msg_36_Sgn_9
{
type: UINT(8)
alias: "RadarMatchConfidence"
flags: OUTPUT|READONLY
desc: ""
unit: "enum"
value: 0
}




CANMMCAN_2_RX_Msg_36_Sgn_10
{
type: UINT(8)
alias: "reserved_1_b"
flags: OUTPUT|READONLY
desc: ""
unit: ""
value: 0
}




CANMMCAN_2_RX_Msg_36_Sgn_11
{
type: UINT(8)
alias: "MatchedRadarID"
flags: OUTPUT|READONLY
desc: ""
unit: ""
value: 0
}




CANMMCAN_2_RX_Msg_36_Sgn_12
{
type: UINT(8)
alias: "reserved_1_c"
flags: OUTPUT|READONLY
desc: ""
unit: ""
value: 0
}




CANMMCAN_2_MIDRX[32]
{
type: UINT(32)
alias: "ObstacleDataB3_ID"
flags: OUTPUT|READONLY
desc: "Message ID"
unit: ""
value: 1856
}




CANMMCAN_2_MIDFRX[32]
{
type: UINT(8)
alias: "ObstacleDataB3_IDFormat"
flags: OUTPUT|READONLY
desc: "Message ID Format"
unit: ""
value: 0
}




CANMMCAN_2_RXLEN[32]
{
type: UINT(8)
alias: "ObstacleDataB3_Length"
flags: OUTPUT|READONLY
desc: "Message Length"
unit: ""
value: 8
}




CANMMCAN_2_RXsta[32]
{
type: UINT(8)
alias: "ObstacleDataB3_status"
flags: OUTPUT|READONLY
desc: "ObstacleDataB3 Status"
unit: ""
value: 0
}




CANMMCAN_2_RXdt[32]
{
type: flt(64,IEEE)
alias: "ObstacleDataB3_dt"
flags: OUTPUT|READONLY
desc: "ObstacleDataB3 DeltaTime"
unit: "s"
value: 0
}




CANMMCAN_2_RXt[32]
{
type: flt(64,IEEE)
alias: "ObstacleDataB3_time"
flags: OUTPUT|READONLY
desc: "ObstacleDataB3 Time"
unit: "s"
value: 0.0
}





endgroup -- block-group "RX"



endgroup -- block-group "ObstacleDataB3"



group "ObstacleDataB4" -- subsystem-group
{
     flags: COLLAPSED
}



group "RX" -- subsystem-group
{
     flags: COLLAPSED
}


CANMMCAN_2_RX_Msg_37_Sgn_1
{
type: flt(64,IEEE)
alias: "ObstacleLength"
flags: OUTPUT|READONLY
desc: ""
unit: "m"
value: 0
}




CANMMCAN_2_RX_Msg_37_Sgn_2
{
type: flt(64,IEEE)
alias: "ObstacleWidth"
flags: OUTPUT|READONLY
desc: ""
unit: "m"
value: 0
}




CANMMCAN_2_RX_Msg_37_Sgn_3
{
type: UINT(8)
alias: "ObstacleAge"
flags: OUTPUT|READONLY
desc: ""
unit: ""
value: 0
}




CANMMCAN_2_RX_Msg_37_Sgn_4
{
type: UINT(8)
alias: "ObstacleLane"
flags: OUTPUT|READONLY
desc: ""
unit: ""
value: 0
}




CANMMCAN_2_RX_Msg_37_Sgn_5
{
type: UINT(8)
alias: "CIPVFlag"
flags: OUTPUT|READONLY
desc: "0 - not CIPV 1 - CIPV"
unit: "bool"
value: 0
}




CANMMCAN_2_RX_Msg_37_Sgn_6
{
type: UINT(8)
alias: "reserved_1"
flags: OUTPUT|READONLY
desc: ""
unit: ""
value: 0
}




CANMMCAN_2_RX_Msg_37_Sgn_7
{
type: flt(64,IEEE)
alias: "RadarPosX"
flags: OUTPUT|READONLY
desc: ""
unit: "m"
value: 0
}




CANMMCAN_2_RX_Msg_37_Sgn_8
{
type: flt(64,IEEE)
alias: "RadarVelX"
flags: OUTPUT|READONLY
desc: ""
unit: "m/sec"
value: 0
}




CANMMCAN_2_RX_Msg_37_Sgn_9
{
type: UINT(8)
alias: "RadarMatchConfidence"
flags: OUTPUT|READONLY
desc: ""
unit: "enum"
value: 0
}




CANMMCAN_2_RX_Msg_37_Sgn_10
{
type: UINT(8)
alias: "reserved_1_b"
flags: OUTPUT|READONLY
desc: ""
unit: ""
value: 0
}




CANMMCAN_2_RX_Msg_37_Sgn_11
{
type: UINT(8)
alias: "MatchedRadarID"
flags: OUTPUT|READONLY
desc: ""
unit: ""
value: 0
}




CANMMCAN_2_RX_Msg_37_Sgn_12
{
type: UINT(8)
alias: "reserved_1_c"
flags: OUTPUT|READONLY
desc: ""
unit: ""
value: 0
}




CANMMCAN_2_MIDRX[35]
{
type: UINT(32)
alias: "ObstacleDataB4_ID"
flags: OUTPUT|READONLY
desc: "Message ID"
unit: ""
value: 1859
}




CANMMCAN_2_MIDFRX[35]
{
type: UINT(8)
alias: "ObstacleDataB4_IDFormat"
flags: OUTPUT|READONLY
desc: "Message ID Format"
unit: ""
value: 0
}




CANMMCAN_2_RXLEN[35]
{
type: UINT(8)
alias: "ObstacleDataB4_Length"
flags: OUTPUT|READONLY
desc: "Message Length"
unit: ""
value: 8
}




CANMMCAN_2_RXsta[35]
{
type: UINT(8)
alias: "ObstacleDataB4_status"
flags: OUTPUT|READONLY
desc: "ObstacleDataB4 Status"
unit: ""
value: 0
}




CANMMCAN_2_RXdt[35]
{
type: flt(64,IEEE)
alias: "ObstacleDataB4_dt"
flags: OUTPUT|READONLY
desc: "ObstacleDataB4 DeltaTime"
unit: "s"
value: 0
}




CANMMCAN_2_RXt[35]
{
type: flt(64,IEEE)
alias: "ObstacleDataB4_time"
flags: OUTPUT|READONLY
desc: "ObstacleDataB4 Time"
unit: "s"
value: 0.0
}





endgroup -- block-group "RX"



endgroup -- block-group "ObstacleDataB4"



group "ObstacleDataB5" -- subsystem-group
{
     flags: COLLAPSED
}



group "RX" -- subsystem-group
{
     flags: COLLAPSED
}


CANMMCAN_2_RX_Msg_38_Sgn_1
{
type: flt(64,IEEE)
alias: "ObstacleLength"
flags: OUTPUT|READONLY
desc: ""
unit: "m"
value: 0
}




CANMMCAN_2_RX_Msg_38_Sgn_2
{
type: flt(64,IEEE)
alias: "ObstacleWidth"
flags: OUTPUT|READONLY
desc: ""
unit: "m"
value: 0
}




CANMMCAN_2_RX_Msg_38_Sgn_3
{
type: UINT(8)
alias: "ObstacleAge"
flags: OUTPUT|READONLY
desc: ""
unit: ""
value: 0
}




CANMMCAN_2_RX_Msg_38_Sgn_4
{
type: UINT(8)
alias: "ObstacleLane"
flags: OUTPUT|READONLY
desc: ""
unit: ""
value: 0
}




CANMMCAN_2_RX_Msg_38_Sgn_5
{
type: UINT(8)
alias: "CIPVFlag"
flags: OUTPUT|READONLY
desc: "0 - not CIPV 1 - CIPV"
unit: "bool"
value: 0
}




CANMMCAN_2_RX_Msg_38_Sgn_6
{
type: UINT(8)
alias: "reserved_1"
flags: OUTPUT|READONLY
desc: ""
unit: ""
value: 0
}




CANMMCAN_2_RX_Msg_38_Sgn_7
{
type: flt(64,IEEE)
alias: "RadarPosX"
flags: OUTPUT|READONLY
desc: ""
unit: "m"
value: 0
}




CANMMCAN_2_RX_Msg_38_Sgn_8
{
type: flt(64,IEEE)
alias: "RadarVelX"
flags: OUTPUT|READONLY
desc: ""
unit: "m/sec"
value: 0
}




CANMMCAN_2_RX_Msg_38_Sgn_9
{
type: UINT(8)
alias: "RadarMatchConfidence"
flags: OUTPUT|READONLY
desc: ""
unit: "enum"
value: 0
}




CANMMCAN_2_RX_Msg_38_Sgn_10
{
type: UINT(8)
alias: "reserved_1_b"
flags: OUTPUT|READONLY
desc: ""
unit: ""
value: 0
}




CANMMCAN_2_RX_Msg_38_Sgn_11
{
type: UINT(8)
alias: "MatchedRadarID"
flags: OUTPUT|READONLY
desc: ""
unit: ""
value: 0
}




CANMMCAN_2_RX_Msg_38_Sgn_12
{
type: UINT(8)
alias: "reserved_1_c"
flags: OUTPUT|READONLY
desc: ""
unit: ""
value: 0
}




CANMMCAN_2_MIDRX[38]
{
type: UINT(32)
alias: "ObstacleDataB5_ID"
flags: OUTPUT|READONLY
desc: "Message ID"
unit: ""
value: 1862
}




CANMMCAN_2_MIDFRX[38]
{
type: UINT(8)
alias: "ObstacleDataB5_IDFormat"
flags: OUTPUT|READONLY
desc: "Message ID Format"
unit: ""
value: 0
}




CANMMCAN_2_RXLEN[38]
{
type: UINT(8)
alias: "ObstacleDataB5_Length"
flags: OUTPUT|READONLY
desc: "Message Length"
unit: ""
value: 8
}




CANMMCAN_2_RXsta[38]
{
type: UINT(8)
alias: "ObstacleDataB5_status"
flags: OUTPUT|READONLY
desc: "ObstacleDataB5 Status"
unit: ""
value: 0
}




CANMMCAN_2_RXdt[38]
{
type: flt(64,IEEE)
alias: "ObstacleDataB5_dt"
flags: OUTPUT|READONLY
desc: "ObstacleDataB5 DeltaTime"
unit: "s"
value: 0
}




CANMMCAN_2_RXt[38]
{
type: flt(64,IEEE)
alias: "ObstacleDataB5_time"
flags: OUTPUT|READONLY
desc: "ObstacleDataB5 Time"
unit: "s"
value: 0.0
}





endgroup -- block-group "RX"



endgroup -- block-group "ObstacleDataB5"



group "ObstacleDataB6" -- subsystem-group
{
     flags: COLLAPSED
}



group "RX" -- subsystem-group
{
     flags: COLLAPSED
}


CANMMCAN_2_RX_Msg_39_Sgn_1
{
type: flt(64,IEEE)
alias: "ObstacleLength"
flags: OUTPUT|READONLY
desc: ""
unit: "m"
value: 0
}




CANMMCAN_2_RX_Msg_39_Sgn_2
{
type: flt(64,IEEE)
alias: "ObstacleWidth"
flags: OUTPUT|READONLY
desc: ""
unit: "m"
value: 0
}




CANMMCAN_2_RX_Msg_39_Sgn_3
{
type: UINT(8)
alias: "ObstacleAge"
flags: OUTPUT|READONLY
desc: ""
unit: ""
value: 0
}




CANMMCAN_2_RX_Msg_39_Sgn_4
{
type: UINT(8)
alias: "ObstacleLane"
flags: OUTPUT|READONLY
desc: ""
unit: ""
value: 0
}




CANMMCAN_2_RX_Msg_39_Sgn_5
{
type: UINT(8)
alias: "CIPVFlag"
flags: OUTPUT|READONLY
desc: "0 - not CIPV 1 - CIPV"
unit: "bool"
value: 0
}




CANMMCAN_2_RX_Msg_39_Sgn_6
{
type: UINT(8)
alias: "reserved_1"
flags: OUTPUT|READONLY
desc: ""
unit: ""
value: 0
}




CANMMCAN_2_RX_Msg_39_Sgn_7
{
type: flt(64,IEEE)
alias: "RadarPosX"
flags: OUTPUT|READONLY
desc: ""
unit: "m"
value: 0
}




CANMMCAN_2_RX_Msg_39_Sgn_8
{
type: flt(64,IEEE)
alias: "RadarVelX"
flags: OUTPUT|READONLY
desc: ""
unit: "m/sec"
value: 0
}




CANMMCAN_2_RX_Msg_39_Sgn_9
{
type: UINT(8)
alias: "RadarMatchConfidence"
flags: OUTPUT|READONLY
desc: ""
unit: "enum"
value: 0
}




CANMMCAN_2_RX_Msg_39_Sgn_10
{
type: UINT(8)
alias: "reserved_1_b"
flags: OUTPUT|READONLY
desc: ""
unit: ""
value: 0
}




CANMMCAN_2_RX_Msg_39_Sgn_11
{
type: UINT(8)
alias: "MatchedRadarID"
flags: OUTPUT|READONLY
desc: ""
unit: ""
value: 0
}




CANMMCAN_2_RX_Msg_39_Sgn_12
{
type: UINT(8)
alias: "reserved_1_c"
flags: OUTPUT|READONLY
desc: ""
unit: ""
value: 0
}




CANMMCAN_2_MIDRX[41]
{
type: UINT(32)
alias: "ObstacleDataB6_ID"
flags: OUTPUT|READONLY
desc: "Message ID"
unit: ""
value: 1865
}




CANMMCAN_2_MIDFRX[41]
{
type: UINT(8)
alias: "ObstacleDataB6_IDFormat"
flags: OUTPUT|READONLY
desc: "Message ID Format"
unit: ""
value: 0
}




CANMMCAN_2_RXLEN[41]
{
type: UINT(8)
alias: "ObstacleDataB6_Length"
flags: OUTPUT|READONLY
desc: "Message Length"
unit: ""
value: 8
}




CANMMCAN_2_RXsta[41]
{
type: UINT(8)
alias: "ObstacleDataB6_status"
flags: OUTPUT|READONLY
desc: "ObstacleDataB6 Status"
unit: ""
value: 0
}




CANMMCAN_2_RXdt[41]
{
type: flt(64,IEEE)
alias: "ObstacleDataB6_dt"
flags: OUTPUT|READONLY
desc: "ObstacleDataB6 DeltaTime"
unit: "s"
value: 0
}




CANMMCAN_2_RXt[41]
{
type: flt(64,IEEE)
alias: "ObstacleDataB6_time"
flags: OUTPUT|READONLY
desc: "ObstacleDataB6 Time"
unit: "s"
value: 0.0
}





endgroup -- block-group "RX"



endgroup -- block-group "ObstacleDataB6"



group "ObstacleDataB7" -- subsystem-group
{
     flags: COLLAPSED
}



group "RX" -- subsystem-group
{
     flags: COLLAPSED
}


CANMMCAN_2_RX_Msg_40_Sgn_1
{
type: flt(64,IEEE)
alias: "ObstacleLength"
flags: OUTPUT|READONLY
desc: ""
unit: "m"
value: 0
}




CANMMCAN_2_RX_Msg_40_Sgn_2
{
type: flt(64,IEEE)
alias: "ObstacleWidth"
flags: OUTPUT|READONLY
desc: ""
unit: "m"
value: 0
}




CANMMCAN_2_RX_Msg_40_Sgn_3
{
type: UINT(8)
alias: "ObstacleAge"
flags: OUTPUT|READONLY
desc: ""
unit: ""
value: 0
}




CANMMCAN_2_RX_Msg_40_Sgn_4
{
type: UINT(8)
alias: "ObstacleLane"
flags: OUTPUT|READONLY
desc: ""
unit: ""
value: 0
}




CANMMCAN_2_RX_Msg_40_Sgn_5
{
type: UINT(8)
alias: "CIPVFlag"
flags: OUTPUT|READONLY
desc: "0 - not CIPV 1 - CIPV"
unit: "bool"
value: 0
}




CANMMCAN_2_RX_Msg_40_Sgn_6
{
type: UINT(8)
alias: "reserved_1"
flags: OUTPUT|READONLY
desc: ""
unit: ""
value: 0
}




CANMMCAN_2_RX_Msg_40_Sgn_7
{
type: flt(64,IEEE)
alias: "RadarPosX"
flags: OUTPUT|READONLY
desc: ""
unit: "m"
value: 0
}




CANMMCAN_2_RX_Msg_40_Sgn_8
{
type: flt(64,IEEE)
alias: "RadarVelX"
flags: OUTPUT|READONLY
desc: ""
unit: "m/sec"
value: 0
}




CANMMCAN_2_RX_Msg_40_Sgn_9
{
type: UINT(8)
alias: "RadarMatchConfidence"
flags: OUTPUT|READONLY
desc: ""
unit: "enum"
value: 0
}




CANMMCAN_2_RX_Msg_40_Sgn_10
{
type: UINT(8)
alias: "reserved_1_b"
flags: OUTPUT|READONLY
desc: ""
unit: ""
value: 0
}




CANMMCAN_2_RX_Msg_40_Sgn_11
{
type: UINT(8)
alias: "MatchedRadarID"
flags: OUTPUT|READONLY
desc: ""
unit: ""
value: 0
}




CANMMCAN_2_RX_Msg_40_Sgn_12
{
type: UINT(8)
alias: "reserved_1_c"
flags: OUTPUT|READONLY
desc: ""
unit: ""
value: 0
}




CANMMCAN_2_MIDRX[44]
{
type: UINT(32)
alias: "ObstacleDataB7_ID"
flags: OUTPUT|READONLY
desc: "Message ID"
unit: ""
value: 1868
}




CANMMCAN_2_MIDFRX[44]
{
type: UINT(8)
alias: "ObstacleDataB7_IDFormat"
flags: OUTPUT|READONLY
desc: "Message ID Format"
unit: ""
value: 0
}




CANMMCAN_2_RXLEN[44]
{
type: UINT(8)
alias: "ObstacleDataB7_Length"
flags: OUTPUT|READONLY
desc: "Message Length"
unit: ""
value: 8
}




CANMMCAN_2_RXsta[44]
{
type: UINT(8)
alias: "ObstacleDataB7_status"
flags: OUTPUT|READONLY
desc: "ObstacleDataB7 Status"
unit: ""
value: 0
}




CANMMCAN_2_RXdt[44]
{
type: flt(64,IEEE)
alias: "ObstacleDataB7_dt"
flags: OUTPUT|READONLY
desc: "ObstacleDataB7 DeltaTime"
unit: "s"
value: 0
}




CANMMCAN_2_RXt[44]
{
type: flt(64,IEEE)
alias: "ObstacleDataB7_time"
flags: OUTPUT|READONLY
desc: "ObstacleDataB7 Time"
unit: "s"
value: 0.0
}





endgroup -- block-group "RX"



endgroup -- block-group "ObstacleDataB7"



group "ObstacleDataB8" -- subsystem-group
{
     flags: COLLAPSED
}



group "RX" -- subsystem-group
{
     flags: COLLAPSED
}


CANMMCAN_2_RX_Msg_41_Sgn_1
{
type: flt(64,IEEE)
alias: "ObstacleLength"
flags: OUTPUT|READONLY
desc: ""
unit: "m"
value: 0
}




CANMMCAN_2_RX_Msg_41_Sgn_2
{
type: flt(64,IEEE)
alias: "ObstacleWidth"
flags: OUTPUT|READONLY
desc: ""
unit: "m"
value: 0
}




CANMMCAN_2_RX_Msg_41_Sgn_3
{
type: UINT(8)
alias: "ObstacleAge"
flags: OUTPUT|READONLY
desc: ""
unit: ""
value: 0
}




CANMMCAN_2_RX_Msg_41_Sgn_4
{
type: UINT(8)
alias: "ObstacleLane"
flags: OUTPUT|READONLY
desc: ""
unit: ""
value: 0
}




CANMMCAN_2_RX_Msg_41_Sgn_5
{
type: UINT(8)
alias: "CIPVFlag"
flags: OUTPUT|READONLY
desc: "0 - not CIPV 1 - CIPV"
unit: "bool"
value: 0
}




CANMMCAN_2_RX_Msg_41_Sgn_6
{
type: UINT(8)
alias: "reserved_1"
flags: OUTPUT|READONLY
desc: ""
unit: ""
value: 0
}




CANMMCAN_2_RX_Msg_41_Sgn_7
{
type: flt(64,IEEE)
alias: "RadarPosX"
flags: OUTPUT|READONLY
desc: ""
unit: "m"
value: 0
}




CANMMCAN_2_RX_Msg_41_Sgn_8
{
type: flt(64,IEEE)
alias: "RadarVelX"
flags: OUTPUT|READONLY
desc: ""
unit: "m/sec"
value: 0
}




CANMMCAN_2_RX_Msg_41_Sgn_9
{
type: UINT(8)
alias: "RadarMatchConfidence"
flags: OUTPUT|READONLY
desc: ""
unit: "enum"
value: 0
}




CANMMCAN_2_RX_Msg_41_Sgn_10
{
type: UINT(8)
alias: "reserved_1_b"
flags: OUTPUT|READONLY
desc: ""
unit: ""
value: 0
}




CANMMCAN_2_RX_Msg_41_Sgn_11
{
type: UINT(8)
alias: "MatchedRadarID"
flags: OUTPUT|READONLY
desc: ""
unit: ""
value: 0
}




CANMMCAN_2_RX_Msg_41_Sgn_12
{
type: UINT(8)
alias: "reserved_1_c"
flags: OUTPUT|READONLY
desc: ""
unit: ""
value: 0
}




CANMMCAN_2_MIDRX[47]
{
type: UINT(32)
alias: "ObstacleDataB8_ID"
flags: OUTPUT|READONLY
desc: "Message ID"
unit: ""
value: 1871
}




CANMMCAN_2_MIDFRX[47]
{
type: UINT(8)
alias: "ObstacleDataB8_IDFormat"
flags: OUTPUT|READONLY
desc: "Message ID Format"
unit: ""
value: 0
}




CANMMCAN_2_RXLEN[47]
{
type: UINT(8)
alias: "ObstacleDataB8_Length"
flags: OUTPUT|READONLY
desc: "Message Length"
unit: ""
value: 8
}




CANMMCAN_2_RXsta[47]
{
type: UINT(8)
alias: "ObstacleDataB8_status"
flags: OUTPUT|READONLY
desc: "ObstacleDataB8 Status"
unit: ""
value: 0
}




CANMMCAN_2_RXdt[47]
{
type: flt(64,IEEE)
alias: "ObstacleDataB8_dt"
flags: OUTPUT|READONLY
desc: "ObstacleDataB8 DeltaTime"
unit: "s"
value: 0
}




CANMMCAN_2_RXt[47]
{
type: flt(64,IEEE)
alias: "ObstacleDataB8_time"
flags: OUTPUT|READONLY
desc: "ObstacleDataB8 Time"
unit: "s"
value: 0.0
}





endgroup -- block-group "RX"



endgroup -- block-group "ObstacleDataB8"



group "ObstacleDataB9" -- subsystem-group
{
     flags: COLLAPSED
}



group "RX" -- subsystem-group
{
     flags: COLLAPSED
}


CANMMCAN_2_RX_Msg_42_Sgn_1
{
type: flt(64,IEEE)
alias: "ObstacleLength"
flags: OUTPUT|READONLY
desc: ""
unit: "m"
value: 0
}




CANMMCAN_2_RX_Msg_42_Sgn_2
{
type: flt(64,IEEE)
alias: "ObstacleWidth"
flags: OUTPUT|READONLY
desc: ""
unit: "m"
value: 0
}




CANMMCAN_2_RX_Msg_42_Sgn_3
{
type: UINT(8)
alias: "ObstacleAge"
flags: OUTPUT|READONLY
desc: ""
unit: ""
value: 0
}




CANMMCAN_2_RX_Msg_42_Sgn_4
{
type: UINT(8)
alias: "ObstacleLane"
flags: OUTPUT|READONLY
desc: ""
unit: ""
value: 0
}




CANMMCAN_2_RX_Msg_42_Sgn_5
{
type: UINT(8)
alias: "CIPVFlag"
flags: OUTPUT|READONLY
desc: "0 - not CIPV 1 - CIPV"
unit: "bool"
value: 0
}




CANMMCAN_2_RX_Msg_42_Sgn_6
{
type: UINT(8)
alias: "reserved_1"
flags: OUTPUT|READONLY
desc: ""
unit: ""
value: 0
}




CANMMCAN_2_RX_Msg_42_Sgn_7
{
type: flt(64,IEEE)
alias: "RadarPosX"
flags: OUTPUT|READONLY
desc: ""
unit: "m"
value: 0
}




CANMMCAN_2_RX_Msg_42_Sgn_8
{
type: flt(64,IEEE)
alias: "RadarVelX"
flags: OUTPUT|READONLY
desc: ""
unit: "m/sec"
value: 0
}




CANMMCAN_2_RX_Msg_42_Sgn_9
{
type: UINT(8)
alias: "RadarMatchConfidence"
flags: OUTPUT|READONLY
desc: ""
unit: "enum"
value: 0
}




CANMMCAN_2_RX_Msg_42_Sgn_10
{
type: UINT(8)
alias: "reserved_1_b"
flags: OUTPUT|READONLY
desc: ""
unit: ""
value: 0
}




CANMMCAN_2_RX_Msg_42_Sgn_11
{
type: UINT(8)
alias: "MatchedRadarID"
flags: OUTPUT|READONLY
desc: ""
unit: ""
value: 0
}




CANMMCAN_2_RX_Msg_42_Sgn_12
{
type: UINT(8)
alias: "reserved_1_c"
flags: OUTPUT|READONLY
desc: ""
unit: ""
value: 0
}




CANMMCAN_2_MIDRX[50]
{
type: UINT(32)
alias: "ObstacleDataB9_ID"
flags: OUTPUT|READONLY
desc: "Message ID"
unit: ""
value: 1874
}




CANMMCAN_2_MIDFRX[50]
{
type: UINT(8)
alias: "ObstacleDataB9_IDFormat"
flags: OUTPUT|READONLY
desc: "Message ID Format"
unit: ""
value: 0
}




CANMMCAN_2_RXLEN[50]
{
type: UINT(8)
alias: "ObstacleDataB9_Length"
flags: OUTPUT|READONLY
desc: "Message Length"
unit: ""
value: 8
}




CANMMCAN_2_RXsta[50]
{
type: UINT(8)
alias: "ObstacleDataB9_status"
flags: OUTPUT|READONLY
desc: "ObstacleDataB9 Status"
unit: ""
value: 0
}




CANMMCAN_2_RXdt[50]
{
type: flt(64,IEEE)
alias: "ObstacleDataB9_dt"
flags: OUTPUT|READONLY
desc: "ObstacleDataB9 DeltaTime"
unit: "s"
value: 0
}




CANMMCAN_2_RXt[50]
{
type: flt(64,IEEE)
alias: "ObstacleDataB9_time"
flags: OUTPUT|READONLY
desc: "ObstacleDataB9 Time"
unit: "s"
value: 0.0
}





endgroup -- block-group "RX"



endgroup -- block-group "ObstacleDataB9"



group "ObstacleDataC1" -- subsystem-group
{
     flags: COLLAPSED
}



group "RX" -- subsystem-group
{
     flags: COLLAPSED
}


CANMMCAN_2_RX_Msg_43_Sgn_1
{
type: flt(64,IEEE)
alias: "ObstacleAngleRate"
flags: OUTPUT|READONLY
desc: ""
unit: "degree"
value: 0
}




CANMMCAN_2_RX_Msg_43_Sgn_2
{
type: flt(64,IEEE)
alias: "ObstacleVelY"
flags: OUTPUT|READONLY
desc: ""
unit: "m/s"
value: 0
}




CANMMCAN_2_RX_Msg_43_Sgn_3
{
type: UINT(8)
alias: "reserved_5"
flags: OUTPUT|READONLY
desc: ""
unit: ""
value: 0
}




CANMMCAN_2_RX_Msg_43_Sgn_4
{
type: flt(64,IEEE)
alias: "Object_Accel_X"
flags: OUTPUT|READONLY
desc: "The longitude acceleration of the object.  Type: 10 bit, signed integer  Range: -14.97 : 14.97 [m/s2] Conversion: (HEX)* 0.03 Invalid value: 200h"
unit: "m/s square"
value: 0
}




CANMMCAN_2_RX_Msg_43_Sgn_5
{
type: UINT(8)
alias: "reserved_2"
flags: OUTPUT|READONLY
desc: ""
unit: ""
value: 0
}




CANMMCAN_2_RX_Msg_43_Sgn_6
{
type: UINT(8)
alias: "ObstacleReplaced"
flags: OUTPUT|READONLY
desc: ""
unit: ""
value: 0
}




CANMMCAN_2_RX_Msg_43_Sgn_7
{
type: UINT(8)
alias: "reserved_3"
flags: OUTPUT|READONLY
desc: ""
unit: ""
value: 0
}




CANMMCAN_2_RX_Msg_43_Sgn_8
{
type: flt(64,IEEE)
alias: "ObstacleAngle"
flags: OUTPUT|READONLY
desc: ""
unit: "degree"
value: 0
}




CANMMCAN_2_MIDRX[27]
{
type: UINT(32)
alias: "ObstacleDataC1_ID"
flags: OUTPUT|READONLY
desc: "Message ID"
unit: ""
value: 1851
}




CANMMCAN_2_MIDFRX[27]
{
type: UINT(8)
alias: "ObstacleDataC1_IDFormat"
flags: OUTPUT|READONLY
desc: "Message ID Format"
unit: ""
value: 0
}




CANMMCAN_2_RXLEN[27]
{
type: UINT(8)
alias: "ObstacleDataC1_Length"
flags: OUTPUT|READONLY
desc: "Message Length"
unit: ""
value: 8
}




CANMMCAN_2_RXsta[27]
{
type: UINT(8)
alias: "ObstacleDataC1_status"
flags: OUTPUT|READONLY
desc: "ObstacleDataC1 Status"
unit: ""
value: 0
}




CANMMCAN_2_RXdt[27]
{
type: flt(64,IEEE)
alias: "ObstacleDataC1_dt"
flags: OUTPUT|READONLY
desc: "ObstacleDataC1 DeltaTime"
unit: "s"
value: 0
}




CANMMCAN_2_RXt[27]
{
type: flt(64,IEEE)
alias: "ObstacleDataC1_time"
flags: OUTPUT|READONLY
desc: "ObstacleDataC1 Time"
unit: "s"
value: 0.0
}





endgroup -- block-group "RX"



endgroup -- block-group "ObstacleDataC1"



group "ObstacleDataC10" -- subsystem-group
{
     flags: COLLAPSED
}



group "RX" -- subsystem-group
{
     flags: COLLAPSED
}


CANMMCAN_2_RX_Msg_44_Sgn_1
{
type: flt(64,IEEE)
alias: "ObstacleAngleRate"
flags: OUTPUT|READONLY
desc: ""
unit: "degree"
value: 0
}




CANMMCAN_2_RX_Msg_44_Sgn_2
{
type: flt(64,IEEE)
alias: "ObstacleVelY"
flags: OUTPUT|READONLY
desc: ""
unit: "m/s"
value: 0
}




CANMMCAN_2_RX_Msg_44_Sgn_3
{
type: UINT(8)
alias: "reserved_5"
flags: OUTPUT|READONLY
desc: ""
unit: ""
value: 0
}




CANMMCAN_2_RX_Msg_44_Sgn_4
{
type: flt(64,IEEE)
alias: "Object_Accel_X"
flags: OUTPUT|READONLY
desc: "The longitude acceleration of the object.  Type: 10 bit, signed integer  Range: -14.97 : 14.97 [m/s2] Conversion: (HEX)* 0.03 Invalid value: 200h"
unit: "m/s square"
value: 0
}




CANMMCAN_2_RX_Msg_44_Sgn_5
{
type: UINT(8)
alias: "reserved_2"
flags: OUTPUT|READONLY
desc: ""
unit: ""
value: 0
}




CANMMCAN_2_RX_Msg_44_Sgn_6
{
type: UINT(8)
alias: "ObstacleReplaced"
flags: OUTPUT|READONLY
desc: ""
unit: ""
value: 0
}




CANMMCAN_2_RX_Msg_44_Sgn_7
{
type: UINT(8)
alias: "reserved_3"
flags: OUTPUT|READONLY
desc: ""
unit: ""
value: 0
}




CANMMCAN_2_RX_Msg_44_Sgn_8
{
type: flt(64,IEEE)
alias: "ObstacleAngle"
flags: OUTPUT|READONLY
desc: ""
unit: "degree"
value: 0
}




CANMMCAN_2_MIDRX[54]
{
type: UINT(32)
alias: "ObstacleDataC10_ID"
flags: OUTPUT|READONLY
desc: "Message ID"
unit: ""
value: 1878
}




CANMMCAN_2_MIDFRX[54]
{
type: UINT(8)
alias: "ObstacleDataC10_IDFormat"
flags: OUTPUT|READONLY
desc: "Message ID Format"
unit: ""
value: 0
}




CANMMCAN_2_RXLEN[54]
{
type: UINT(8)
alias: "ObstacleDataC10_Length"
flags: OUTPUT|READONLY
desc: "Message Length"
unit: ""
value: 8
}




CANMMCAN_2_RXsta[54]
{
type: UINT(8)
alias: "ObstacleDataC10_status"
flags: OUTPUT|READONLY
desc: "ObstacleDataC10 Status"
unit: ""
value: 0
}




CANMMCAN_2_RXdt[54]
{
type: flt(64,IEEE)
alias: "ObstacleDataC10_dt"
flags: OUTPUT|READONLY
desc: "ObstacleDataC10 DeltaTime"
unit: "s"
value: 0
}




CANMMCAN_2_RXt[54]
{
type: flt(64,IEEE)
alias: "ObstacleDataC10_time"
flags: OUTPUT|READONLY
desc: "ObstacleDataC10 Time"
unit: "s"
value: 0.0
}





endgroup -- block-group "RX"



endgroup -- block-group "ObstacleDataC10"



group "ObstacleDataC2" -- subsystem-group
{
     flags: COLLAPSED
}



group "RX" -- subsystem-group
{
     flags: COLLAPSED
}


CANMMCAN_2_RX_Msg_45_Sgn_1
{
type: flt(64,IEEE)
alias: "ObstacleAngleRate"
flags: OUTPUT|READONLY
desc: ""
unit: "degree"
value: 0
}




CANMMCAN_2_RX_Msg_45_Sgn_2
{
type: flt(64,IEEE)
alias: "ObstacleVelY"
flags: OUTPUT|READONLY
desc: ""
unit: "m/s"
value: 0
}




CANMMCAN_2_RX_Msg_45_Sgn_3
{
type: UINT(8)
alias: "reserved_5"
flags: OUTPUT|READONLY
desc: ""
unit: ""
value: 0
}




CANMMCAN_2_RX_Msg_45_Sgn_4
{
type: flt(64,IEEE)
alias: "Object_Accel_X"
flags: OUTPUT|READONLY
desc: "The longitude acceleration of the object.  Type: 10 bit, signed integer  Range: -14.97 : 14.97 [m/s2] Conversion: (HEX)* 0.03 Invalid value: 200h"
unit: "m/s square"
value: 0
}




CANMMCAN_2_RX_Msg_45_Sgn_5
{
type: UINT(8)
alias: "reserved_2"
flags: OUTPUT|READONLY
desc: ""
unit: ""
value: 0
}




CANMMCAN_2_RX_Msg_45_Sgn_6
{
type: UINT(8)
alias: "ObstacleReplaced"
flags: OUTPUT|READONLY
desc: ""
unit: ""
value: 0
}




CANMMCAN_2_RX_Msg_45_Sgn_7
{
type: UINT(8)
alias: "reserved_3"
flags: OUTPUT|READONLY
desc: ""
unit: ""
value: 0
}




CANMMCAN_2_RX_Msg_45_Sgn_8
{
type: flt(64,IEEE)
alias: "ObstacleAngle"
flags: OUTPUT|READONLY
desc: ""
unit: "degree"
value: 0
}




CANMMCAN_2_MIDRX[30]
{
type: UINT(32)
alias: "ObstacleDataC2_ID"
flags: OUTPUT|READONLY
desc: "Message ID"
unit: ""
value: 1854
}




CANMMCAN_2_MIDFRX[30]
{
type: UINT(8)
alias: "ObstacleDataC2_IDFormat"
flags: OUTPUT|READONLY
desc: "Message ID Format"
unit: ""
value: 0
}




CANMMCAN_2_RXLEN[30]
{
type: UINT(8)
alias: "ObstacleDataC2_Length"
flags: OUTPUT|READONLY
desc: "Message Length"
unit: ""
value: 8
}




CANMMCAN_2_RXsta[30]
{
type: UINT(8)
alias: "ObstacleDataC2_status"
flags: OUTPUT|READONLY
desc: "ObstacleDataC2 Status"
unit: ""
value: 0
}




CANMMCAN_2_RXdt[30]
{
type: flt(64,IEEE)
alias: "ObstacleDataC2_dt"
flags: OUTPUT|READONLY
desc: "ObstacleDataC2 DeltaTime"
unit: "s"
value: 0
}




CANMMCAN_2_RXt[30]
{
type: flt(64,IEEE)
alias: "ObstacleDataC2_time"
flags: OUTPUT|READONLY
desc: "ObstacleDataC2 Time"
unit: "s"
value: 0.0
}





endgroup -- block-group "RX"



endgroup -- block-group "ObstacleDataC2"



group "ObstacleDataC3" -- subsystem-group
{
     flags: COLLAPSED
}



group "RX" -- subsystem-group
{
     flags: COLLAPSED
}


CANMMCAN_2_RX_Msg_46_Sgn_1
{
type: flt(64,IEEE)
alias: "ObstacleAngleRate"
flags: OUTPUT|READONLY
desc: ""
unit: "degree"
value: 0
}




CANMMCAN_2_RX_Msg_46_Sgn_2
{
type: flt(64,IEEE)
alias: "ObstacleVelY"
flags: OUTPUT|READONLY
desc: ""
unit: "m/s"
value: 0
}




CANMMCAN_2_RX_Msg_46_Sgn_3
{
type: UINT(8)
alias: "reserved_5"
flags: OUTPUT|READONLY
desc: ""
unit: ""
value: 0
}




CANMMCAN_2_RX_Msg_46_Sgn_4
{
type: flt(64,IEEE)
alias: "Object_Accel_X"
flags: OUTPUT|READONLY
desc: "The longitude acceleration of the object.  Type: 10 bit, signed integer  Range: -14.97 : 14.97 [m/s2] Conversion: (HEX)* 0.03 Invalid value: 200h"
unit: "m/s square"
value: 0
}




CANMMCAN_2_RX_Msg_46_Sgn_5
{
type: UINT(8)
alias: "reserved_2"
flags: OUTPUT|READONLY
desc: ""
unit: ""
value: 0
}




CANMMCAN_2_RX_Msg_46_Sgn_6
{
type: UINT(8)
alias: "ObstacleReplaced"
flags: OUTPUT|READONLY
desc: ""
unit: ""
value: 0
}




CANMMCAN_2_RX_Msg_46_Sgn_7
{
type: UINT(8)
alias: "reserved_3"
flags: OUTPUT|READONLY
desc: ""
unit: ""
value: 0
}




CANMMCAN_2_RX_Msg_46_Sgn_8
{
type: flt(64,IEEE)
alias: "ObstacleAngle"
flags: OUTPUT|READONLY
desc: ""
unit: "degree"
value: 0
}




CANMMCAN_2_MIDRX[33]
{
type: UINT(32)
alias: "ObstacleDataC3_ID"
flags: OUTPUT|READONLY
desc: "Message ID"
unit: ""
value: 1857
}




CANMMCAN_2_MIDFRX[33]
{
type: UINT(8)
alias: "ObstacleDataC3_IDFormat"
flags: OUTPUT|READONLY
desc: "Message ID Format"
unit: ""
value: 0
}




CANMMCAN_2_RXLEN[33]
{
type: UINT(8)
alias: "ObstacleDataC3_Length"
flags: OUTPUT|READONLY
desc: "Message Length"
unit: ""
value: 8
}




CANMMCAN_2_RXsta[33]
{
type: UINT(8)
alias: "ObstacleDataC3_status"
flags: OUTPUT|READONLY
desc: "ObstacleDataC3 Status"
unit: ""
value: 0
}




CANMMCAN_2_RXdt[33]
{
type: flt(64,IEEE)
alias: "ObstacleDataC3_dt"
flags: OUTPUT|READONLY
desc: "ObstacleDataC3 DeltaTime"
unit: "s"
value: 0
}




CANMMCAN_2_RXt[33]
{
type: flt(64,IEEE)
alias: "ObstacleDataC3_time"
flags: OUTPUT|READONLY
desc: "ObstacleDataC3 Time"
unit: "s"
value: 0.0
}





endgroup -- block-group "RX"



endgroup -- block-group "ObstacleDataC3"



group "ObstacleDataC4" -- subsystem-group
{
     flags: COLLAPSED
}



group "RX" -- subsystem-group
{
     flags: COLLAPSED
}


CANMMCAN_2_RX_Msg_47_Sgn_1
{
type: flt(64,IEEE)
alias: "ObstacleAngleRate"
flags: OUTPUT|READONLY
desc: ""
unit: "degree"
value: 0
}




CANMMCAN_2_RX_Msg_47_Sgn_2
{
type: flt(64,IEEE)
alias: "ObstacleVelY"
flags: OUTPUT|READONLY
desc: ""
unit: "m/s"
value: 0
}




CANMMCAN_2_RX_Msg_47_Sgn_3
{
type: UINT(8)
alias: "reserved_5"
flags: OUTPUT|READONLY
desc: ""
unit: ""
value: 0
}




CANMMCAN_2_RX_Msg_47_Sgn_4
{
type: flt(64,IEEE)
alias: "Object_Accel_X"
flags: OUTPUT|READONLY
desc: "The longitude acceleration of the object.  Type: 10 bit, signed integer  Range: -14.97 : 14.97 [m/s2] Conversion: (HEX)* 0.03 Invalid value: 200h"
unit: "m/s square"
value: 0
}




CANMMCAN_2_RX_Msg_47_Sgn_5
{
type: UINT(8)
alias: "reserved_2"
flags: OUTPUT|READONLY
desc: ""
unit: ""
value: 0
}




CANMMCAN_2_RX_Msg_47_Sgn_6
{
type: UINT(8)
alias: "ObstacleReplaced"
flags: OUTPUT|READONLY
desc: ""
unit: ""
value: 0
}




CANMMCAN_2_RX_Msg_47_Sgn_7
{
type: UINT(8)
alias: "reserved_3"
flags: OUTPUT|READONLY
desc: ""
unit: ""
value: 0
}




CANMMCAN_2_RX_Msg_47_Sgn_8
{
type: flt(64,IEEE)
alias: "ObstacleAngle"
flags: OUTPUT|READONLY
desc: ""
unit: "degree"
value: 0
}




CANMMCAN_2_MIDRX[36]
{
type: UINT(32)
alias: "ObstacleDataC4_ID"
flags: OUTPUT|READONLY
desc: "Message ID"
unit: ""
value: 1860
}




CANMMCAN_2_MIDFRX[36]
{
type: UINT(8)
alias: "ObstacleDataC4_IDFormat"
flags: OUTPUT|READONLY
desc: "Message ID Format"
unit: ""
value: 0
}




CANMMCAN_2_RXLEN[36]
{
type: UINT(8)
alias: "ObstacleDataC4_Length"
flags: OUTPUT|READONLY
desc: "Message Length"
unit: ""
value: 8
}




CANMMCAN_2_RXsta[36]
{
type: UINT(8)
alias: "ObstacleDataC4_status"
flags: OUTPUT|READONLY
desc: "ObstacleDataC4 Status"
unit: ""
value: 0
}




CANMMCAN_2_RXdt[36]
{
type: flt(64,IEEE)
alias: "ObstacleDataC4_dt"
flags: OUTPUT|READONLY
desc: "ObstacleDataC4 DeltaTime"
unit: "s"
value: 0
}




CANMMCAN_2_RXt[36]
{
type: flt(64,IEEE)
alias: "ObstacleDataC4_time"
flags: OUTPUT|READONLY
desc: "ObstacleDataC4 Time"
unit: "s"
value: 0.0
}





endgroup -- block-group "RX"



endgroup -- block-group "ObstacleDataC4"



group "ObstacleDataC5" -- subsystem-group
{
     flags: COLLAPSED
}



group "RX" -- subsystem-group
{
     flags: COLLAPSED
}


CANMMCAN_2_RX_Msg_48_Sgn_1
{
type: flt(64,IEEE)
alias: "ObstacleAngleRate"
flags: OUTPUT|READONLY
desc: ""
unit: "degree"
value: 0
}




CANMMCAN_2_RX_Msg_48_Sgn_2
{
type: flt(64,IEEE)
alias: "ObstacleVelY"
flags: OUTPUT|READONLY
desc: ""
unit: "m/s"
value: 0
}




CANMMCAN_2_RX_Msg_48_Sgn_3
{
type: UINT(8)
alias: "reserved_5"
flags: OUTPUT|READONLY
desc: ""
unit: ""
value: 0
}




CANMMCAN_2_RX_Msg_48_Sgn_4
{
type: flt(64,IEEE)
alias: "Object_Accel_X"
flags: OUTPUT|READONLY
desc: "The longitude acceleration of the object.  Type: 10 bit, signed integer  Range: -14.97 : 14.97 [m/s2] Conversion: (HEX)* 0.03 Invalid value: 200h"
unit: "m/s square"
value: 0
}




CANMMCAN_2_RX_Msg_48_Sgn_5
{
type: UINT(8)
alias: "reserved_2"
flags: OUTPUT|READONLY
desc: ""
unit: ""
value: 0
}




CANMMCAN_2_RX_Msg_48_Sgn_6
{
type: UINT(8)
alias: "ObstacleReplaced"
flags: OUTPUT|READONLY
desc: ""
unit: ""
value: 0
}




CANMMCAN_2_RX_Msg_48_Sgn_7
{
type: UINT(8)
alias: "reserved_3"
flags: OUTPUT|READONLY
desc: ""
unit: ""
value: 0
}




CANMMCAN_2_RX_Msg_48_Sgn_8
{
type: flt(64,IEEE)
alias: "ObstacleAngle"
flags: OUTPUT|READONLY
desc: ""
unit: "degree"
value: 0
}




CANMMCAN_2_MIDRX[39]
{
type: UINT(32)
alias: "ObstacleDataC5_ID"
flags: OUTPUT|READONLY
desc: "Message ID"
unit: ""
value: 1863
}




CANMMCAN_2_MIDFRX[39]
{
type: UINT(8)
alias: "ObstacleDataC5_IDFormat"
flags: OUTPUT|READONLY
desc: "Message ID Format"
unit: ""
value: 0
}




CANMMCAN_2_RXLEN[39]
{
type: UINT(8)
alias: "ObstacleDataC5_Length"
flags: OUTPUT|READONLY
desc: "Message Length"
unit: ""
value: 8
}




CANMMCAN_2_RXsta[39]
{
type: UINT(8)
alias: "ObstacleDataC5_status"
flags: OUTPUT|READONLY
desc: "ObstacleDataC5 Status"
unit: ""
value: 0
}




CANMMCAN_2_RXdt[39]
{
type: flt(64,IEEE)
alias: "ObstacleDataC5_dt"
flags: OUTPUT|READONLY
desc: "ObstacleDataC5 DeltaTime"
unit: "s"
value: 0
}




CANMMCAN_2_RXt[39]
{
type: flt(64,IEEE)
alias: "ObstacleDataC5_time"
flags: OUTPUT|READONLY
desc: "ObstacleDataC5 Time"
unit: "s"
value: 0.0
}





endgroup -- block-group "RX"



endgroup -- block-group "ObstacleDataC5"



group "ObstacleDataC6" -- subsystem-group
{
     flags: COLLAPSED
}



group "RX" -- subsystem-group
{
     flags: COLLAPSED
}


CANMMCAN_2_RX_Msg_49_Sgn_1
{
type: flt(64,IEEE)
alias: "ObstacleAngleRate"
flags: OUTPUT|READONLY
desc: ""
unit: "degree"
value: 0
}




CANMMCAN_2_RX_Msg_49_Sgn_2
{
type: flt(64,IEEE)
alias: "ObstacleVelY"
flags: OUTPUT|READONLY
desc: ""
unit: "m/s"
value: 0
}




CANMMCAN_2_RX_Msg_49_Sgn_3
{
type: UINT(8)
alias: "reserved_5"
flags: OUTPUT|READONLY
desc: ""
unit: ""
value: 0
}




CANMMCAN_2_RX_Msg_49_Sgn_4
{
type: flt(64,IEEE)
alias: "Object_Accel_X"
flags: OUTPUT|READONLY
desc: "The longitude acceleration of the object.  Type: 10 bit, signed integer  Range: -14.97 : 14.97 [m/s2] Conversion: (HEX)* 0.03 Invalid value: 200h"
unit: "m/s square"
value: 0
}




CANMMCAN_2_RX_Msg_49_Sgn_5
{
type: UINT(8)
alias: "reserved_2"
flags: OUTPUT|READONLY
desc: ""
unit: ""
value: 0
}




CANMMCAN_2_RX_Msg_49_Sgn_6
{
type: UINT(8)
alias: "ObstacleReplaced"
flags: OUTPUT|READONLY
desc: ""
unit: ""
value: 0
}




CANMMCAN_2_RX_Msg_49_Sgn_7
{
type: UINT(8)
alias: "reserved_3"
flags: OUTPUT|READONLY
desc: ""
unit: ""
value: 0
}




CANMMCAN_2_RX_Msg_49_Sgn_8
{
type: flt(64,IEEE)
alias: "ObstacleAngle"
flags: OUTPUT|READONLY
desc: ""
unit: "degree"
value: 0
}




CANMMCAN_2_MIDRX[42]
{
type: UINT(32)
alias: "ObstacleDataC6_ID"
flags: OUTPUT|READONLY
desc: "Message ID"
unit: ""
value: 1866
}




CANMMCAN_2_MIDFRX[42]
{
type: UINT(8)
alias: "ObstacleDataC6_IDFormat"
flags: OUTPUT|READONLY
desc: "Message ID Format"
unit: ""
value: 0
}




CANMMCAN_2_RXLEN[42]
{
type: UINT(8)
alias: "ObstacleDataC6_Length"
flags: OUTPUT|READONLY
desc: "Message Length"
unit: ""
value: 8
}




CANMMCAN_2_RXsta[42]
{
type: UINT(8)
alias: "ObstacleDataC6_status"
flags: OUTPUT|READONLY
desc: "ObstacleDataC6 Status"
unit: ""
value: 0
}




CANMMCAN_2_RXdt[42]
{
type: flt(64,IEEE)
alias: "ObstacleDataC6_dt"
flags: OUTPUT|READONLY
desc: "ObstacleDataC6 DeltaTime"
unit: "s"
value: 0
}




CANMMCAN_2_RXt[42]
{
type: flt(64,IEEE)
alias: "ObstacleDataC6_time"
flags: OUTPUT|READONLY
desc: "ObstacleDataC6 Time"
unit: "s"
value: 0.0
}





endgroup -- block-group "RX"



endgroup -- block-group "ObstacleDataC6"



group "ObstacleDataC7" -- subsystem-group
{
     flags: COLLAPSED
}



group "RX" -- subsystem-group
{
     flags: COLLAPSED
}


CANMMCAN_2_RX_Msg_50_Sgn_1
{
type: flt(64,IEEE)
alias: "ObstacleAngleRate"
flags: OUTPUT|READONLY
desc: ""
unit: "degree"
value: 0
}




CANMMCAN_2_RX_Msg_50_Sgn_2
{
type: flt(64,IEEE)
alias: "ObstacleVelY"
flags: OUTPUT|READONLY
desc: ""
unit: "m/s"
value: 0
}




CANMMCAN_2_RX_Msg_50_Sgn_3
{
type: UINT(8)
alias: "reserved_5"
flags: OUTPUT|READONLY
desc: ""
unit: ""
value: 0
}




CANMMCAN_2_RX_Msg_50_Sgn_4
{
type: flt(64,IEEE)
alias: "Object_Accel_X"
flags: OUTPUT|READONLY
desc: "The longitude acceleration of the object.  Type: 10 bit, signed integer  Range: -14.97 : 14.97 [m/s2] Conversion: (HEX)* 0.03 Invalid value: 200h"
unit: "m/s square"
value: 0
}




CANMMCAN_2_RX_Msg_50_Sgn_5
{
type: UINT(8)
alias: "reserved_2"
flags: OUTPUT|READONLY
desc: ""
unit: ""
value: 0
}




CANMMCAN_2_RX_Msg_50_Sgn_6
{
type: UINT(8)
alias: "ObstacleReplaced"
flags: OUTPUT|READONLY
desc: ""
unit: ""
value: 0
}




CANMMCAN_2_RX_Msg_50_Sgn_7
{
type: UINT(8)
alias: "reserved_3"
flags: OUTPUT|READONLY
desc: ""
unit: ""
value: 0
}




CANMMCAN_2_RX_Msg_50_Sgn_8
{
type: flt(64,IEEE)
alias: "ObstacleAngle"
flags: OUTPUT|READONLY
desc: ""
unit: "degree"
value: 0
}




CANMMCAN_2_MIDRX[45]
{
type: UINT(32)
alias: "ObstacleDataC7_ID"
flags: OUTPUT|READONLY
desc: "Message ID"
unit: ""
value: 1869
}




CANMMCAN_2_MIDFRX[45]
{
type: UINT(8)
alias: "ObstacleDataC7_IDFormat"
flags: OUTPUT|READONLY
desc: "Message ID Format"
unit: ""
value: 0
}




CANMMCAN_2_RXLEN[45]
{
type: UINT(8)
alias: "ObstacleDataC7_Length"
flags: OUTPUT|READONLY
desc: "Message Length"
unit: ""
value: 8
}




CANMMCAN_2_RXsta[45]
{
type: UINT(8)
alias: "ObstacleDataC7_status"
flags: OUTPUT|READONLY
desc: "ObstacleDataC7 Status"
unit: ""
value: 0
}




CANMMCAN_2_RXdt[45]
{
type: flt(64,IEEE)
alias: "ObstacleDataC7_dt"
flags: OUTPUT|READONLY
desc: "ObstacleDataC7 DeltaTime"
unit: "s"
value: 0
}




CANMMCAN_2_RXt[45]
{
type: flt(64,IEEE)
alias: "ObstacleDataC7_time"
flags: OUTPUT|READONLY
desc: "ObstacleDataC7 Time"
unit: "s"
value: 0.0
}





endgroup -- block-group "RX"



endgroup -- block-group "ObstacleDataC7"



group "ObstacleDataC8" -- subsystem-group
{
     flags: COLLAPSED
}



group "RX" -- subsystem-group
{
     flags: COLLAPSED
}


CANMMCAN_2_RX_Msg_51_Sgn_1
{
type: flt(64,IEEE)
alias: "ObstacleAngleRate"
flags: OUTPUT|READONLY
desc: ""
unit: "degree"
value: 0
}




CANMMCAN_2_RX_Msg_51_Sgn_2
{
type: flt(64,IEEE)
alias: "ObstacleVelY"
flags: OUTPUT|READONLY
desc: ""
unit: "m/s"
value: 0
}




CANMMCAN_2_RX_Msg_51_Sgn_3
{
type: UINT(8)
alias: "reserved_5"
flags: OUTPUT|READONLY
desc: ""
unit: ""
value: 0
}




CANMMCAN_2_RX_Msg_51_Sgn_4
{
type: flt(64,IEEE)
alias: "Object_Accel_X"
flags: OUTPUT|READONLY
desc: "The longitude acceleration of the object.  Type: 10 bit, signed integer  Range: -14.97 : 14.97 [m/s2] Conversion: (HEX)* 0.03 Invalid value: 200h"
unit: "m/s square"
value: 0
}




CANMMCAN_2_RX_Msg_51_Sgn_5
{
type: UINT(8)
alias: "reserved_2"
flags: OUTPUT|READONLY
desc: ""
unit: ""
value: 0
}




CANMMCAN_2_RX_Msg_51_Sgn_6
{
type: UINT(8)
alias: "ObstacleReplaced"
flags: OUTPUT|READONLY
desc: ""
unit: ""
value: 0
}




CANMMCAN_2_RX_Msg_51_Sgn_7
{
type: UINT(8)
alias: "reserved_3"
flags: OUTPUT|READONLY
desc: ""
unit: ""
value: 0
}




CANMMCAN_2_RX_Msg_51_Sgn_8
{
type: flt(64,IEEE)
alias: "ObstacleAngle"
flags: OUTPUT|READONLY
desc: ""
unit: "degree"
value: 0
}




CANMMCAN_2_MIDRX[48]
{
type: UINT(32)
alias: "ObstacleDataC8_ID"
flags: OUTPUT|READONLY
desc: "Message ID"
unit: ""
value: 1872
}




CANMMCAN_2_MIDFRX[48]
{
type: UINT(8)
alias: "ObstacleDataC8_IDFormat"
flags: OUTPUT|READONLY
desc: "Message ID Format"
unit: ""
value: 0
}




CANMMCAN_2_RXLEN[48]
{
type: UINT(8)
alias: "ObstacleDataC8_Length"
flags: OUTPUT|READONLY
desc: "Message Length"
unit: ""
value: 8
}




CANMMCAN_2_RXsta[48]
{
type: UINT(8)
alias: "ObstacleDataC8_status"
flags: OUTPUT|READONLY
desc: "ObstacleDataC8 Status"
unit: ""
value: 0
}




CANMMCAN_2_RXdt[48]
{
type: flt(64,IEEE)
alias: "ObstacleDataC8_dt"
flags: OUTPUT|READONLY
desc: "ObstacleDataC8 DeltaTime"
unit: "s"
value: 0
}




CANMMCAN_2_RXt[48]
{
type: flt(64,IEEE)
alias: "ObstacleDataC8_time"
flags: OUTPUT|READONLY
desc: "ObstacleDataC8 Time"
unit: "s"
value: 0.0
}





endgroup -- block-group "RX"



endgroup -- block-group "ObstacleDataC8"



group "ObstacleDataC9" -- subsystem-group
{
     flags: COLLAPSED
}



group "RX" -- subsystem-group
{
     flags: COLLAPSED
}


CANMMCAN_2_RX_Msg_52_Sgn_1
{
type: flt(64,IEEE)
alias: "ObstacleAngleRate"
flags: OUTPUT|READONLY
desc: ""
unit: "degree"
value: 0
}




CANMMCAN_2_RX_Msg_52_Sgn_2
{
type: flt(64,IEEE)
alias: "ObstacleVelY"
flags: OUTPUT|READONLY
desc: ""
unit: "m/s"
value: 0
}




CANMMCAN_2_RX_Msg_52_Sgn_3
{
type: UINT(8)
alias: "reserved_5"
flags: OUTPUT|READONLY
desc: ""
unit: ""
value: 0
}




CANMMCAN_2_RX_Msg_52_Sgn_4
{
type: flt(64,IEEE)
alias: "Object_Accel_X"
flags: OUTPUT|READONLY
desc: "The longitude acceleration of the object.  Type: 10 bit, signed integer  Range: -14.97 : 14.97 [m/s2] Conversion: (HEX)* 0.03 Invalid value: 200h"
unit: "m/s square"
value: 0
}




CANMMCAN_2_RX_Msg_52_Sgn_5
{
type: UINT(8)
alias: "reserved_2"
flags: OUTPUT|READONLY
desc: ""
unit: ""
value: 0
}




CANMMCAN_2_RX_Msg_52_Sgn_6
{
type: UINT(8)
alias: "ObstacleReplaced"
flags: OUTPUT|READONLY
desc: ""
unit: ""
value: 0
}




CANMMCAN_2_RX_Msg_52_Sgn_7
{
type: UINT(8)
alias: "reserved_3"
flags: OUTPUT|READONLY
desc: ""
unit: ""
value: 0
}




CANMMCAN_2_RX_Msg_52_Sgn_8
{
type: flt(64,IEEE)
alias: "ObstacleAngle"
flags: OUTPUT|READONLY
desc: ""
unit: "degree"
value: 0
}




CANMMCAN_2_MIDRX[51]
{
type: UINT(32)
alias: "ObstacleDataC9_ID"
flags: OUTPUT|READONLY
desc: "Message ID"
unit: ""
value: 1875
}




CANMMCAN_2_MIDFRX[51]
{
type: UINT(8)
alias: "ObstacleDataC9_IDFormat"
flags: OUTPUT|READONLY
desc: "Message ID Format"
unit: ""
value: 0
}




CANMMCAN_2_RXLEN[51]
{
type: UINT(8)
alias: "ObstacleDataC9_Length"
flags: OUTPUT|READONLY
desc: "Message Length"
unit: ""
value: 8
}




CANMMCAN_2_RXsta[51]
{
type: UINT(8)
alias: "ObstacleDataC9_status"
flags: OUTPUT|READONLY
desc: "ObstacleDataC9 Status"
unit: ""
value: 0
}




CANMMCAN_2_RXdt[51]
{
type: flt(64,IEEE)
alias: "ObstacleDataC9_dt"
flags: OUTPUT|READONLY
desc: "ObstacleDataC9 DeltaTime"
unit: "s"
value: 0
}




CANMMCAN_2_RXt[51]
{
type: flt(64,IEEE)
alias: "ObstacleDataC9_time"
flags: OUTPUT|READONLY
desc: "ObstacleDataC9 Time"
unit: "s"
value: 0.0
}





endgroup -- block-group "RX"



endgroup -- block-group "ObstacleDataC9"



group "ObstacleStatusA" -- subsystem-group
{
     flags: COLLAPSED
}



group "RX" -- subsystem-group
{
     flags: COLLAPSED
}


CANMMCAN_2_RX_Msg_53_Sgn_1
{
type: UINT(8)
alias: "NumObstacles"
flags: OUTPUT|READONLY
desc: ""
unit: ""
value: 0
}




CANMMCAN_2_RX_Msg_53_Sgn_2
{
type: UINT(8)
alias: "Timestamp"
flags: OUTPUT|READONLY
desc: ""
unit: "mSec"
value: 0
}




CANMMCAN_2_RX_Msg_53_Sgn_3
{
type: UINT(8)
alias: "ApplicationVersion_minor"
flags: OUTPUT|READONLY
desc: ""
unit: ""
value: 0
}




CANMMCAN_2_RX_Msg_53_Sgn_4
{
type: UINT(8)
alias: "ApplicationVersion_rc"
flags: OUTPUT|READONLY
desc: ""
unit: ""
value: 0
}




CANMMCAN_2_RX_Msg_53_Sgn_5
{
type: UINT(8)
alias: "ProtocolVersion"
flags: OUTPUT|READONLY
desc: ""
unit: ""
value: 0
}




CANMMCAN_2_RX_Msg_53_Sgn_6
{
type: UINT(8)
alias: "Go"
flags: OUTPUT|READONLY
desc: "Currently this signal is implemented (Stop or Go are reported) only when the own vehicle is standing (having ego speed of less than 0.1 meters per second). Otherwise, the value 15 is reported."
unit: ""
value: 0
}




CANMMCAN_2_RX_Msg_53_Sgn_7
{
type: UINT(8)
alias: "Close_Car"
flags: OUTPUT|READONLY
desc: "Indication whether we detect a close car in front of the host vehicle or not."
unit: "bool"
value: 0
}




CANMMCAN_2_RX_Msg_53_Sgn_8
{
type: UINT(8)
alias: "RightCloseRangeCutIn"
flags: OUTPUT|READONLY
desc: ""
unit: ""
value: 0
}




CANMMCAN_2_RX_Msg_53_Sgn_9
{
type: UINT(8)
alias: "LeftCloseRangeCutIn"
flags: OUTPUT|READONLY
desc: ""
unit: ""
value: 0
}




CANMMCAN_2_RX_Msg_53_Sgn_10
{
type: UINT(16)
alias: "Failsafe"
flags: OUTPUT|READONLY
desc: ""
unit: ""
value: 0
}




CANMMCAN_2_RX_Msg_53_Sgn_11
{
type: UINT(8)
alias: "reserved_3"
flags: OUTPUT|READONLY
desc: ""
unit: ""
value: 0
}




CANMMCAN_2_MIDRX[24]
{
type: UINT(32)
alias: "ObstacleStatusA_ID"
flags: OUTPUT|READONLY
desc: "Message ID"
unit: ""
value: 1848
}




CANMMCAN_2_MIDFRX[24]
{
type: UINT(8)
alias: "ObstacleStatusA_IDFormat"
flags: OUTPUT|READONLY
desc: "Message ID Format"
unit: ""
value: 0
}




CANMMCAN_2_RXLEN[24]
{
type: UINT(8)
alias: "ObstacleStatusA_Length"
flags: OUTPUT|READONLY
desc: "Message Length"
unit: ""
value: 7
}




CANMMCAN_2_RXsta[24]
{
type: UINT(8)
alias: "ObstacleStatusA_status"
flags: OUTPUT|READONLY
desc: "ObstacleStatusA Status"
unit: ""
value: 0
}




CANMMCAN_2_RXdt[24]
{
type: flt(64,IEEE)
alias: "ObstacleStatusA_dt"
flags: OUTPUT|READONLY
desc: "ObstacleStatusA DeltaTime"
unit: "s"
value: 0
}




CANMMCAN_2_RXt[24]
{
type: flt(64,IEEE)
alias: "ObstacleStatusA_time"
flags: OUTPUT|READONLY
desc: "ObstacleStatusA Time"
unit: "s"
value: 0.0
}





endgroup -- block-group "RX"



endgroup -- block-group "ObstacleStatusA"



group "ObstacleStatusB" -- subsystem-group
{
     flags: COLLAPSED
}



group "RX" -- subsystem-group
{
     flags: COLLAPSED
}


CANMMCAN_2_RX_Msg_54_Sgn_1
{
type: UINT(32)
alias: "timeStamp"
flags: OUTPUT|READONLY
desc: ""
unit: ""
value: 0
}




CANMMCAN_2_RX_Msg_54_Sgn_2
{
type: UINT(32)
alias: "frameIndex"
flags: OUTPUT|READONLY
desc: ""
unit: ""
value: 0
}




CANMMCAN_2_MIDRX[23]
{
type: UINT(32)
alias: "ObstacleStatusB_ID"
flags: OUTPUT|READONLY
desc: "Message ID"
unit: ""
value: 1847
}




CANMMCAN_2_MIDFRX[23]
{
type: UINT(8)
alias: "ObstacleStatusB_IDFormat"
flags: OUTPUT|READONLY
desc: "Message ID Format"
unit: ""
value: 0
}




CANMMCAN_2_RXLEN[23]
{
type: UINT(8)
alias: "ObstacleStatusB_Length"
flags: OUTPUT|READONLY
desc: "Message Length"
unit: ""
value: 8
}




CANMMCAN_2_RXsta[23]
{
type: UINT(8)
alias: "ObstacleStatusB_status"
flags: OUTPUT|READONLY
desc: "ObstacleStatusB Status"
unit: ""
value: 0
}




CANMMCAN_2_RXdt[23]
{
type: flt(64,IEEE)
alias: "ObstacleStatusB_dt"
flags: OUTPUT|READONLY
desc: "ObstacleStatusB DeltaTime"
unit: "s"
value: 0
}




CANMMCAN_2_RXt[23]
{
type: flt(64,IEEE)
alias: "ObstacleStatusB_time"
flags: OUTPUT|READONLY
desc: "ObstacleStatusB Time"
unit: "s"
value: 0.0
}





endgroup -- block-group "RX"



endgroup -- block-group "ObstacleStatusB"



group "ObstacleStatusC" -- subsystem-group
{
     flags: COLLAPSED
}



group "RX" -- subsystem-group
{
     flags: COLLAPSED
}


CANMMCAN_2_RX_Msg_55_Sgn_1
{
type: UINT(16)
alias: "grabIndex"
flags: OUTPUT|READONLY
desc: ""
unit: ""
value: 0
}




CANMMCAN_2_RX_Msg_55_Sgn_2
{
type: flt(64,IEEE)
alias: "pedalConfGenObjDistFromBumper"
flags: OUTPUT|READONLY
desc: ""
unit: "meter"
value: 0
}




CANMMCAN_2_RX_Msg_55_Sgn_3
{
type: flt(64,IEEE)
alias: "pedalConfusionGeneralObjTTC"
flags: OUTPUT|READONLY
desc: ""
unit: "sec"
value: 0
}




CANMMCAN_2_RX_Msg_55_Sgn_4
{
type: UINT(32)
alias: "reserved_6"
flags: OUTPUT|READONLY
desc: ""
unit: ""
value: 0
}




CANMMCAN_2_MIDRX[55]
{
type: UINT(32)
alias: "ObstacleStatusC_ID"
flags: OUTPUT|READONLY
desc: "Message ID"
unit: ""
value: 1879
}




CANMMCAN_2_MIDFRX[55]
{
type: UINT(8)
alias: "ObstacleStatusC_IDFormat"
flags: OUTPUT|READONLY
desc: "Message ID Format"
unit: ""
value: 0
}




CANMMCAN_2_RXLEN[55]
{
type: UINT(8)
alias: "ObstacleStatusC_Length"
flags: OUTPUT|READONLY
desc: "Message Length"
unit: ""
value: 8
}




CANMMCAN_2_RXsta[55]
{
type: UINT(8)
alias: "ObstacleStatusC_status"
flags: OUTPUT|READONLY
desc: "ObstacleStatusC Status"
unit: ""
value: 0
}




CANMMCAN_2_RXdt[55]
{
type: flt(64,IEEE)
alias: "ObstacleStatusC_dt"
flags: OUTPUT|READONLY
desc: "ObstacleStatusC DeltaTime"
unit: "s"
value: 0
}




CANMMCAN_2_RXt[55]
{
type: flt(64,IEEE)
alias: "ObstacleStatusC_time"
flags: OUTPUT|READONLY
desc: "ObstacleStatusC Time"
unit: "s"
value: 0.0
}





endgroup -- block-group "RX"



endgroup -- block-group "ObstacleStatusC"



group "Road_Information" -- subsystem-group
{
     flags: COLLAPSED
}



group "RX" -- subsystem-group
{
     flags: COLLAPSED
}


CANMMCAN_2_RX_Msg_56_Sgn_1
{
type: UINT(8)
alias: "Construction_Area"
flags: OUTPUT|READONLY
desc: ""
unit: ""
value: 0
}




CANMMCAN_2_RX_Msg_56_Sgn_2
{
type: UINT(8)
alias: "Road_Type"
flags: OUTPUT|READONLY
desc: ""
unit: ""
value: 0
}




CANMMCAN_2_RX_Msg_56_Sgn_3
{
type: UINT(8)
alias: "Highway_Exit_Right"
flags: OUTPUT|READONLY
desc: "When we detect highway exit to our right this flag is turned on."
unit: ""
value: 0
}




CANMMCAN_2_RX_Msg_56_Sgn_4
{
type: UINT(8)
alias: "Highway_Exit_Left"
flags: OUTPUT|READONLY
desc: "When we detect highway exit to our left this flag is turned on."
unit: ""
value: 0
}




CANMMCAN_2_RX_Msg_56_Sgn_5
{
type: flt(64,IEEE)
alias: "Probability_Of_Left_Lane"
flags: OUTPUT|READONLY
desc: "probability of the existence of a lane (not lane mark) to the left of the host lane."
unit: "probability"
value: 0
}




CANMMCAN_2_RX_Msg_56_Sgn_6
{
type: flt(64,IEEE)
alias: "Probability_Of_Right_Lane"
flags: OUTPUT|READONLY
desc: "probability of the existence of a lane (not lane mark) to the right of the host lane."
unit: "probability"
value: 0
}




CANMMCAN_2_RX_Msg_56_Sgn_7
{
type: flt(64,IEEE)
alias: "Driving_Speed_Left_Lane"
flags: OUTPUT|READONLY
desc: "estimated driving speed in the lane which is left to the host lane. -1 if signal is not available."
unit: "m/s"
value: 0
}




CANMMCAN_2_RX_Msg_56_Sgn_8
{
type: flt(64,IEEE)
alias: "Driving_Speed_Right_Lane"
flags: OUTPUT|READONLY
desc: "estimated driving speed in the lane which is right to the host lane. -1 if signal is not available."
unit: "m/s"
value: 0
}




CANMMCAN_2_RX_Msg_56_Sgn_9
{
type: UINT(8)
alias: "protocol_version"
flags: OUTPUT|READONLY
desc: "Any change done in the protocol (in any message) should be reflected by incrementing the protocol_version value by 1. First Version is numbered 3 (to be in sync with former revision control)"
unit: ""
value: 0
}




CANMMCAN_2_MIDRX[60]
{
type: UINT(32)
alias: "Road_Information_ID"
flags: OUTPUT|READONLY
desc: "Message ID"
unit: ""
value: 1899
}




CANMMCAN_2_MIDFRX[60]
{
type: UINT(8)
alias: "Road_Information_IDFormat"
flags: OUTPUT|READONLY
desc: "Message ID Format"
unit: ""
value: 0
}




CANMMCAN_2_RXLEN[60]
{
type: UINT(8)
alias: "Road_Information_Length"
flags: OUTPUT|READONLY
desc: "Message Length"
unit: ""
value: 8
}




CANMMCAN_2_RXsta[60]
{
type: UINT(8)
alias: "Road_Information_status"
flags: OUTPUT|READONLY
desc: "Road_Information Status"
unit: ""
value: 0
}




CANMMCAN_2_RXdt[60]
{
type: flt(64,IEEE)
alias: "Road_Information_dt"
flags: OUTPUT|READONLY
desc: "Road_Information DeltaTime"
unit: "s"
value: 0
}




CANMMCAN_2_RXt[60]
{
type: flt(64,IEEE)
alias: "Road_Information_time"
flags: OUTPUT|READONLY
desc: "Road_Information Time"
unit: "s"
value: 0.0
}





endgroup -- block-group "RX"



endgroup -- block-group "Road_Information"



group "SAS1_C" -- subsystem-group
{
     flags: COLLAPSED
}



group "RX" -- subsystem-group
{
     flags: COLLAPSED
}


CANMMCAN_2_RX_Msg_57_Sgn_1
{
type: UINT(8)
alias: "SAS_OK"
flags: OUTPUT|READONLY
desc: ""
unit: ""
value: 0
}




CANMMCAN_2_RX_Msg_57_Sgn_2
{
type: UINT(8)
alias: "SAS_CAL"
flags: OUTPUT|READONLY
desc: ""
unit: ""
value: 0
}




CANMMCAN_2_RX_Msg_57_Sgn_3
{
type: flt(64,IEEE)
alias: "SAS_Angle"
flags: OUTPUT|READONLY
desc: ""
unit: "deg"
value: -900
}




CANMMCAN_2_MIDRX[10]
{
type: UINT(32)
alias: "SAS1_C_ID"
flags: OUTPUT|READONLY
desc: "Message ID"
unit: ""
value: 922
}




CANMMCAN_2_MIDFRX[10]
{
type: UINT(8)
alias: "SAS1_C_IDFormat"
flags: OUTPUT|READONLY
desc: "Message ID Format"
unit: ""
value: 0
}




CANMMCAN_2_RXLEN[10]
{
type: UINT(8)
alias: "SAS1_C_Length"
flags: OUTPUT|READONLY
desc: "Message Length"
unit: ""
value: 8
}




CANMMCAN_2_RXsta[10]
{
type: UINT(8)
alias: "SAS1_C_status"
flags: OUTPUT|READONLY
desc: "SAS1_C Status"
unit: ""
value: 0
}




CANMMCAN_2_RXdt[10]
{
type: flt(64,IEEE)
alias: "SAS1_C_dt"
flags: OUTPUT|READONLY
desc: "SAS1_C DeltaTime"
unit: "s"
value: 0.01
}




CANMMCAN_2_RXt[10]
{
type: flt(64,IEEE)
alias: "SAS1_C_time"
flags: OUTPUT|READONLY
desc: "SAS1_C Time"
unit: "s"
value: 0.0
}





endgroup -- block-group "RX"



group "TX" -- subsystem-group
{
     flags: COLLAPSED
}


CANMMCAN_2_WBS[10]
{
type: UINT(8)
alias: "SAS1_C_CheckEnable"
flags: OUTPUT|READONLY
desc: "Check enabled SAS1_C"
unit: ""
value: 0
}




CANMMCAN_2_TXDT[10]
{
type: flt(64,IEEE)
alias: "SAS1_C_DelayTime"
flags: OUTPUT|READONLY
desc: "DelayTime SAS1_C"
unit: "s"
value: 0
}




CANMMCAN_2_TXsta[10]
{
type: UINT(8)
alias: "SAS1_C_status"
flags: OUTPUT|READONLY
desc: "SAS1_C Status"
unit: ""
value: 0
}




CANMMCAN_2_TXEIN[10]
{
type: UINT(8)
alias: "SAS1_C_Enable"
flags: PARAM
desc: "Enable SAS1_C"
unit: ""
range: <0; 1>
value: 1
}




CANMMCAN_2_TXCIE[10]
{
type: UINT(8)
alias: "SAS1_C_PeriodicalOn"
flags: PARAM
desc: "Activate cyclic transmission for SAS1_C"
unit: ""
range: <0; 1>
value: 1
}




CANMMCAN_2_TXKIEX[10]
{
type: UINT(8)
alias: "SAS1_C_Kickout"
flags: PARAM
desc: "Kickout SAS1_C"
unit: ""
range: <0; 1>
value: 0
}




CANMMCAN_2_TXCT[10]
{
type: flt(64,IEEE)
alias: "SAS1_C_CycleTime"
flags: PARAM
desc: "CycleTime SAS1_C"
unit: "s"
range: <0; 1000>
value: 1.000000e-02
}





endgroup -- block-group "TX"



endgroup -- block-group "SAS1_C"



group "SpeedInformation" -- subsystem-group
{
     flags: COLLAPSED
}



group "RX" -- subsystem-group
{
     flags: COLLAPSED
}


CANMMCAN_2_RX_Msg_58_Sgn_1
{
type: UINT(8)
alias: "radarDeviceSpeedDirection"
flags: OUTPUT|READONLY
desc: ""
unit: ""
value: 0
}




CANMMCAN_2_RX_Msg_58_Sgn_2
{
type: flt(64,IEEE)
alias: "radarDeviceSpeed"
flags: OUTPUT|READONLY
desc: ""
unit: "m/s"
value: 0
}




CANMMCAN_2_MIDRX[7]
{
type: UINT(32)
alias: "SpeedInformation_ID"
flags: OUTPUT|READONLY
desc: "Message ID"
unit: ""
value: 880
}




CANMMCAN_2_MIDFRX[7]
{
type: UINT(8)
alias: "SpeedInformation_IDFormat"
flags: OUTPUT|READONLY
desc: "Message ID Format"
unit: ""
value: 0
}




CANMMCAN_2_RXLEN[7]
{
type: UINT(8)
alias: "SpeedInformation_Length"
flags: OUTPUT|READONLY
desc: "Message Length"
unit: ""
value: 8
}




CANMMCAN_2_RXsta[7]
{
type: UINT(8)
alias: "SpeedInformation_status"
flags: OUTPUT|READONLY
desc: "SpeedInformation Status"
unit: ""
value: 0
}




CANMMCAN_2_RXdt[7]
{
type: flt(64,IEEE)
alias: "SpeedInformation_dt"
flags: OUTPUT|READONLY
desc: "SpeedInformation DeltaTime"
unit: "s"
value: 0.01
}




CANMMCAN_2_RXt[7]
{
type: flt(64,IEEE)
alias: "SpeedInformation_time"
flags: OUTPUT|READONLY
desc: "SpeedInformation Time"
unit: "s"
value: 0.0
}





endgroup -- block-group "RX"



group "TX" -- subsystem-group
{
     flags: COLLAPSED
}


CANMMCAN_2_WBS[7]
{
type: UINT(8)
alias: "SpeedInformation_CheckEnable"
flags: OUTPUT|READONLY
desc: "Check enabled SpeedInformation"
unit: ""
value: 0
}




CANMMCAN_2_TXDT[7]
{
type: flt(64,IEEE)
alias: "SpeedInformation_DelayTime"
flags: OUTPUT|READONLY
desc: "DelayTime SpeedInformation"
unit: "s"
value: 0
}




CANMMCAN_2_TXsta[7]
{
type: UINT(8)
alias: "SpeedInformation_status"
flags: OUTPUT|READONLY
desc: "SpeedInformation Status"
unit: ""
value: 0
}




CANMMCAN_2_TXEIN[7]
{
type: UINT(8)
alias: "SpeedInformation_Enable"
flags: PARAM
desc: "Enable SpeedInformation"
unit: ""
range: <0; 1>
value: 1
}




CANMMCAN_2_TXCIE[7]
{
type: UINT(8)
alias: "SpeedInformation_PeriodicalOn"
flags: PARAM
desc: "Activate cyclic transmission for SpeedInformation"
unit: ""
range: <0; 1>
value: 1
}




CANMMCAN_2_TXKIEX[7]
{
type: UINT(8)
alias: "SpeedInformation_Kickout"
flags: PARAM
desc: "Kickout SpeedInformation"
unit: ""
range: <0; 1>
value: 0
}




CANMMCAN_2_TXCT[7]
{
type: flt(64,IEEE)
alias: "SpeedInformation_CycleTime"
flags: PARAM
desc: "CycleTime SpeedInformation"
unit: "s"
range: <0; 1000>
value: 1.000000e-02
}





endgroup -- block-group "TX"



endgroup -- block-group "SpeedInformation"



group "TEST1" -- subsystem-group
{
     flags: COLLAPSED
}



group "RX" -- subsystem-group
{
     flags: COLLAPSED
}


CANMMCAN_2_RX_Msg_59_Sgn_1
{
type: UINT(8)
alias: "HighBeamCount"
flags: OUTPUT|READONLY
desc: ""
unit: "cnt"
value: 0
}




CANMMCAN_2_RX_Msg_59_Sgn_2
{
type: flt(64,IEEE)
alias: "NoObjTimeLim"
flags: OUTPUT|READONLY
desc: ""
unit: "s"
value: 0
}




CANMMCAN_2_RX_Msg_59_Sgn_3
{
type: flt(64,IEEE)
alias: "HighBeamTime"
flags: OUTPUT|READONLY
desc: ""
unit: "s"
value: 0
}




CANMMCAN_2_RX_Msg_59_Sgn_4
{
type: flt(64,IEEE)
alias: "NoObjTime"
flags: OUTPUT|READONLY
desc: ""
unit: "s"
value: 0
}




CANMMCAN_2_RX_Msg_59_Sgn_5
{
type: UINT(8)
alias: "ForceLowBeamT"
flags: OUTPUT|READONLY
desc: ""
unit: ""
value: 0
}




CANMMCAN_2_RX_Msg_59_Sgn_6
{
type: UINT(8)
alias: "HighBeamSw"
flags: OUTPUT|READONLY
desc: ""
unit: ""
value: 0
}




CANMMCAN_2_RX_Msg_59_Sgn_7
{
type: UINT(8)
alias: "RearFogSw"
flags: OUTPUT|READONLY
desc: ""
unit: ""
value: 0
}




CANMMCAN_2_RX_Msg_59_Sgn_8
{
type: UINT(8)
alias: "ECO_SW_STA"
flags: OUTPUT|READONLY
desc: ""
unit: ""
value: 0
}




CANMMCAN_2_RX_Msg_59_Sgn_9
{
type: UINT(8)
alias: "FECU_HiBeamRly_Sta"
flags: OUTPUT|READONLY
desc: ""
unit: ""
value: 0
}




CANMMCAN_2_RX_Msg_59_Sgn_10
{
type: UINT(8)
alias: "FECU_LoBeamRly_Sta"
flags: OUTPUT|READONLY
desc: ""
unit: ""
value: 0
}




CANMMCAN_2_MIDRX[0]
{
type: UINT(32)
alias: "TEST1_ID"
flags: OUTPUT|READONLY
desc: "Message ID"
unit: ""
value: 849
}




CANMMCAN_2_MIDFRX[0]
{
type: UINT(8)
alias: "TEST1_IDFormat"
flags: OUTPUT|READONLY
desc: "Message ID Format"
unit: ""
value: 0
}




CANMMCAN_2_RXLEN[0]
{
type: UINT(8)
alias: "TEST1_Length"
flags: OUTPUT|READONLY
desc: "Message Length"
unit: ""
value: 8
}




CANMMCAN_2_RXsta[0]
{
type: UINT(8)
alias: "TEST1_status"
flags: OUTPUT|READONLY
desc: "TEST1 Status"
unit: ""
value: 0
}




CANMMCAN_2_RXdt[0]
{
type: flt(64,IEEE)
alias: "TEST1_dt"
flags: OUTPUT|READONLY
desc: "TEST1 DeltaTime"
unit: "s"
value: 0.01
}




CANMMCAN_2_RXt[0]
{
type: flt(64,IEEE)
alias: "TEST1_time"
flags: OUTPUT|READONLY
desc: "TEST1 Time"
unit: "s"
value: 0.0
}





endgroup -- block-group "RX"



group "TX" -- subsystem-group
{
     flags: COLLAPSED
}


CANMMCAN_2_WBS[0]
{
type: UINT(8)
alias: "TEST1_CheckEnable"
flags: OUTPUT|READONLY
desc: "Check enabled TEST1"
unit: ""
value: 0
}




CANMMCAN_2_TXDT[0]
{
type: flt(64,IEEE)
alias: "TEST1_DelayTime"
flags: OUTPUT|READONLY
desc: "DelayTime TEST1"
unit: "s"
value: 0
}




CANMMCAN_2_TXsta[0]
{
type: UINT(8)
alias: "TEST1_status"
flags: OUTPUT|READONLY
desc: "TEST1 Status"
unit: ""
value: 0
}




CANMMCAN_2_TXEIN[0]
{
type: UINT(8)
alias: "TEST1_Enable"
flags: PARAM
desc: "Enable TEST1"
unit: ""
range: <0; 1>
value: 1
}




CANMMCAN_2_TXCIE[0]
{
type: UINT(8)
alias: "TEST1_PeriodicalOn"
flags: PARAM
desc: "Activate cyclic transmission for TEST1"
unit: ""
range: <0; 1>
value: 1
}




CANMMCAN_2_TXKIEX[0]
{
type: UINT(8)
alias: "TEST1_Kickout"
flags: PARAM
desc: "Kickout TEST1"
unit: ""
range: <0; 1>
value: 0
}




CANMMCAN_2_TXCT[0]
{
type: flt(64,IEEE)
alias: "TEST1_CycleTime"
flags: PARAM
desc: "CycleTime TEST1"
unit: "s"
range: <0; 1000>
value: 1.000000e-02
}





endgroup -- block-group "TX"



endgroup -- block-group "TEST1"



group "TEST2" -- subsystem-group
{
     flags: COLLAPSED
}



group "RX" -- subsystem-group
{
     flags: COLLAPSED
}


CANMMCAN_2_RX_Msg_60_Sgn_1
{
type: flt(64,IEEE)
alias: "ObstacleAngle_Test"
flags: OUTPUT|READONLY
desc: ""
unit: "degree"
value: 0
}




CANMMCAN_2_RX_Msg_60_Sgn_2
{
type: flt(64,IEEE)
alias: "ObstacleVelY_Test"
flags: OUTPUT|READONLY
desc: ""
unit: "m/sec"
value: 0
}




CANMMCAN_2_RX_Msg_60_Sgn_3
{
type: flt(64,IEEE)
alias: "ObstacleVelX_Test"
flags: OUTPUT|READONLY
desc: ""
unit: "m/sec"
value: 0
}




CANMMCAN_2_RX_Msg_60_Sgn_4
{
type: flt(64,IEEE)
alias: "ObstaclePosY_Test"
flags: OUTPUT|READONLY
desc: ""
unit: "m"
value: 0
}




CANMMCAN_2_RX_Msg_60_Sgn_5
{
type: flt(64,IEEE)
alias: "ObstaclePosX_Test"
flags: OUTPUT|READONLY
desc: ""
unit: "m"
value: 0
}




CANMMCAN_2_RX_Msg_60_Sgn_6
{
type: UINT(8)
alias: "ObstacleType_Test"
flags: OUTPUT|READONLY
desc: ""
unit: "enum"
value: 0
}




CANMMCAN_2_MIDRX[1]
{
type: UINT(32)
alias: "TEST2_ID"
flags: OUTPUT|READONLY
desc: "Message ID"
unit: ""
value: 850
}




CANMMCAN_2_MIDFRX[1]
{
type: UINT(8)
alias: "TEST2_IDFormat"
flags: OUTPUT|READONLY
desc: "Message ID Format"
unit: ""
value: 0
}




CANMMCAN_2_RXLEN[1]
{
type: UINT(8)
alias: "TEST2_Length"
flags: OUTPUT|READONLY
desc: "Message Length"
unit: ""
value: 8
}




CANMMCAN_2_RXsta[1]
{
type: UINT(8)
alias: "TEST2_status"
flags: OUTPUT|READONLY
desc: "TEST2 Status"
unit: ""
value: 0
}




CANMMCAN_2_RXdt[1]
{
type: flt(64,IEEE)
alias: "TEST2_dt"
flags: OUTPUT|READONLY
desc: "TEST2 DeltaTime"
unit: "s"
value: 0.05
}




CANMMCAN_2_RXt[1]
{
type: flt(64,IEEE)
alias: "TEST2_time"
flags: OUTPUT|READONLY
desc: "TEST2 Time"
unit: "s"
value: 0.0
}





endgroup -- block-group "RX"



group "TX" -- subsystem-group
{
     flags: COLLAPSED
}


CANMMCAN_2_WBS[1]
{
type: UINT(8)
alias: "TEST2_CheckEnable"
flags: OUTPUT|READONLY
desc: "Check enabled TEST2"
unit: ""
value: 0
}




CANMMCAN_2_TXDT[1]
{
type: flt(64,IEEE)
alias: "TEST2_DelayTime"
flags: OUTPUT|READONLY
desc: "DelayTime TEST2"
unit: "s"
value: 0
}




CANMMCAN_2_TXsta[1]
{
type: UINT(8)
alias: "TEST2_status"
flags: OUTPUT|READONLY
desc: "TEST2 Status"
unit: ""
value: 0
}




CANMMCAN_2_TXEIN[1]
{
type: UINT(8)
alias: "TEST2_Enable"
flags: PARAM
desc: "Enable TEST2"
unit: ""
range: <0; 1>
value: 1
}




CANMMCAN_2_TXCIE[1]
{
type: UINT(8)
alias: "TEST2_PeriodicalOn"
flags: PARAM
desc: "Activate cyclic transmission for TEST2"
unit: ""
range: <0; 1>
value: 1
}




CANMMCAN_2_TXKIEX[1]
{
type: UINT(8)
alias: "TEST2_Kickout"
flags: PARAM
desc: "Kickout TEST2"
unit: ""
range: <0; 1>
value: 0
}




CANMMCAN_2_TXCT[1]
{
type: flt(64,IEEE)
alias: "TEST2_CycleTime"
flags: PARAM
desc: "CycleTime TEST2"
unit: "s"
range: <0; 1000>
value: 5.000000e-02
}





endgroup -- block-group "TX"



endgroup -- block-group "TEST2"



group "TEST3" -- subsystem-group
{
     flags: COLLAPSED
}



group "RX" -- subsystem-group
{
     flags: COLLAPSED
}


CANMMCAN_2_RX_Msg_61_Sgn_1
{
type: flt(64,IEEE)
alias: "ObstacleAngle_Test"
flags: OUTPUT|READONLY
desc: ""
unit: "degree"
value: 0
}




CANMMCAN_2_RX_Msg_61_Sgn_2
{
type: flt(64,IEEE)
alias: "ObstacleVelY_Test"
flags: OUTPUT|READONLY
desc: ""
unit: "m/sec"
value: 0
}




CANMMCAN_2_RX_Msg_61_Sgn_3
{
type: flt(64,IEEE)
alias: "ObstacleVelX_Test"
flags: OUTPUT|READONLY
desc: ""
unit: "m/sec"
value: 0
}




CANMMCAN_2_RX_Msg_61_Sgn_4
{
type: flt(64,IEEE)
alias: "ObstaclePosY_Test"
flags: OUTPUT|READONLY
desc: ""
unit: "m"
value: 0
}




CANMMCAN_2_RX_Msg_61_Sgn_5
{
type: flt(64,IEEE)
alias: "ObstaclePosX_Test"
flags: OUTPUT|READONLY
desc: ""
unit: "m"
value: 0
}




CANMMCAN_2_RX_Msg_61_Sgn_6
{
type: UINT(8)
alias: "ObstacleType_Test"
flags: OUTPUT|READONLY
desc: ""
unit: "enum"
value: 0
}




CANMMCAN_2_MIDRX[2]
{
type: UINT(32)
alias: "TEST3_ID"
flags: OUTPUT|READONLY
desc: "Message ID"
unit: ""
value: 851
}




CANMMCAN_2_MIDFRX[2]
{
type: UINT(8)
alias: "TEST3_IDFormat"
flags: OUTPUT|READONLY
desc: "Message ID Format"
unit: ""
value: 0
}




CANMMCAN_2_RXLEN[2]
{
type: UINT(8)
alias: "TEST3_Length"
flags: OUTPUT|READONLY
desc: "Message Length"
unit: ""
value: 8
}




CANMMCAN_2_RXsta[2]
{
type: UINT(8)
alias: "TEST3_status"
flags: OUTPUT|READONLY
desc: "TEST3 Status"
unit: ""
value: 0
}




CANMMCAN_2_RXdt[2]
{
type: flt(64,IEEE)
alias: "TEST3_dt"
flags: OUTPUT|READONLY
desc: "TEST3 DeltaTime"
unit: "s"
value: 0.05
}




CANMMCAN_2_RXt[2]
{
type: flt(64,IEEE)
alias: "TEST3_time"
flags: OUTPUT|READONLY
desc: "TEST3 Time"
unit: "s"
value: 0.0
}





endgroup -- block-group "RX"



group "TX" -- subsystem-group
{
     flags: COLLAPSED
}


CANMMCAN_2_WBS[2]
{
type: UINT(8)
alias: "TEST3_CheckEnable"
flags: OUTPUT|READONLY
desc: "Check enabled TEST3"
unit: ""
value: 0
}




CANMMCAN_2_TXDT[2]
{
type: flt(64,IEEE)
alias: "TEST3_DelayTime"
flags: OUTPUT|READONLY
desc: "DelayTime TEST3"
unit: "s"
value: 0
}




CANMMCAN_2_TXsta[2]
{
type: UINT(8)
alias: "TEST3_status"
flags: OUTPUT|READONLY
desc: "TEST3 Status"
unit: ""
value: 0
}




CANMMCAN_2_TXEIN[2]
{
type: UINT(8)
alias: "TEST3_Enable"
flags: PARAM
desc: "Enable TEST3"
unit: ""
range: <0; 1>
value: 1
}




CANMMCAN_2_TXCIE[2]
{
type: UINT(8)
alias: "TEST3_PeriodicalOn"
flags: PARAM
desc: "Activate cyclic transmission for TEST3"
unit: ""
range: <0; 1>
value: 1
}




CANMMCAN_2_TXKIEX[2]
{
type: UINT(8)
alias: "TEST3_Kickout"
flags: PARAM
desc: "Kickout TEST3"
unit: ""
range: <0; 1>
value: 0
}




CANMMCAN_2_TXCT[2]
{
type: flt(64,IEEE)
alias: "TEST3_CycleTime"
flags: PARAM
desc: "CycleTime TEST3"
unit: "s"
range: <0; 1000>
value: 5.000000e-02
}





endgroup -- block-group "TX"



endgroup -- block-group "TEST3"



group "TEST4" -- subsystem-group
{
     flags: COLLAPSED
}



group "RX" -- subsystem-group
{
     flags: COLLAPSED
}


CANMMCAN_2_RX_Msg_62_Sgn_1
{
type: flt(64,IEEE)
alias: "ObstacleAngle_Test"
flags: OUTPUT|READONLY
desc: ""
unit: "degree"
value: 0
}




CANMMCAN_2_RX_Msg_62_Sgn_2
{
type: flt(64,IEEE)
alias: "ObstacleVelY_Test"
flags: OUTPUT|READONLY
desc: ""
unit: "m/sec"
value: 0
}




CANMMCAN_2_RX_Msg_62_Sgn_3
{
type: flt(64,IEEE)
alias: "ObstacleVelX_Test"
flags: OUTPUT|READONLY
desc: ""
unit: "m/sec"
value: 0
}




CANMMCAN_2_RX_Msg_62_Sgn_4
{
type: flt(64,IEEE)
alias: "ObstaclePosY_Test"
flags: OUTPUT|READONLY
desc: ""
unit: "m"
value: 0
}




CANMMCAN_2_RX_Msg_62_Sgn_5
{
type: flt(64,IEEE)
alias: "ObstaclePosX_Test"
flags: OUTPUT|READONLY
desc: ""
unit: "m"
value: 0
}




CANMMCAN_2_RX_Msg_62_Sgn_6
{
type: UINT(8)
alias: "ObstacleType_Test"
flags: OUTPUT|READONLY
desc: ""
unit: "enum"
value: 0
}




CANMMCAN_2_MIDRX[3]
{
type: UINT(32)
alias: "TEST4_ID"
flags: OUTPUT|READONLY
desc: "Message ID"
unit: ""
value: 852
}




CANMMCAN_2_MIDFRX[3]
{
type: UINT(8)
alias: "TEST4_IDFormat"
flags: OUTPUT|READONLY
desc: "Message ID Format"
unit: ""
value: 0
}




CANMMCAN_2_RXLEN[3]
{
type: UINT(8)
alias: "TEST4_Length"
flags: OUTPUT|READONLY
desc: "Message Length"
unit: ""
value: 8
}




CANMMCAN_2_RXsta[3]
{
type: UINT(8)
alias: "TEST4_status"
flags: OUTPUT|READONLY
desc: "TEST4 Status"
unit: ""
value: 0
}




CANMMCAN_2_RXdt[3]
{
type: flt(64,IEEE)
alias: "TEST4_dt"
flags: OUTPUT|READONLY
desc: "TEST4 DeltaTime"
unit: "s"
value: 0.05
}




CANMMCAN_2_RXt[3]
{
type: flt(64,IEEE)
alias: "TEST4_time"
flags: OUTPUT|READONLY
desc: "TEST4 Time"
unit: "s"
value: 0.0
}





endgroup -- block-group "RX"



group "TX" -- subsystem-group
{
     flags: COLLAPSED
}


CANMMCAN_2_WBS[3]
{
type: UINT(8)
alias: "TEST4_CheckEnable"
flags: OUTPUT|READONLY
desc: "Check enabled TEST4"
unit: ""
value: 0
}




CANMMCAN_2_TXDT[3]
{
type: flt(64,IEEE)
alias: "TEST4_DelayTime"
flags: OUTPUT|READONLY
desc: "DelayTime TEST4"
unit: "s"
value: 0
}




CANMMCAN_2_TXsta[3]
{
type: UINT(8)
alias: "TEST4_status"
flags: OUTPUT|READONLY
desc: "TEST4 Status"
unit: ""
value: 0
}




CANMMCAN_2_TXEIN[3]
{
type: UINT(8)
alias: "TEST4_Enable"
flags: PARAM
desc: "Enable TEST4"
unit: ""
range: <0; 1>
value: 1
}




CANMMCAN_2_TXCIE[3]
{
type: UINT(8)
alias: "TEST4_PeriodicalOn"
flags: PARAM
desc: "Activate cyclic transmission for TEST4"
unit: ""
range: <0; 1>
value: 1
}




CANMMCAN_2_TXKIEX[3]
{
type: UINT(8)
alias: "TEST4_Kickout"
flags: PARAM
desc: "Kickout TEST4"
unit: ""
range: <0; 1>
value: 0
}




CANMMCAN_2_TXCT[3]
{
type: flt(64,IEEE)
alias: "TEST4_CycleTime"
flags: PARAM
desc: "CycleTime TEST4"
unit: "s"
range: <0; 1000>
value: 5.000000e-02
}





endgroup -- block-group "TX"



endgroup -- block-group "TEST4"



group "TEST5" -- subsystem-group
{
     flags: COLLAPSED
}



group "RX" -- subsystem-group
{
     flags: COLLAPSED
}


CANMMCAN_2_RX_Msg_63_Sgn_1
{
type: flt(64,IEEE)
alias: "ObstacleAngle_Test"
flags: OUTPUT|READONLY
desc: ""
unit: "degree"
value: 0
}




CANMMCAN_2_RX_Msg_63_Sgn_2
{
type: flt(64,IEEE)
alias: "ObstacleVelY_Test"
flags: OUTPUT|READONLY
desc: ""
unit: "m/sec"
value: 0
}




CANMMCAN_2_RX_Msg_63_Sgn_3
{
type: flt(64,IEEE)
alias: "ObstacleVelX_Test"
flags: OUTPUT|READONLY
desc: ""
unit: "m/sec"
value: 0
}




CANMMCAN_2_RX_Msg_63_Sgn_4
{
type: flt(64,IEEE)
alias: "ObstaclePosY_Test"
flags: OUTPUT|READONLY
desc: ""
unit: "m"
value: 0
}




CANMMCAN_2_RX_Msg_63_Sgn_5
{
type: flt(64,IEEE)
alias: "ObstaclePosX_Test"
flags: OUTPUT|READONLY
desc: ""
unit: "m"
value: 0
}




CANMMCAN_2_RX_Msg_63_Sgn_6
{
type: UINT(8)
alias: "ObstacleType_Test"
flags: OUTPUT|READONLY
desc: ""
unit: "enum"
value: 0
}




CANMMCAN_2_MIDRX[4]
{
type: UINT(32)
alias: "TEST5_ID"
flags: OUTPUT|READONLY
desc: "Message ID"
unit: ""
value: 853
}




CANMMCAN_2_MIDFRX[4]
{
type: UINT(8)
alias: "TEST5_IDFormat"
flags: OUTPUT|READONLY
desc: "Message ID Format"
unit: ""
value: 0
}




CANMMCAN_2_RXLEN[4]
{
type: UINT(8)
alias: "TEST5_Length"
flags: OUTPUT|READONLY
desc: "Message Length"
unit: ""
value: 8
}




CANMMCAN_2_RXsta[4]
{
type: UINT(8)
alias: "TEST5_status"
flags: OUTPUT|READONLY
desc: "TEST5 Status"
unit: ""
value: 0
}




CANMMCAN_2_RXdt[4]
{
type: flt(64,IEEE)
alias: "TEST5_dt"
flags: OUTPUT|READONLY
desc: "TEST5 DeltaTime"
unit: "s"
value: 0.05
}




CANMMCAN_2_RXt[4]
{
type: flt(64,IEEE)
alias: "TEST5_time"
flags: OUTPUT|READONLY
desc: "TEST5 Time"
unit: "s"
value: 0.0
}





endgroup -- block-group "RX"



group "TX" -- subsystem-group
{
     flags: COLLAPSED
}


CANMMCAN_2_WBS[4]
{
type: UINT(8)
alias: "TEST5_CheckEnable"
flags: OUTPUT|READONLY
desc: "Check enabled TEST5"
unit: ""
value: 0
}




CANMMCAN_2_TXDT[4]
{
type: flt(64,IEEE)
alias: "TEST5_DelayTime"
flags: OUTPUT|READONLY
desc: "DelayTime TEST5"
unit: "s"
value: 0
}




CANMMCAN_2_TXsta[4]
{
type: UINT(8)
alias: "TEST5_status"
flags: OUTPUT|READONLY
desc: "TEST5 Status"
unit: ""
value: 0
}




CANMMCAN_2_TXEIN[4]
{
type: UINT(8)
alias: "TEST5_Enable"
flags: PARAM
desc: "Enable TEST5"
unit: ""
range: <0; 1>
value: 1
}




CANMMCAN_2_TXCIE[4]
{
type: UINT(8)
alias: "TEST5_PeriodicalOn"
flags: PARAM
desc: "Activate cyclic transmission for TEST5"
unit: ""
range: <0; 1>
value: 1
}




CANMMCAN_2_TXKIEX[4]
{
type: UINT(8)
alias: "TEST5_Kickout"
flags: PARAM
desc: "Kickout TEST5"
unit: ""
range: <0; 1>
value: 0
}




CANMMCAN_2_TXCT[4]
{
type: flt(64,IEEE)
alias: "TEST5_CycleTime"
flags: PARAM
desc: "CycleTime TEST5"
unit: "s"
range: <0; 1000>
value: 5.000000e-02
}





endgroup -- block-group "TX"



endgroup -- block-group "TEST5"



group "TEST6" -- subsystem-group
{
     flags: COLLAPSED
}



group "RX" -- subsystem-group
{
     flags: COLLAPSED
}


CANMMCAN_2_RX_Msg_64_Sgn_1
{
type: flt(64,IEEE)
alias: "ObstacleAngle_Test"
flags: OUTPUT|READONLY
desc: ""
unit: "degree"
value: 0
}




CANMMCAN_2_RX_Msg_64_Sgn_2
{
type: flt(64,IEEE)
alias: "ObstacleVelY_Test"
flags: OUTPUT|READONLY
desc: ""
unit: "m/sec"
value: 0
}




CANMMCAN_2_RX_Msg_64_Sgn_3
{
type: flt(64,IEEE)
alias: "ObstacleVelX_Test"
flags: OUTPUT|READONLY
desc: ""
unit: "m/sec"
value: 0
}




CANMMCAN_2_RX_Msg_64_Sgn_4
{
type: flt(64,IEEE)
alias: "ObstaclePosY_Test"
flags: OUTPUT|READONLY
desc: ""
unit: "m"
value: 0
}




CANMMCAN_2_RX_Msg_64_Sgn_5
{
type: flt(64,IEEE)
alias: "ObstaclePosX_Test"
flags: OUTPUT|READONLY
desc: ""
unit: "m"
value: 0
}




CANMMCAN_2_RX_Msg_64_Sgn_6
{
type: UINT(8)
alias: "ObstacleType_Test"
flags: OUTPUT|READONLY
desc: ""
unit: "enum"
value: 0
}




CANMMCAN_2_MIDRX[5]
{
type: UINT(32)
alias: "TEST6_ID"
flags: OUTPUT|READONLY
desc: "Message ID"
unit: ""
value: 854
}




CANMMCAN_2_MIDFRX[5]
{
type: UINT(8)
alias: "TEST6_IDFormat"
flags: OUTPUT|READONLY
desc: "Message ID Format"
unit: ""
value: 0
}




CANMMCAN_2_RXLEN[5]
{
type: UINT(8)
alias: "TEST6_Length"
flags: OUTPUT|READONLY
desc: "Message Length"
unit: ""
value: 8
}




CANMMCAN_2_RXsta[5]
{
type: UINT(8)
alias: "TEST6_status"
flags: OUTPUT|READONLY
desc: "TEST6 Status"
unit: ""
value: 0
}




CANMMCAN_2_RXdt[5]
{
type: flt(64,IEEE)
alias: "TEST6_dt"
flags: OUTPUT|READONLY
desc: "TEST6 DeltaTime"
unit: "s"
value: 0.05
}




CANMMCAN_2_RXt[5]
{
type: flt(64,IEEE)
alias: "TEST6_time"
flags: OUTPUT|READONLY
desc: "TEST6 Time"
unit: "s"
value: 0.0
}





endgroup -- block-group "RX"



group "TX" -- subsystem-group
{
     flags: COLLAPSED
}


CANMMCAN_2_WBS[5]
{
type: UINT(8)
alias: "TEST6_CheckEnable"
flags: OUTPUT|READONLY
desc: "Check enabled TEST6"
unit: ""
value: 0
}




CANMMCAN_2_TXDT[5]
{
type: flt(64,IEEE)
alias: "TEST6_DelayTime"
flags: OUTPUT|READONLY
desc: "DelayTime TEST6"
unit: "s"
value: 0
}




CANMMCAN_2_TXsta[5]
{
type: UINT(8)
alias: "TEST6_status"
flags: OUTPUT|READONLY
desc: "TEST6 Status"
unit: ""
value: 0
}




CANMMCAN_2_TXEIN[5]
{
type: UINT(8)
alias: "TEST6_Enable"
flags: PARAM
desc: "Enable TEST6"
unit: ""
range: <0; 1>
value: 1
}




CANMMCAN_2_TXCIE[5]
{
type: UINT(8)
alias: "TEST6_PeriodicalOn"
flags: PARAM
desc: "Activate cyclic transmission for TEST6"
unit: ""
range: <0; 1>
value: 1
}




CANMMCAN_2_TXKIEX[5]
{
type: UINT(8)
alias: "TEST6_Kickout"
flags: PARAM
desc: "Kickout TEST6"
unit: ""
range: <0; 1>
value: 0
}




CANMMCAN_2_TXCT[5]
{
type: flt(64,IEEE)
alias: "TEST6_CycleTime"
flags: PARAM
desc: "CycleTime TEST6"
unit: "s"
range: <0; 1000>
value: 5.000000e-02
}





endgroup -- block-group "TX"



endgroup -- block-group "TEST6"



group "YawRateInformation" -- subsystem-group
{
     flags: COLLAPSED
}



group "RX" -- subsystem-group
{
     flags: COLLAPSED
}


CANMMCAN_2_RX_Msg_65_Sgn_1
{
type: flt(64,IEEE)
alias: "radarDeviceYawRate"
flags: OUTPUT|READONLY
desc: ""
unit: "?/s"
value: -327.68
}




CANMMCAN_2_MIDRX[8]
{
type: UINT(32)
alias: "YawRateInformation_ID"
flags: OUTPUT|READONLY
desc: "Message ID"
unit: ""
value: 881
}




CANMMCAN_2_MIDFRX[8]
{
type: UINT(8)
alias: "YawRateInformation_IDFormat"
flags: OUTPUT|READONLY
desc: "Message ID Format"
unit: ""
value: 0
}




CANMMCAN_2_RXLEN[8]
{
type: UINT(8)
alias: "YawRateInformation_Length"
flags: OUTPUT|READONLY
desc: "Message Length"
unit: ""
value: 8
}




CANMMCAN_2_RXsta[8]
{
type: UINT(8)
alias: "YawRateInformation_status"
flags: OUTPUT|READONLY
desc: "YawRateInformation Status"
unit: ""
value: 0
}




CANMMCAN_2_RXdt[8]
{
type: flt(64,IEEE)
alias: "YawRateInformation_dt"
flags: OUTPUT|READONLY
desc: "YawRateInformation DeltaTime"
unit: "s"
value: 0.01
}




CANMMCAN_2_RXt[8]
{
type: flt(64,IEEE)
alias: "YawRateInformation_time"
flags: OUTPUT|READONLY
desc: "YawRateInformation Time"
unit: "s"
value: 0.0
}





endgroup -- block-group "RX"



group "TX" -- subsystem-group
{
     flags: COLLAPSED
}


CANMMCAN_2_WBS[8]
{
type: UINT(8)
alias: "YawRateInformation_CheckEnable"
flags: OUTPUT|READONLY
desc: "Check enabled YawRateInformation"
unit: ""
value: 0
}




CANMMCAN_2_TXDT[8]
{
type: flt(64,IEEE)
alias: "YawRateInformation_DelayTime"
flags: OUTPUT|READONLY
desc: "DelayTime YawRateInformation"
unit: "s"
value: 0
}




CANMMCAN_2_TXsta[8]
{
type: UINT(8)
alias: "YawRateInformation_status"
flags: OUTPUT|READONLY
desc: "YawRateInformation Status"
unit: ""
value: 0
}




CANMMCAN_2_TXEIN[8]
{
type: UINT(8)
alias: "YawRateInformation_Enable"
flags: PARAM
desc: "Enable YawRateInformation"
unit: ""
range: <0; 1>
value: 1
}




CANMMCAN_2_TXCIE[8]
{
type: UINT(8)
alias: "YawRateInformation_PeriodicalOn"
flags: PARAM
desc: "Activate cyclic transmission for YawRateInformation"
unit: ""
range: <0; 1>
value: 1
}




CANMMCAN_2_TXKIEX[8]
{
type: UINT(8)
alias: "YawRateInformation_Kickout"
flags: PARAM
desc: "Kickout YawRateInformation"
unit: ""
range: <0; 1>
value: 0
}




CANMMCAN_2_TXCT[8]
{
type: flt(64,IEEE)
alias: "YawRateInformation_CycleTime"
flags: PARAM
desc: "CycleTime YawRateInformation"
unit: "s"
range: <0; 1000>
value: 1.000000e-02
}





endgroup -- block-group "TX"



endgroup -- block-group "YawRateInformation"



group "RTICANMMCaptureMessage_1" -- subsystem-group
{
     flags: COLLAPSED
}


CANMMCAN_2_CAPS[0]
{
type: UINT(8)
alias: "RTICANMMCaptureMessage_1_status"
flags: OUTPUT|READONLY
desc: "RTICANMMCaptureMessage_1 Status"
unit: ""
value: 0
}




CANMMCAN_2_CAPL[0]
{
type: UINT(8)
alias: "RTICANMMCaptureMessage_1_Length"
flags: OUTPUT|READONLY
desc: "Message Length"
unit: ""
value: 0
}




CANMMCAN_2_CAPT[0]
{
type: flt(64,IEEE)
alias: "RTICANMMCaptureMessage_1_time"
flags: OUTPUT|READONLY
desc: "RTICANMMCaptureMessage_1 Time"
unit: "s"
value: 0.0
}




CANMMCAN_2_CAPID[0]
{
type: UINT(32)
alias: "RTICANMMCaptureMessage_1_ID"
flags: OUTPUT|READONLY
desc: "Message ID"
unit: ""
value: 0
}




CANMMCAN_2_CAPIDF[0]
{
type: UINT(8)
alias: "RTICANMMCaptureMessage_1_IDFormat"
flags: OUTPUT|READONLY
desc: "Message ID Format"
unit: ""
value: 0
}




CANMMCAN_2_CAPD_0[0]
{
type: UINT(8)
alias: "RTICANMMCaptureMessage_1_RAW_byte_1"
flags: OUTPUT|READONLY
desc: "RTICANMMCaptureMessage_1 Byte 1"
unit: ""
value: 0
}




CANMMCAN_2_CAPD_1[0]
{
type: UINT(8)
alias: "RTICANMMCaptureMessage_1_RAW_byte_2"
flags: OUTPUT|READONLY
desc: "RTICANMMCaptureMessage_1 Byte 2"
unit: ""
value: 0
}




CANMMCAN_2_CAPD_2[0]
{
type: UINT(8)
alias: "RTICANMMCaptureMessage_1_RAW_byte_3"
flags: OUTPUT|READONLY
desc: "RTICANMMCaptureMessage_1 Byte 3"
unit: ""
value: 0
}




CANMMCAN_2_CAPD_3[0]
{
type: UINT(8)
alias: "RTICANMMCaptureMessage_1_RAW_byte_4"
flags: OUTPUT|READONLY
desc: "RTICANMMCaptureMessage_1 Byte 4"
unit: ""
value: 0
}




CANMMCAN_2_CAPD_4[0]
{
type: UINT(8)
alias: "RTICANMMCaptureMessage_1_RAW_byte_5"
flags: OUTPUT|READONLY
desc: "RTICANMMCaptureMessage_1 Byte 5"
unit: ""
value: 0
}




CANMMCAN_2_CAPD_5[0]
{
type: UINT(8)
alias: "RTICANMMCaptureMessage_1_RAW_byte_6"
flags: OUTPUT|READONLY
desc: "RTICANMMCaptureMessage_1 Byte 6"
unit: ""
value: 0
}




CANMMCAN_2_CAPD_6[0]
{
type: UINT(8)
alias: "RTICANMMCaptureMessage_1_RAW_byte_7"
flags: OUTPUT|READONLY
desc: "RTICANMMCaptureMessage_1 Byte 7"
unit: ""
value: 0
}




CANMMCAN_2_CAPD_7[0]
{
type: UINT(8)
alias: "RTICANMMCaptureMessage_1_RAW_byte_8"
flags: OUTPUT|READONLY
desc: "RTICANMMCaptureMessage_1 Byte 8"
unit: ""
value: 0
}





endgroup -- block-group "RTICANMMCaptureMessage_1"



group "RTICANMMCaptureMessage_2" -- subsystem-group
{
     flags: COLLAPSED
}


CANMMCAN_2_CAPS[1]
{
type: UINT(8)
alias: "RTICANMMCaptureMessage_2_status"
flags: OUTPUT|READONLY
desc: "RTICANMMCaptureMessage_2 Status"
unit: ""
value: 0
}




CANMMCAN_2_CAPL[1]
{
type: UINT(8)
alias: "RTICANMMCaptureMessage_2_Length"
flags: OUTPUT|READONLY
desc: "Message Length"
unit: ""
value: 0
}




CANMMCAN_2_CAPT[1]
{
type: flt(64,IEEE)
alias: "RTICANMMCaptureMessage_2_time"
flags: OUTPUT|READONLY
desc: "RTICANMMCaptureMessage_2 Time"
unit: "s"
value: 0.0
}




CANMMCAN_2_CAPID[1]
{
type: UINT(32)
alias: "RTICANMMCaptureMessage_2_ID"
flags: OUTPUT|READONLY
desc: "Message ID"
unit: ""
value: 0
}




CANMMCAN_2_CAPIDF[1]
{
type: UINT(8)
alias: "RTICANMMCaptureMessage_2_IDFormat"
flags: OUTPUT|READONLY
desc: "Message ID Format"
unit: ""
value: 0
}




CANMMCAN_2_CAPD_0[1]
{
type: UINT(8)
alias: "RTICANMMCaptureMessage_2_RAW_byte_1"
flags: OUTPUT|READONLY
desc: "RTICANMMCaptureMessage_2 Byte 1"
unit: ""
value: 0
}




CANMMCAN_2_CAPD_1[1]
{
type: UINT(8)
alias: "RTICANMMCaptureMessage_2_RAW_byte_2"
flags: OUTPUT|READONLY
desc: "RTICANMMCaptureMessage_2 Byte 2"
unit: ""
value: 0
}




CANMMCAN_2_CAPD_2[1]
{
type: UINT(8)
alias: "RTICANMMCaptureMessage_2_RAW_byte_3"
flags: OUTPUT|READONLY
desc: "RTICANMMCaptureMessage_2 Byte 3"
unit: ""
value: 0
}




CANMMCAN_2_CAPD_3[1]
{
type: UINT(8)
alias: "RTICANMMCaptureMessage_2_RAW_byte_4"
flags: OUTPUT|READONLY
desc: "RTICANMMCaptureMessage_2 Byte 4"
unit: ""
value: 0
}




CANMMCAN_2_CAPD_4[1]
{
type: UINT(8)
alias: "RTICANMMCaptureMessage_2_RAW_byte_5"
flags: OUTPUT|READONLY
desc: "RTICANMMCaptureMessage_2 Byte 5"
unit: ""
value: 0
}




CANMMCAN_2_CAPD_5[1]
{
type: UINT(8)
alias: "RTICANMMCaptureMessage_2_RAW_byte_6"
flags: OUTPUT|READONLY
desc: "RTICANMMCaptureMessage_2 Byte 6"
unit: ""
value: 0
}




CANMMCAN_2_CAPD_6[1]
{
type: UINT(8)
alias: "RTICANMMCaptureMessage_2_RAW_byte_7"
flags: OUTPUT|READONLY
desc: "RTICANMMCaptureMessage_2 Byte 7"
unit: ""
value: 0
}




CANMMCAN_2_CAPD_7[1]
{
type: UINT(8)
alias: "RTICANMMCaptureMessage_2_RAW_byte_8"
flags: OUTPUT|READONLY
desc: "RTICANMMCaptureMessage_2 Byte 8"
unit: ""
value: 0
}





endgroup -- block-group "RTICANMMCaptureMessage_2"



group "RTICANMMCaptureMessage_3" -- subsystem-group
{
     flags: COLLAPSED
}


CANMMCAN_2_CAPS[2]
{
type: UINT(8)
alias: "RTICANMMCaptureMessage_3_status"
flags: OUTPUT|READONLY
desc: "RTICANMMCaptureMessage_3 Status"
unit: ""
value: 0
}




CANMMCAN_2_CAPL[2]
{
type: UINT(8)
alias: "RTICANMMCaptureMessage_3_Length"
flags: OUTPUT|READONLY
desc: "Message Length"
unit: ""
value: 0
}




CANMMCAN_2_CAPT[2]
{
type: flt(64,IEEE)
alias: "RTICANMMCaptureMessage_3_time"
flags: OUTPUT|READONLY
desc: "RTICANMMCaptureMessage_3 Time"
unit: "s"
value: 0.0
}




CANMMCAN_2_CAPID[2]
{
type: UINT(32)
alias: "RTICANMMCaptureMessage_3_ID"
flags: OUTPUT|READONLY
desc: "Message ID"
unit: ""
value: 0
}




CANMMCAN_2_CAPIDF[2]
{
type: UINT(8)
alias: "RTICANMMCaptureMessage_3_IDFormat"
flags: OUTPUT|READONLY
desc: "Message ID Format"
unit: ""
value: 0
}




CANMMCAN_2_CAPD_0[2]
{
type: UINT(8)
alias: "RTICANMMCaptureMessage_3_RAW_byte_1"
flags: OUTPUT|READONLY
desc: "RTICANMMCaptureMessage_3 Byte 1"
unit: ""
value: 0
}




CANMMCAN_2_CAPD_1[2]
{
type: UINT(8)
alias: "RTICANMMCaptureMessage_3_RAW_byte_2"
flags: OUTPUT|READONLY
desc: "RTICANMMCaptureMessage_3 Byte 2"
unit: ""
value: 0
}




CANMMCAN_2_CAPD_2[2]
{
type: UINT(8)
alias: "RTICANMMCaptureMessage_3_RAW_byte_3"
flags: OUTPUT|READONLY
desc: "RTICANMMCaptureMessage_3 Byte 3"
unit: ""
value: 0
}




CANMMCAN_2_CAPD_3[2]
{
type: UINT(8)
alias: "RTICANMMCaptureMessage_3_RAW_byte_4"
flags: OUTPUT|READONLY
desc: "RTICANMMCaptureMessage_3 Byte 4"
unit: ""
value: 0
}




CANMMCAN_2_CAPD_4[2]
{
type: UINT(8)
alias: "RTICANMMCaptureMessage_3_RAW_byte_5"
flags: OUTPUT|READONLY
desc: "RTICANMMCaptureMessage_3 Byte 5"
unit: ""
value: 0
}




CANMMCAN_2_CAPD_5[2]
{
type: UINT(8)
alias: "RTICANMMCaptureMessage_3_RAW_byte_6"
flags: OUTPUT|READONLY
desc: "RTICANMMCaptureMessage_3 Byte 6"
unit: ""
value: 0
}




CANMMCAN_2_CAPD_6[2]
{
type: UINT(8)
alias: "RTICANMMCaptureMessage_3_RAW_byte_7"
flags: OUTPUT|READONLY
desc: "RTICANMMCaptureMessage_3 Byte 7"
unit: ""
value: 0
}




CANMMCAN_2_CAPD_7[2]
{
type: UINT(8)
alias: "RTICANMMCaptureMessage_3_RAW_byte_8"
flags: OUTPUT|READONLY
desc: "RTICANMMCaptureMessage_3 Byte 8"
unit: ""
value: 0
}





endgroup -- block-group "RTICANMMCaptureMessage_3"



group "RTICANMMCaptureMessage_4" -- subsystem-group
{
     flags: COLLAPSED
}


CANMMCAN_2_CAPS[3]
{
type: UINT(8)
alias: "RTICANMMCaptureMessage_4_status"
flags: OUTPUT|READONLY
desc: "RTICANMMCaptureMessage_4 Status"
unit: ""
value: 0
}




CANMMCAN_2_CAPL[3]
{
type: UINT(8)
alias: "RTICANMMCaptureMessage_4_Length"
flags: OUTPUT|READONLY
desc: "Message Length"
unit: ""
value: 0
}




CANMMCAN_2_CAPT[3]
{
type: flt(64,IEEE)
alias: "RTICANMMCaptureMessage_4_time"
flags: OUTPUT|READONLY
desc: "RTICANMMCaptureMessage_4 Time"
unit: "s"
value: 0.0
}




CANMMCAN_2_CAPID[3]
{
type: UINT(32)
alias: "RTICANMMCaptureMessage_4_ID"
flags: OUTPUT|READONLY
desc: "Message ID"
unit: ""
value: 0
}




CANMMCAN_2_CAPIDF[3]
{
type: UINT(8)
alias: "RTICANMMCaptureMessage_4_IDFormat"
flags: OUTPUT|READONLY
desc: "Message ID Format"
unit: ""
value: 0
}




CANMMCAN_2_CAPD_0[3]
{
type: UINT(8)
alias: "RTICANMMCaptureMessage_4_RAW_byte_1"
flags: OUTPUT|READONLY
desc: "RTICANMMCaptureMessage_4 Byte 1"
unit: ""
value: 0
}




CANMMCAN_2_CAPD_1[3]
{
type: UINT(8)
alias: "RTICANMMCaptureMessage_4_RAW_byte_2"
flags: OUTPUT|READONLY
desc: "RTICANMMCaptureMessage_4 Byte 2"
unit: ""
value: 0
}




CANMMCAN_2_CAPD_2[3]
{
type: UINT(8)
alias: "RTICANMMCaptureMessage_4_RAW_byte_3"
flags: OUTPUT|READONLY
desc: "RTICANMMCaptureMessage_4 Byte 3"
unit: ""
value: 0
}




CANMMCAN_2_CAPD_3[3]
{
type: UINT(8)
alias: "RTICANMMCaptureMessage_4_RAW_byte_4"
flags: OUTPUT|READONLY
desc: "RTICANMMCaptureMessage_4 Byte 4"
unit: ""
value: 0
}




CANMMCAN_2_CAPD_4[3]
{
type: UINT(8)
alias: "RTICANMMCaptureMessage_4_RAW_byte_5"
flags: OUTPUT|READONLY
desc: "RTICANMMCaptureMessage_4 Byte 5"
unit: ""
value: 0
}




CANMMCAN_2_CAPD_5[3]
{
type: UINT(8)
alias: "RTICANMMCaptureMessage_4_RAW_byte_6"
flags: OUTPUT|READONLY
desc: "RTICANMMCaptureMessage_4 Byte 6"
unit: ""
value: 0
}




CANMMCAN_2_CAPD_6[3]
{
type: UINT(8)
alias: "RTICANMMCaptureMessage_4_RAW_byte_7"
flags: OUTPUT|READONLY
desc: "RTICANMMCaptureMessage_4 Byte 7"
unit: ""
value: 0
}




CANMMCAN_2_CAPD_7[3]
{
type: UINT(8)
alias: "RTICANMMCaptureMessage_4_RAW_byte_8"
flags: OUTPUT|READONLY
desc: "RTICANMMCaptureMessage_4 Byte 8"
unit: ""
value: 0
}





endgroup -- block-group "RTICANMMCaptureMessage_4"



group "RTICANMMCaptureMessage_5" -- subsystem-group
{
     flags: COLLAPSED
}


CANMMCAN_2_CAPS[4]
{
type: UINT(8)
alias: "RTICANMMCaptureMessage_5_status"
flags: OUTPUT|READONLY
desc: "RTICANMMCaptureMessage_5 Status"
unit: ""
value: 0
}




CANMMCAN_2_CAPL[4]
{
type: UINT(8)
alias: "RTICANMMCaptureMessage_5_Length"
flags: OUTPUT|READONLY
desc: "Message Length"
unit: ""
value: 0
}




CANMMCAN_2_CAPT[4]
{
type: flt(64,IEEE)
alias: "RTICANMMCaptureMessage_5_time"
flags: OUTPUT|READONLY
desc: "RTICANMMCaptureMessage_5 Time"
unit: "s"
value: 0.0
}




CANMMCAN_2_CAPID[4]
{
type: UINT(32)
alias: "RTICANMMCaptureMessage_5_ID"
flags: OUTPUT|READONLY
desc: "Message ID"
unit: ""
value: 0
}




CANMMCAN_2_CAPIDF[4]
{
type: UINT(8)
alias: "RTICANMMCaptureMessage_5_IDFormat"
flags: OUTPUT|READONLY
desc: "Message ID Format"
unit: ""
value: 0
}




CANMMCAN_2_CAPD_0[4]
{
type: UINT(8)
alias: "RTICANMMCaptureMessage_5_RAW_byte_1"
flags: OUTPUT|READONLY
desc: "RTICANMMCaptureMessage_5 Byte 1"
unit: ""
value: 0
}




CANMMCAN_2_CAPD_1[4]
{
type: UINT(8)
alias: "RTICANMMCaptureMessage_5_RAW_byte_2"
flags: OUTPUT|READONLY
desc: "RTICANMMCaptureMessage_5 Byte 2"
unit: ""
value: 0
}




CANMMCAN_2_CAPD_2[4]
{
type: UINT(8)
alias: "RTICANMMCaptureMessage_5_RAW_byte_3"
flags: OUTPUT|READONLY
desc: "RTICANMMCaptureMessage_5 Byte 3"
unit: ""
value: 0
}




CANMMCAN_2_CAPD_3[4]
{
type: UINT(8)
alias: "RTICANMMCaptureMessage_5_RAW_byte_4"
flags: OUTPUT|READONLY
desc: "RTICANMMCaptureMessage_5 Byte 4"
unit: ""
value: 0
}




CANMMCAN_2_CAPD_4[4]
{
type: UINT(8)
alias: "RTICANMMCaptureMessage_5_RAW_byte_5"
flags: OUTPUT|READONLY
desc: "RTICANMMCaptureMessage_5 Byte 5"
unit: ""
value: 0
}




CANMMCAN_2_CAPD_5[4]
{
type: UINT(8)
alias: "RTICANMMCaptureMessage_5_RAW_byte_6"
flags: OUTPUT|READONLY
desc: "RTICANMMCaptureMessage_5 Byte 6"
unit: ""
value: 0
}




CANMMCAN_2_CAPD_6[4]
{
type: UINT(8)
alias: "RTICANMMCaptureMessage_5_RAW_byte_7"
flags: OUTPUT|READONLY
desc: "RTICANMMCaptureMessage_5 Byte 7"
unit: ""
value: 0
}




CANMMCAN_2_CAPD_7[4]
{
type: UINT(8)
alias: "RTICANMMCaptureMessage_5_RAW_byte_8"
flags: OUTPUT|READONLY
desc: "RTICANMMCaptureMessage_5 Byte 8"
unit: ""
value: 0
}





endgroup -- block-group "RTICANMMCaptureMessage_5"



group "RTICANMMCaptureMessage_6" -- subsystem-group
{
     flags: COLLAPSED
}


CANMMCAN_2_CAPS[5]
{
type: UINT(8)
alias: "RTICANMMCaptureMessage_6_status"
flags: OUTPUT|READONLY
desc: "RTICANMMCaptureMessage_6 Status"
unit: ""
value: 0
}




CANMMCAN_2_CAPL[5]
{
type: UINT(8)
alias: "RTICANMMCaptureMessage_6_Length"
flags: OUTPUT|READONLY
desc: "Message Length"
unit: ""
value: 0
}




CANMMCAN_2_CAPT[5]
{
type: flt(64,IEEE)
alias: "RTICANMMCaptureMessage_6_time"
flags: OUTPUT|READONLY
desc: "RTICANMMCaptureMessage_6 Time"
unit: "s"
value: 0.0
}




CANMMCAN_2_CAPID[5]
{
type: UINT(32)
alias: "RTICANMMCaptureMessage_6_ID"
flags: OUTPUT|READONLY
desc: "Message ID"
unit: ""
value: 0
}




CANMMCAN_2_CAPIDF[5]
{
type: UINT(8)
alias: "RTICANMMCaptureMessage_6_IDFormat"
flags: OUTPUT|READONLY
desc: "Message ID Format"
unit: ""
value: 0
}




CANMMCAN_2_CAPD_0[5]
{
type: UINT(8)
alias: "RTICANMMCaptureMessage_6_RAW_byte_1"
flags: OUTPUT|READONLY
desc: "RTICANMMCaptureMessage_6 Byte 1"
unit: ""
value: 0
}




CANMMCAN_2_CAPD_1[5]
{
type: UINT(8)
alias: "RTICANMMCaptureMessage_6_RAW_byte_2"
flags: OUTPUT|READONLY
desc: "RTICANMMCaptureMessage_6 Byte 2"
unit: ""
value: 0
}




CANMMCAN_2_CAPD_2[5]
{
type: UINT(8)
alias: "RTICANMMCaptureMessage_6_RAW_byte_3"
flags: OUTPUT|READONLY
desc: "RTICANMMCaptureMessage_6 Byte 3"
unit: ""
value: 0
}




CANMMCAN_2_CAPD_3[5]
{
type: UINT(8)
alias: "RTICANMMCaptureMessage_6_RAW_byte_4"
flags: OUTPUT|READONLY
desc: "RTICANMMCaptureMessage_6 Byte 4"
unit: ""
value: 0
}




CANMMCAN_2_CAPD_4[5]
{
type: UINT(8)
alias: "RTICANMMCaptureMessage_6_RAW_byte_5"
flags: OUTPUT|READONLY
desc: "RTICANMMCaptureMessage_6 Byte 5"
unit: ""
value: 0
}




CANMMCAN_2_CAPD_5[5]
{
type: UINT(8)
alias: "RTICANMMCaptureMessage_6_RAW_byte_6"
flags: OUTPUT|READONLY
desc: "RTICANMMCaptureMessage_6 Byte 6"
unit: ""
value: 0
}




CANMMCAN_2_CAPD_6[5]
{
type: UINT(8)
alias: "RTICANMMCaptureMessage_6_RAW_byte_7"
flags: OUTPUT|READONLY
desc: "RTICANMMCaptureMessage_6 Byte 7"
unit: ""
value: 0
}




CANMMCAN_2_CAPD_7[5]
{
type: UINT(8)
alias: "RTICANMMCaptureMessage_6_RAW_byte_8"
flags: OUTPUT|READONLY
desc: "RTICANMMCaptureMessage_6 Byte 8"
unit: ""
value: 0
}





endgroup -- block-group "RTICANMMCaptureMessage_6"



group "RTICANMMCaptureMessage_7" -- subsystem-group
{
     flags: COLLAPSED
}


CANMMCAN_2_CAPS[6]
{
type: UINT(8)
alias: "RTICANMMCaptureMessage_7_status"
flags: OUTPUT|READONLY
desc: "RTICANMMCaptureMessage_7 Status"
unit: ""
value: 0
}




CANMMCAN_2_CAPL[6]
{
type: UINT(8)
alias: "RTICANMMCaptureMessage_7_Length"
flags: OUTPUT|READONLY
desc: "Message Length"
unit: ""
value: 0
}




CANMMCAN_2_CAPT[6]
{
type: flt(64,IEEE)
alias: "RTICANMMCaptureMessage_7_time"
flags: OUTPUT|READONLY
desc: "RTICANMMCaptureMessage_7 Time"
unit: "s"
value: 0.0
}




CANMMCAN_2_CAPID[6]
{
type: UINT(32)
alias: "RTICANMMCaptureMessage_7_ID"
flags: OUTPUT|READONLY
desc: "Message ID"
unit: ""
value: 0
}




CANMMCAN_2_CAPIDF[6]
{
type: UINT(8)
alias: "RTICANMMCaptureMessage_7_IDFormat"
flags: OUTPUT|READONLY
desc: "Message ID Format"
unit: ""
value: 0
}




CANMMCAN_2_CAPD_0[6]
{
type: UINT(8)
alias: "RTICANMMCaptureMessage_7_RAW_byte_1"
flags: OUTPUT|READONLY
desc: "RTICANMMCaptureMessage_7 Byte 1"
unit: ""
value: 0
}




CANMMCAN_2_CAPD_1[6]
{
type: UINT(8)
alias: "RTICANMMCaptureMessage_7_RAW_byte_2"
flags: OUTPUT|READONLY
desc: "RTICANMMCaptureMessage_7 Byte 2"
unit: ""
value: 0
}




CANMMCAN_2_CAPD_2[6]
{
type: UINT(8)
alias: "RTICANMMCaptureMessage_7_RAW_byte_3"
flags: OUTPUT|READONLY
desc: "RTICANMMCaptureMessage_7 Byte 3"
unit: ""
value: 0
}




CANMMCAN_2_CAPD_3[6]
{
type: UINT(8)
alias: "RTICANMMCaptureMessage_7_RAW_byte_4"
flags: OUTPUT|READONLY
desc: "RTICANMMCaptureMessage_7 Byte 4"
unit: ""
value: 0
}




CANMMCAN_2_CAPD_4[6]
{
type: UINT(8)
alias: "RTICANMMCaptureMessage_7_RAW_byte_5"
flags: OUTPUT|READONLY
desc: "RTICANMMCaptureMessage_7 Byte 5"
unit: ""
value: 0
}




CANMMCAN_2_CAPD_5[6]
{
type: UINT(8)
alias: "RTICANMMCaptureMessage_7_RAW_byte_6"
flags: OUTPUT|READONLY
desc: "RTICANMMCaptureMessage_7 Byte 6"
unit: ""
value: 0
}




CANMMCAN_2_CAPD_6[6]
{
type: UINT(8)
alias: "RTICANMMCaptureMessage_7_RAW_byte_7"
flags: OUTPUT|READONLY
desc: "RTICANMMCaptureMessage_7 Byte 7"
unit: ""
value: 0
}




CANMMCAN_2_CAPD_7[6]
{
type: UINT(8)
alias: "RTICANMMCaptureMessage_7_RAW_byte_8"
flags: OUTPUT|READONLY
desc: "RTICANMMCaptureMessage_7 Byte 8"
unit: ""
value: 0
}





endgroup -- block-group "RTICANMMCaptureMessage_7"



group "RTICANMMCaptureMessage_8" -- subsystem-group
{
     flags: COLLAPSED
}


CANMMCAN_2_CAPS[7]
{
type: UINT(8)
alias: "RTICANMMCaptureMessage_8_status"
flags: OUTPUT|READONLY
desc: "RTICANMMCaptureMessage_8 Status"
unit: ""
value: 0
}




CANMMCAN_2_CAPL[7]
{
type: UINT(8)
alias: "RTICANMMCaptureMessage_8_Length"
flags: OUTPUT|READONLY
desc: "Message Length"
unit: ""
value: 0
}




CANMMCAN_2_CAPT[7]
{
type: flt(64,IEEE)
alias: "RTICANMMCaptureMessage_8_time"
flags: OUTPUT|READONLY
desc: "RTICANMMCaptureMessage_8 Time"
unit: "s"
value: 0.0
}




CANMMCAN_2_CAPID[7]
{
type: UINT(32)
alias: "RTICANMMCaptureMessage_8_ID"
flags: OUTPUT|READONLY
desc: "Message ID"
unit: ""
value: 0
}




CANMMCAN_2_CAPIDF[7]
{
type: UINT(8)
alias: "RTICANMMCaptureMessage_8_IDFormat"
flags: OUTPUT|READONLY
desc: "Message ID Format"
unit: ""
value: 0
}




CANMMCAN_2_CAPD_0[7]
{
type: UINT(8)
alias: "RTICANMMCaptureMessage_8_RAW_byte_1"
flags: OUTPUT|READONLY
desc: "RTICANMMCaptureMessage_8 Byte 1"
unit: ""
value: 0
}




CANMMCAN_2_CAPD_1[7]
{
type: UINT(8)
alias: "RTICANMMCaptureMessage_8_RAW_byte_2"
flags: OUTPUT|READONLY
desc: "RTICANMMCaptureMessage_8 Byte 2"
unit: ""
value: 0
}




CANMMCAN_2_CAPD_2[7]
{
type: UINT(8)
alias: "RTICANMMCaptureMessage_8_RAW_byte_3"
flags: OUTPUT|READONLY
desc: "RTICANMMCaptureMessage_8 Byte 3"
unit: ""
value: 0
}




CANMMCAN_2_CAPD_3[7]
{
type: UINT(8)
alias: "RTICANMMCaptureMessage_8_RAW_byte_4"
flags: OUTPUT|READONLY
desc: "RTICANMMCaptureMessage_8 Byte 4"
unit: ""
value: 0
}




CANMMCAN_2_CAPD_4[7]
{
type: UINT(8)
alias: "RTICANMMCaptureMessage_8_RAW_byte_5"
flags: OUTPUT|READONLY
desc: "RTICANMMCaptureMessage_8 Byte 5"
unit: ""
value: 0
}




CANMMCAN_2_CAPD_5[7]
{
type: UINT(8)
alias: "RTICANMMCaptureMessage_8_RAW_byte_6"
flags: OUTPUT|READONLY
desc: "RTICANMMCaptureMessage_8 Byte 6"
unit: ""
value: 0
}




CANMMCAN_2_CAPD_6[7]
{
type: UINT(8)
alias: "RTICANMMCaptureMessage_8_RAW_byte_7"
flags: OUTPUT|READONLY
desc: "RTICANMMCaptureMessage_8 Byte 7"
unit: ""
value: 0
}




CANMMCAN_2_CAPD_7[7]
{
type: UINT(8)
alias: "RTICANMMCaptureMessage_8_RAW_byte_8"
flags: OUTPUT|READONLY
desc: "RTICANMMCaptureMessage_8 Byte 8"
unit: ""
value: 0
}





endgroup -- block-group "RTICANMMCaptureMessage_8"



group "RTICANMMCaptureMessage_9" -- subsystem-group
{
     flags: COLLAPSED
}


CANMMCAN_2_CAPS[8]
{
type: UINT(8)
alias: "RTICANMMCaptureMessage_9_status"
flags: OUTPUT|READONLY
desc: "RTICANMMCaptureMessage_9 Status"
unit: ""
value: 0
}




CANMMCAN_2_CAPL[8]
{
type: UINT(8)
alias: "RTICANMMCaptureMessage_9_Length"
flags: OUTPUT|READONLY
desc: "Message Length"
unit: ""
value: 0
}




CANMMCAN_2_CAPT[8]
{
type: flt(64,IEEE)
alias: "RTICANMMCaptureMessage_9_time"
flags: OUTPUT|READONLY
desc: "RTICANMMCaptureMessage_9 Time"
unit: "s"
value: 0.0
}




CANMMCAN_2_CAPID[8]
{
type: UINT(32)
alias: "RTICANMMCaptureMessage_9_ID"
flags: OUTPUT|READONLY
desc: "Message ID"
unit: ""
value: 0
}




CANMMCAN_2_CAPIDF[8]
{
type: UINT(8)
alias: "RTICANMMCaptureMessage_9_IDFormat"
flags: OUTPUT|READONLY
desc: "Message ID Format"
unit: ""
value: 0
}




CANMMCAN_2_CAPD_0[8]
{
type: UINT(8)
alias: "RTICANMMCaptureMessage_9_RAW_byte_1"
flags: OUTPUT|READONLY
desc: "RTICANMMCaptureMessage_9 Byte 1"
unit: ""
value: 0
}




CANMMCAN_2_CAPD_1[8]
{
type: UINT(8)
alias: "RTICANMMCaptureMessage_9_RAW_byte_2"
flags: OUTPUT|READONLY
desc: "RTICANMMCaptureMessage_9 Byte 2"
unit: ""
value: 0
}




CANMMCAN_2_CAPD_2[8]
{
type: UINT(8)
alias: "RTICANMMCaptureMessage_9_RAW_byte_3"
flags: OUTPUT|READONLY
desc: "RTICANMMCaptureMessage_9 Byte 3"
unit: ""
value: 0
}




CANMMCAN_2_CAPD_3[8]
{
type: UINT(8)
alias: "RTICANMMCaptureMessage_9_RAW_byte_4"
flags: OUTPUT|READONLY
desc: "RTICANMMCaptureMessage_9 Byte 4"
unit: ""
value: 0
}




CANMMCAN_2_CAPD_4[8]
{
type: UINT(8)
alias: "RTICANMMCaptureMessage_9_RAW_byte_5"
flags: OUTPUT|READONLY
desc: "RTICANMMCaptureMessage_9 Byte 5"
unit: ""
value: 0
}




CANMMCAN_2_CAPD_5[8]
{
type: UINT(8)
alias: "RTICANMMCaptureMessage_9_RAW_byte_6"
flags: OUTPUT|READONLY
desc: "RTICANMMCaptureMessage_9 Byte 6"
unit: ""
value: 0
}




CANMMCAN_2_CAPD_6[8]
{
type: UINT(8)
alias: "RTICANMMCaptureMessage_9_RAW_byte_7"
flags: OUTPUT|READONLY
desc: "RTICANMMCaptureMessage_9 Byte 7"
unit: ""
value: 0
}




CANMMCAN_2_CAPD_7[8]
{
type: UINT(8)
alias: "RTICANMMCaptureMessage_9_RAW_byte_8"
flags: OUTPUT|READONLY
desc: "RTICANMMCaptureMessage_9 Byte 8"
unit: ""
value: 0
}





endgroup -- block-group "RTICANMMCaptureMessage_9"



group "RTICANMMCaptureMessage_10" -- subsystem-group
{
     flags: COLLAPSED
}


CANMMCAN_2_CAPS[9]
{
type: UINT(8)
alias: "RTICANMMCaptureMessage_10_status"
flags: OUTPUT|READONLY
desc: "RTICANMMCaptureMessage_10 Status"
unit: ""
value: 0
}




CANMMCAN_2_CAPL[9]
{
type: UINT(8)
alias: "RTICANMMCaptureMessage_10_Length"
flags: OUTPUT|READONLY
desc: "Message Length"
unit: ""
value: 0
}




CANMMCAN_2_CAPT[9]
{
type: flt(64,IEEE)
alias: "RTICANMMCaptureMessage_10_time"
flags: OUTPUT|READONLY
desc: "RTICANMMCaptureMessage_10 Time"
unit: "s"
value: 0.0
}




CANMMCAN_2_CAPID[9]
{
type: UINT(32)
alias: "RTICANMMCaptureMessage_10_ID"
flags: OUTPUT|READONLY
desc: "Message ID"
unit: ""
value: 0
}




CANMMCAN_2_CAPIDF[9]
{
type: UINT(8)
alias: "RTICANMMCaptureMessage_10_IDFormat"
flags: OUTPUT|READONLY
desc: "Message ID Format"
unit: ""
value: 0
}




CANMMCAN_2_CAPD_0[9]
{
type: UINT(8)
alias: "RTICANMMCaptureMessage_10_RAW_byte_1"
flags: OUTPUT|READONLY
desc: "RTICANMMCaptureMessage_10 Byte 1"
unit: ""
value: 0
}




CANMMCAN_2_CAPD_1[9]
{
type: UINT(8)
alias: "RTICANMMCaptureMessage_10_RAW_byte_2"
flags: OUTPUT|READONLY
desc: "RTICANMMCaptureMessage_10 Byte 2"
unit: ""
value: 0
}




CANMMCAN_2_CAPD_2[9]
{
type: UINT(8)
alias: "RTICANMMCaptureMessage_10_RAW_byte_3"
flags: OUTPUT|READONLY
desc: "RTICANMMCaptureMessage_10 Byte 3"
unit: ""
value: 0
}




CANMMCAN_2_CAPD_3[9]
{
type: UINT(8)
alias: "RTICANMMCaptureMessage_10_RAW_byte_4"
flags: OUTPUT|READONLY
desc: "RTICANMMCaptureMessage_10 Byte 4"
unit: ""
value: 0
}




CANMMCAN_2_CAPD_4[9]
{
type: UINT(8)
alias: "RTICANMMCaptureMessage_10_RAW_byte_5"
flags: OUTPUT|READONLY
desc: "RTICANMMCaptureMessage_10 Byte 5"
unit: ""
value: 0
}




CANMMCAN_2_CAPD_5[9]
{
type: UINT(8)
alias: "RTICANMMCaptureMessage_10_RAW_byte_6"
flags: OUTPUT|READONLY
desc: "RTICANMMCaptureMessage_10 Byte 6"
unit: ""
value: 0
}




CANMMCAN_2_CAPD_6[9]
{
type: UINT(8)
alias: "RTICANMMCaptureMessage_10_RAW_byte_7"
flags: OUTPUT|READONLY
desc: "RTICANMMCaptureMessage_10 Byte 7"
unit: ""
value: 0
}




CANMMCAN_2_CAPD_7[9]
{
type: UINT(8)
alias: "RTICANMMCaptureMessage_10_RAW_byte_8"
flags: OUTPUT|READONLY
desc: "RTICANMMCaptureMessage_10 Byte 8"
unit: ""
value: 0
}





endgroup -- block-group "RTICANMMCaptureMessage_10"



group "RTICANMMCaptureMessage_11" -- subsystem-group
{
     flags: COLLAPSED
}


CANMMCAN_2_CAPS[10]
{
type: UINT(8)
alias: "RTICANMMCaptureMessage_11_status"
flags: OUTPUT|READONLY
desc: "RTICANMMCaptureMessage_11 Status"
unit: ""
value: 0
}




CANMMCAN_2_CAPL[10]
{
type: UINT(8)
alias: "RTICANMMCaptureMessage_11_Length"
flags: OUTPUT|READONLY
desc: "Message Length"
unit: ""
value: 0
}




CANMMCAN_2_CAPT[10]
{
type: flt(64,IEEE)
alias: "RTICANMMCaptureMessage_11_time"
flags: OUTPUT|READONLY
desc: "RTICANMMCaptureMessage_11 Time"
unit: "s"
value: 0.0
}




CANMMCAN_2_CAPID[10]
{
type: UINT(32)
alias: "RTICANMMCaptureMessage_11_ID"
flags: OUTPUT|READONLY
desc: "Message ID"
unit: ""
value: 0
}




CANMMCAN_2_CAPIDF[10]
{
type: UINT(8)
alias: "RTICANMMCaptureMessage_11_IDFormat"
flags: OUTPUT|READONLY
desc: "Message ID Format"
unit: ""
value: 0
}




CANMMCAN_2_CAPD_0[10]
{
type: UINT(8)
alias: "RTICANMMCaptureMessage_11_RAW_byte_1"
flags: OUTPUT|READONLY
desc: "RTICANMMCaptureMessage_11 Byte 1"
unit: ""
value: 0
}




CANMMCAN_2_CAPD_1[10]
{
type: UINT(8)
alias: "RTICANMMCaptureMessage_11_RAW_byte_2"
flags: OUTPUT|READONLY
desc: "RTICANMMCaptureMessage_11 Byte 2"
unit: ""
value: 0
}




CANMMCAN_2_CAPD_2[10]
{
type: UINT(8)
alias: "RTICANMMCaptureMessage_11_RAW_byte_3"
flags: OUTPUT|READONLY
desc: "RTICANMMCaptureMessage_11 Byte 3"
unit: ""
value: 0
}




CANMMCAN_2_CAPD_3[10]
{
type: UINT(8)
alias: "RTICANMMCaptureMessage_11_RAW_byte_4"
flags: OUTPUT|READONLY
desc: "RTICANMMCaptureMessage_11 Byte 4"
unit: ""
value: 0
}




CANMMCAN_2_CAPD_4[10]
{
type: UINT(8)
alias: "RTICANMMCaptureMessage_11_RAW_byte_5"
flags: OUTPUT|READONLY
desc: "RTICANMMCaptureMessage_11 Byte 5"
unit: ""
value: 0
}




CANMMCAN_2_CAPD_5[10]
{
type: UINT(8)
alias: "RTICANMMCaptureMessage_11_RAW_byte_6"
flags: OUTPUT|READONLY
desc: "RTICANMMCaptureMessage_11 Byte 6"
unit: ""
value: 0
}




CANMMCAN_2_CAPD_6[10]
{
type: UINT(8)
alias: "RTICANMMCaptureMessage_11_RAW_byte_7"
flags: OUTPUT|READONLY
desc: "RTICANMMCaptureMessage_11 Byte 7"
unit: ""
value: 0
}




CANMMCAN_2_CAPD_7[10]
{
type: UINT(8)
alias: "RTICANMMCaptureMessage_11_RAW_byte_8"
flags: OUTPUT|READONLY
desc: "RTICANMMCaptureMessage_11 Byte 8"
unit: ""
value: 0
}





endgroup -- block-group "RTICANMMCaptureMessage_11"



group "RTICANMMCaptureMessage_12" -- subsystem-group
{
     flags: COLLAPSED
}


CANMMCAN_2_CAPS[11]
{
type: UINT(8)
alias: "RTICANMMCaptureMessage_12_status"
flags: OUTPUT|READONLY
desc: "RTICANMMCaptureMessage_12 Status"
unit: ""
value: 0
}




CANMMCAN_2_CAPL[11]
{
type: UINT(8)
alias: "RTICANMMCaptureMessage_12_Length"
flags: OUTPUT|READONLY
desc: "Message Length"
unit: ""
value: 0
}




CANMMCAN_2_CAPT[11]
{
type: flt(64,IEEE)
alias: "RTICANMMCaptureMessage_12_time"
flags: OUTPUT|READONLY
desc: "RTICANMMCaptureMessage_12 Time"
unit: "s"
value: 0.0
}




CANMMCAN_2_CAPID[11]
{
type: UINT(32)
alias: "RTICANMMCaptureMessage_12_ID"
flags: OUTPUT|READONLY
desc: "Message ID"
unit: ""
value: 0
}




CANMMCAN_2_CAPIDF[11]
{
type: UINT(8)
alias: "RTICANMMCaptureMessage_12_IDFormat"
flags: OUTPUT|READONLY
desc: "Message ID Format"
unit: ""
value: 0
}




CANMMCAN_2_CAPD_0[11]
{
type: UINT(8)
alias: "RTICANMMCaptureMessage_12_RAW_byte_1"
flags: OUTPUT|READONLY
desc: "RTICANMMCaptureMessage_12 Byte 1"
unit: ""
value: 0
}




CANMMCAN_2_CAPD_1[11]
{
type: UINT(8)
alias: "RTICANMMCaptureMessage_12_RAW_byte_2"
flags: OUTPUT|READONLY
desc: "RTICANMMCaptureMessage_12 Byte 2"
unit: ""
value: 0
}




CANMMCAN_2_CAPD_2[11]
{
type: UINT(8)
alias: "RTICANMMCaptureMessage_12_RAW_byte_3"
flags: OUTPUT|READONLY
desc: "RTICANMMCaptureMessage_12 Byte 3"
unit: ""
value: 0
}




CANMMCAN_2_CAPD_3[11]
{
type: UINT(8)
alias: "RTICANMMCaptureMessage_12_RAW_byte_4"
flags: OUTPUT|READONLY
desc: "RTICANMMCaptureMessage_12 Byte 4"
unit: ""
value: 0
}




CANMMCAN_2_CAPD_4[11]
{
type: UINT(8)
alias: "RTICANMMCaptureMessage_12_RAW_byte_5"
flags: OUTPUT|READONLY
desc: "RTICANMMCaptureMessage_12 Byte 5"
unit: ""
value: 0
}




CANMMCAN_2_CAPD_5[11]
{
type: UINT(8)
alias: "RTICANMMCaptureMessage_12_RAW_byte_6"
flags: OUTPUT|READONLY
desc: "RTICANMMCaptureMessage_12 Byte 6"
unit: ""
value: 0
}




CANMMCAN_2_CAPD_6[11]
{
type: UINT(8)
alias: "RTICANMMCaptureMessage_12_RAW_byte_7"
flags: OUTPUT|READONLY
desc: "RTICANMMCaptureMessage_12 Byte 7"
unit: ""
value: 0
}




CANMMCAN_2_CAPD_7[11]
{
type: UINT(8)
alias: "RTICANMMCaptureMessage_12_RAW_byte_8"
flags: OUTPUT|READONLY
desc: "RTICANMMCaptureMessage_12 Byte 8"
unit: ""
value: 0
}





endgroup -- block-group "RTICANMMCaptureMessage_12"



group "RTICANMMCaptureMessage_13" -- subsystem-group
{
     flags: COLLAPSED
}


CANMMCAN_2_CAPS[12]
{
type: UINT(8)
alias: "RTICANMMCaptureMessage_13_status"
flags: OUTPUT|READONLY
desc: "RTICANMMCaptureMessage_13 Status"
unit: ""
value: 0
}




CANMMCAN_2_CAPL[12]
{
type: UINT(8)
alias: "RTICANMMCaptureMessage_13_Length"
flags: OUTPUT|READONLY
desc: "Message Length"
unit: ""
value: 0
}




CANMMCAN_2_CAPT[12]
{
type: flt(64,IEEE)
alias: "RTICANMMCaptureMessage_13_time"
flags: OUTPUT|READONLY
desc: "RTICANMMCaptureMessage_13 Time"
unit: "s"
value: 0.0
}




CANMMCAN_2_CAPID[12]
{
type: UINT(32)
alias: "RTICANMMCaptureMessage_13_ID"
flags: OUTPUT|READONLY
desc: "Message ID"
unit: ""
value: 0
}




CANMMCAN_2_CAPIDF[12]
{
type: UINT(8)
alias: "RTICANMMCaptureMessage_13_IDFormat"
flags: OUTPUT|READONLY
desc: "Message ID Format"
unit: ""
value: 0
}




CANMMCAN_2_CAPD_0[12]
{
type: UINT(8)
alias: "RTICANMMCaptureMessage_13_RAW_byte_1"
flags: OUTPUT|READONLY
desc: "RTICANMMCaptureMessage_13 Byte 1"
unit: ""
value: 0
}




CANMMCAN_2_CAPD_1[12]
{
type: UINT(8)
alias: "RTICANMMCaptureMessage_13_RAW_byte_2"
flags: OUTPUT|READONLY
desc: "RTICANMMCaptureMessage_13 Byte 2"
unit: ""
value: 0
}




CANMMCAN_2_CAPD_2[12]
{
type: UINT(8)
alias: "RTICANMMCaptureMessage_13_RAW_byte_3"
flags: OUTPUT|READONLY
desc: "RTICANMMCaptureMessage_13 Byte 3"
unit: ""
value: 0
}




CANMMCAN_2_CAPD_3[12]
{
type: UINT(8)
alias: "RTICANMMCaptureMessage_13_RAW_byte_4"
flags: OUTPUT|READONLY
desc: "RTICANMMCaptureMessage_13 Byte 4"
unit: ""
value: 0
}




CANMMCAN_2_CAPD_4[12]
{
type: UINT(8)
alias: "RTICANMMCaptureMessage_13_RAW_byte_5"
flags: OUTPUT|READONLY
desc: "RTICANMMCaptureMessage_13 Byte 5"
unit: ""
value: 0
}




CANMMCAN_2_CAPD_5[12]
{
type: UINT(8)
alias: "RTICANMMCaptureMessage_13_RAW_byte_6"
flags: OUTPUT|READONLY
desc: "RTICANMMCaptureMessage_13 Byte 6"
unit: ""
value: 0
}




CANMMCAN_2_CAPD_6[12]
{
type: UINT(8)
alias: "RTICANMMCaptureMessage_13_RAW_byte_7"
flags: OUTPUT|READONLY
desc: "RTICANMMCaptureMessage_13 Byte 7"
unit: ""
value: 0
}




CANMMCAN_2_CAPD_7[12]
{
type: UINT(8)
alias: "RTICANMMCaptureMessage_13_RAW_byte_8"
flags: OUTPUT|READONLY
desc: "RTICANMMCaptureMessage_13 Byte 8"
unit: ""
value: 0
}





endgroup -- block-group "RTICANMMCaptureMessage_13"



group "RTICANMMCaptureMessage_14" -- subsystem-group
{
     flags: COLLAPSED
}


CANMMCAN_2_CAPS[13]
{
type: UINT(8)
alias: "RTICANMMCaptureMessage_14_status"
flags: OUTPUT|READONLY
desc: "RTICANMMCaptureMessage_14 Status"
unit: ""
value: 0
}




CANMMCAN_2_CAPL[13]
{
type: UINT(8)
alias: "RTICANMMCaptureMessage_14_Length"
flags: OUTPUT|READONLY
desc: "Message Length"
unit: ""
value: 0
}




CANMMCAN_2_CAPT[13]
{
type: flt(64,IEEE)
alias: "RTICANMMCaptureMessage_14_time"
flags: OUTPUT|READONLY
desc: "RTICANMMCaptureMessage_14 Time"
unit: "s"
value: 0.0
}




CANMMCAN_2_CAPID[13]
{
type: UINT(32)
alias: "RTICANMMCaptureMessage_14_ID"
flags: OUTPUT|READONLY
desc: "Message ID"
unit: ""
value: 0
}




CANMMCAN_2_CAPIDF[13]
{
type: UINT(8)
alias: "RTICANMMCaptureMessage_14_IDFormat"
flags: OUTPUT|READONLY
desc: "Message ID Format"
unit: ""
value: 0
}




CANMMCAN_2_CAPD_0[13]
{
type: UINT(8)
alias: "RTICANMMCaptureMessage_14_RAW_byte_1"
flags: OUTPUT|READONLY
desc: "RTICANMMCaptureMessage_14 Byte 1"
unit: ""
value: 0
}




CANMMCAN_2_CAPD_1[13]
{
type: UINT(8)
alias: "RTICANMMCaptureMessage_14_RAW_byte_2"
flags: OUTPUT|READONLY
desc: "RTICANMMCaptureMessage_14 Byte 2"
unit: ""
value: 0
}




CANMMCAN_2_CAPD_2[13]
{
type: UINT(8)
alias: "RTICANMMCaptureMessage_14_RAW_byte_3"
flags: OUTPUT|READONLY
desc: "RTICANMMCaptureMessage_14 Byte 3"
unit: ""
value: 0
}




CANMMCAN_2_CAPD_3[13]
{
type: UINT(8)
alias: "RTICANMMCaptureMessage_14_RAW_byte_4"
flags: OUTPUT|READONLY
desc: "RTICANMMCaptureMessage_14 Byte 4"
unit: ""
value: 0
}




CANMMCAN_2_CAPD_4[13]
{
type: UINT(8)
alias: "RTICANMMCaptureMessage_14_RAW_byte_5"
flags: OUTPUT|READONLY
desc: "RTICANMMCaptureMessage_14 Byte 5"
unit: ""
value: 0
}




CANMMCAN_2_CAPD_5[13]
{
type: UINT(8)
alias: "RTICANMMCaptureMessage_14_RAW_byte_6"
flags: OUTPUT|READONLY
desc: "RTICANMMCaptureMessage_14 Byte 6"
unit: ""
value: 0
}




CANMMCAN_2_CAPD_6[13]
{
type: UINT(8)
alias: "RTICANMMCaptureMessage_14_RAW_byte_7"
flags: OUTPUT|READONLY
desc: "RTICANMMCaptureMessage_14 Byte 7"
unit: ""
value: 0
}




CANMMCAN_2_CAPD_7[13]
{
type: UINT(8)
alias: "RTICANMMCaptureMessage_14_RAW_byte_8"
flags: OUTPUT|READONLY
desc: "RTICANMMCaptureMessage_14 Byte 8"
unit: ""
value: 0
}





endgroup -- block-group "RTICANMMCaptureMessage_14"



group "RTICANMMCaptureMessage_15" -- subsystem-group
{
     flags: COLLAPSED
}


CANMMCAN_2_CAPS[14]
{
type: UINT(8)
alias: "RTICANMMCaptureMessage_15_status"
flags: OUTPUT|READONLY
desc: "RTICANMMCaptureMessage_15 Status"
unit: ""
value: 0
}




CANMMCAN_2_CAPL[14]
{
type: UINT(8)
alias: "RTICANMMCaptureMessage_15_Length"
flags: OUTPUT|READONLY
desc: "Message Length"
unit: ""
value: 0
}




CANMMCAN_2_CAPT[14]
{
type: flt(64,IEEE)
alias: "RTICANMMCaptureMessage_15_time"
flags: OUTPUT|READONLY
desc: "RTICANMMCaptureMessage_15 Time"
unit: "s"
value: 0.0
}




CANMMCAN_2_CAPID[14]
{
type: UINT(32)
alias: "RTICANMMCaptureMessage_15_ID"
flags: OUTPUT|READONLY
desc: "Message ID"
unit: ""
value: 0
}




CANMMCAN_2_CAPIDF[14]
{
type: UINT(8)
alias: "RTICANMMCaptureMessage_15_IDFormat"
flags: OUTPUT|READONLY
desc: "Message ID Format"
unit: ""
value: 0
}




CANMMCAN_2_CAPD_0[14]
{
type: UINT(8)
alias: "RTICANMMCaptureMessage_15_RAW_byte_1"
flags: OUTPUT|READONLY
desc: "RTICANMMCaptureMessage_15 Byte 1"
unit: ""
value: 0
}




CANMMCAN_2_CAPD_1[14]
{
type: UINT(8)
alias: "RTICANMMCaptureMessage_15_RAW_byte_2"
flags: OUTPUT|READONLY
desc: "RTICANMMCaptureMessage_15 Byte 2"
unit: ""
value: 0
}




CANMMCAN_2_CAPD_2[14]
{
type: UINT(8)
alias: "RTICANMMCaptureMessage_15_RAW_byte_3"
flags: OUTPUT|READONLY
desc: "RTICANMMCaptureMessage_15 Byte 3"
unit: ""
value: 0
}




CANMMCAN_2_CAPD_3[14]
{
type: UINT(8)
alias: "RTICANMMCaptureMessage_15_RAW_byte_4"
flags: OUTPUT|READONLY
desc: "RTICANMMCaptureMessage_15 Byte 4"
unit: ""
value: 0
}




CANMMCAN_2_CAPD_4[14]
{
type: UINT(8)
alias: "RTICANMMCaptureMessage_15_RAW_byte_5"
flags: OUTPUT|READONLY
desc: "RTICANMMCaptureMessage_15 Byte 5"
unit: ""
value: 0
}




CANMMCAN_2_CAPD_5[14]
{
type: UINT(8)
alias: "RTICANMMCaptureMessage_15_RAW_byte_6"
flags: OUTPUT|READONLY
desc: "RTICANMMCaptureMessage_15 Byte 6"
unit: ""
value: 0
}




CANMMCAN_2_CAPD_6[14]
{
type: UINT(8)
alias: "RTICANMMCaptureMessage_15_RAW_byte_7"
flags: OUTPUT|READONLY
desc: "RTICANMMCaptureMessage_15 Byte 7"
unit: ""
value: 0
}




CANMMCAN_2_CAPD_7[14]
{
type: UINT(8)
alias: "RTICANMMCaptureMessage_15_RAW_byte_8"
flags: OUTPUT|READONLY
desc: "RTICANMMCaptureMessage_15 Byte 8"
unit: ""
value: 0
}





endgroup -- block-group "RTICANMMCaptureMessage_15"



group "RTICANMMCaptureMessage_16" -- subsystem-group
{
     flags: COLLAPSED
}


CANMMCAN_2_CAPS[15]
{
type: UINT(8)
alias: "RTICANMMCaptureMessage_16_status"
flags: OUTPUT|READONLY
desc: "RTICANMMCaptureMessage_16 Status"
unit: ""
value: 0
}




CANMMCAN_2_CAPL[15]
{
type: UINT(8)
alias: "RTICANMMCaptureMessage_16_Length"
flags: OUTPUT|READONLY
desc: "Message Length"
unit: ""
value: 0
}




CANMMCAN_2_CAPT[15]
{
type: flt(64,IEEE)
alias: "RTICANMMCaptureMessage_16_time"
flags: OUTPUT|READONLY
desc: "RTICANMMCaptureMessage_16 Time"
unit: "s"
value: 0.0
}




CANMMCAN_2_CAPID[15]
{
type: UINT(32)
alias: "RTICANMMCaptureMessage_16_ID"
flags: OUTPUT|READONLY
desc: "Message ID"
unit: ""
value: 0
}




CANMMCAN_2_CAPIDF[15]
{
type: UINT(8)
alias: "RTICANMMCaptureMessage_16_IDFormat"
flags: OUTPUT|READONLY
desc: "Message ID Format"
unit: ""
value: 0
}




CANMMCAN_2_CAPD_0[15]
{
type: UINT(8)
alias: "RTICANMMCaptureMessage_16_RAW_byte_1"
flags: OUTPUT|READONLY
desc: "RTICANMMCaptureMessage_16 Byte 1"
unit: ""
value: 0
}




CANMMCAN_2_CAPD_1[15]
{
type: UINT(8)
alias: "RTICANMMCaptureMessage_16_RAW_byte_2"
flags: OUTPUT|READONLY
desc: "RTICANMMCaptureMessage_16 Byte 2"
unit: ""
value: 0
}




CANMMCAN_2_CAPD_2[15]
{
type: UINT(8)
alias: "RTICANMMCaptureMessage_16_RAW_byte_3"
flags: OUTPUT|READONLY
desc: "RTICANMMCaptureMessage_16 Byte 3"
unit: ""
value: 0
}




CANMMCAN_2_CAPD_3[15]
{
type: UINT(8)
alias: "RTICANMMCaptureMessage_16_RAW_byte_4"
flags: OUTPUT|READONLY
desc: "RTICANMMCaptureMessage_16 Byte 4"
unit: ""
value: 0
}




CANMMCAN_2_CAPD_4[15]
{
type: UINT(8)
alias: "RTICANMMCaptureMessage_16_RAW_byte_5"
flags: OUTPUT|READONLY
desc: "RTICANMMCaptureMessage_16 Byte 5"
unit: ""
value: 0
}




CANMMCAN_2_CAPD_5[15]
{
type: UINT(8)
alias: "RTICANMMCaptureMessage_16_RAW_byte_6"
flags: OUTPUT|READONLY
desc: "RTICANMMCaptureMessage_16 Byte 6"
unit: ""
value: 0
}




CANMMCAN_2_CAPD_6[15]
{
type: UINT(8)
alias: "RTICANMMCaptureMessage_16_RAW_byte_7"
flags: OUTPUT|READONLY
desc: "RTICANMMCaptureMessage_16 Byte 7"
unit: ""
value: 0
}




CANMMCAN_2_CAPD_7[15]
{
type: UINT(8)
alias: "RTICANMMCaptureMessage_16_RAW_byte_8"
flags: OUTPUT|READONLY
desc: "RTICANMMCaptureMessage_16 Byte 8"
unit: ""
value: 0
}





endgroup -- block-group "RTICANMMCaptureMessage_16"



group "RTICANMMCaptureMessage_17" -- subsystem-group
{
     flags: COLLAPSED
}


CANMMCAN_2_CAPS[16]
{
type: UINT(8)
alias: "RTICANMMCaptureMessage_17_status"
flags: OUTPUT|READONLY
desc: "RTICANMMCaptureMessage_17 Status"
unit: ""
value: 0
}




CANMMCAN_2_CAPL[16]
{
type: UINT(8)
alias: "RTICANMMCaptureMessage_17_Length"
flags: OUTPUT|READONLY
desc: "Message Length"
unit: ""
value: 0
}




CANMMCAN_2_CAPT[16]
{
type: flt(64,IEEE)
alias: "RTICANMMCaptureMessage_17_time"
flags: OUTPUT|READONLY
desc: "RTICANMMCaptureMessage_17 Time"
unit: "s"
value: 0.0
}




CANMMCAN_2_CAPID[16]
{
type: UINT(32)
alias: "RTICANMMCaptureMessage_17_ID"
flags: OUTPUT|READONLY
desc: "Message ID"
unit: ""
value: 0
}




CANMMCAN_2_CAPIDF[16]
{
type: UINT(8)
alias: "RTICANMMCaptureMessage_17_IDFormat"
flags: OUTPUT|READONLY
desc: "Message ID Format"
unit: ""
value: 0
}




CANMMCAN_2_CAPD_0[16]
{
type: UINT(8)
alias: "RTICANMMCaptureMessage_17_RAW_byte_1"
flags: OUTPUT|READONLY
desc: "RTICANMMCaptureMessage_17 Byte 1"
unit: ""
value: 0
}




CANMMCAN_2_CAPD_1[16]
{
type: UINT(8)
alias: "RTICANMMCaptureMessage_17_RAW_byte_2"
flags: OUTPUT|READONLY
desc: "RTICANMMCaptureMessage_17 Byte 2"
unit: ""
value: 0
}




CANMMCAN_2_CAPD_2[16]
{
type: UINT(8)
alias: "RTICANMMCaptureMessage_17_RAW_byte_3"
flags: OUTPUT|READONLY
desc: "RTICANMMCaptureMessage_17 Byte 3"
unit: ""
value: 0
}




CANMMCAN_2_CAPD_3[16]
{
type: UINT(8)
alias: "RTICANMMCaptureMessage_17_RAW_byte_4"
flags: OUTPUT|READONLY
desc: "RTICANMMCaptureMessage_17 Byte 4"
unit: ""
value: 0
}




CANMMCAN_2_CAPD_4[16]
{
type: UINT(8)
alias: "RTICANMMCaptureMessage_17_RAW_byte_5"
flags: OUTPUT|READONLY
desc: "RTICANMMCaptureMessage_17 Byte 5"
unit: ""
value: 0
}




CANMMCAN_2_CAPD_5[16]
{
type: UINT(8)
alias: "RTICANMMCaptureMessage_17_RAW_byte_6"
flags: OUTPUT|READONLY
desc: "RTICANMMCaptureMessage_17 Byte 6"
unit: ""
value: 0
}




CANMMCAN_2_CAPD_6[16]
{
type: UINT(8)
alias: "RTICANMMCaptureMessage_17_RAW_byte_7"
flags: OUTPUT|READONLY
desc: "RTICANMMCaptureMessage_17 Byte 7"
unit: ""
value: 0
}




CANMMCAN_2_CAPD_7[16]
{
type: UINT(8)
alias: "RTICANMMCaptureMessage_17_RAW_byte_8"
flags: OUTPUT|READONLY
desc: "RTICANMMCaptureMessage_17 Byte 8"
unit: ""
value: 0
}





endgroup -- block-group "RTICANMMCaptureMessage_17"



group "RTICANMMCaptureMessage_18" -- subsystem-group
{
     flags: COLLAPSED
}


CANMMCAN_2_CAPS[17]
{
type: UINT(8)
alias: "RTICANMMCaptureMessage_18_status"
flags: OUTPUT|READONLY
desc: "RTICANMMCaptureMessage_18 Status"
unit: ""
value: 0
}




CANMMCAN_2_CAPL[17]
{
type: UINT(8)
alias: "RTICANMMCaptureMessage_18_Length"
flags: OUTPUT|READONLY
desc: "Message Length"
unit: ""
value: 0
}




CANMMCAN_2_CAPT[17]
{
type: flt(64,IEEE)
alias: "RTICANMMCaptureMessage_18_time"
flags: OUTPUT|READONLY
desc: "RTICANMMCaptureMessage_18 Time"
unit: "s"
value: 0.0
}




CANMMCAN_2_CAPID[17]
{
type: UINT(32)
alias: "RTICANMMCaptureMessage_18_ID"
flags: OUTPUT|READONLY
desc: "Message ID"
unit: ""
value: 0
}




CANMMCAN_2_CAPIDF[17]
{
type: UINT(8)
alias: "RTICANMMCaptureMessage_18_IDFormat"
flags: OUTPUT|READONLY
desc: "Message ID Format"
unit: ""
value: 0
}




CANMMCAN_2_CAPD_0[17]
{
type: UINT(8)
alias: "RTICANMMCaptureMessage_18_RAW_byte_1"
flags: OUTPUT|READONLY
desc: "RTICANMMCaptureMessage_18 Byte 1"
unit: ""
value: 0
}




CANMMCAN_2_CAPD_1[17]
{
type: UINT(8)
alias: "RTICANMMCaptureMessage_18_RAW_byte_2"
flags: OUTPUT|READONLY
desc: "RTICANMMCaptureMessage_18 Byte 2"
unit: ""
value: 0
}




CANMMCAN_2_CAPD_2[17]
{
type: UINT(8)
alias: "RTICANMMCaptureMessage_18_RAW_byte_3"
flags: OUTPUT|READONLY
desc: "RTICANMMCaptureMessage_18 Byte 3"
unit: ""
value: 0
}




CANMMCAN_2_CAPD_3[17]
{
type: UINT(8)
alias: "RTICANMMCaptureMessage_18_RAW_byte_4"
flags: OUTPUT|READONLY
desc: "RTICANMMCaptureMessage_18 Byte 4"
unit: ""
value: 0
}




CANMMCAN_2_CAPD_4[17]
{
type: UINT(8)
alias: "RTICANMMCaptureMessage_18_RAW_byte_5"
flags: OUTPUT|READONLY
desc: "RTICANMMCaptureMessage_18 Byte 5"
unit: ""
value: 0
}




CANMMCAN_2_CAPD_5[17]
{
type: UINT(8)
alias: "RTICANMMCaptureMessage_18_RAW_byte_6"
flags: OUTPUT|READONLY
desc: "RTICANMMCaptureMessage_18 Byte 6"
unit: ""
value: 0
}




CANMMCAN_2_CAPD_6[17]
{
type: UINT(8)
alias: "RTICANMMCaptureMessage_18_RAW_byte_7"
flags: OUTPUT|READONLY
desc: "RTICANMMCaptureMessage_18 Byte 7"
unit: ""
value: 0
}




CANMMCAN_2_CAPD_7[17]
{
type: UINT(8)
alias: "RTICANMMCaptureMessage_18_RAW_byte_8"
flags: OUTPUT|READONLY
desc: "RTICANMMCaptureMessage_18 Byte 8"
unit: ""
value: 0
}





endgroup -- block-group "RTICANMMCaptureMessage_18"



group "RTICANMMCaptureMessage_19" -- subsystem-group
{
     flags: COLLAPSED
}


CANMMCAN_2_CAPS[18]
{
type: UINT(8)
alias: "RTICANMMCaptureMessage_19_status"
flags: OUTPUT|READONLY
desc: "RTICANMMCaptureMessage_19 Status"
unit: ""
value: 0
}




CANMMCAN_2_CAPL[18]
{
type: UINT(8)
alias: "RTICANMMCaptureMessage_19_Length"
flags: OUTPUT|READONLY
desc: "Message Length"
unit: ""
value: 0
}




CANMMCAN_2_CAPT[18]
{
type: flt(64,IEEE)
alias: "RTICANMMCaptureMessage_19_time"
flags: OUTPUT|READONLY
desc: "RTICANMMCaptureMessage_19 Time"
unit: "s"
value: 0.0
}




CANMMCAN_2_CAPID[18]
{
type: UINT(32)
alias: "RTICANMMCaptureMessage_19_ID"
flags: OUTPUT|READONLY
desc: "Message ID"
unit: ""
value: 0
}




CANMMCAN_2_CAPIDF[18]
{
type: UINT(8)
alias: "RTICANMMCaptureMessage_19_IDFormat"
flags: OUTPUT|READONLY
desc: "Message ID Format"
unit: ""
value: 0
}




CANMMCAN_2_CAPD_0[18]
{
type: UINT(8)
alias: "RTICANMMCaptureMessage_19_RAW_byte_1"
flags: OUTPUT|READONLY
desc: "RTICANMMCaptureMessage_19 Byte 1"
unit: ""
value: 0
}




CANMMCAN_2_CAPD_1[18]
{
type: UINT(8)
alias: "RTICANMMCaptureMessage_19_RAW_byte_2"
flags: OUTPUT|READONLY
desc: "RTICANMMCaptureMessage_19 Byte 2"
unit: ""
value: 0
}




CANMMCAN_2_CAPD_2[18]
{
type: UINT(8)
alias: "RTICANMMCaptureMessage_19_RAW_byte_3"
flags: OUTPUT|READONLY
desc: "RTICANMMCaptureMessage_19 Byte 3"
unit: ""
value: 0
}




CANMMCAN_2_CAPD_3[18]
{
type: UINT(8)
alias: "RTICANMMCaptureMessage_19_RAW_byte_4"
flags: OUTPUT|READONLY
desc: "RTICANMMCaptureMessage_19 Byte 4"
unit: ""
value: 0
}




CANMMCAN_2_CAPD_4[18]
{
type: UINT(8)
alias: "RTICANMMCaptureMessage_19_RAW_byte_5"
flags: OUTPUT|READONLY
desc: "RTICANMMCaptureMessage_19 Byte 5"
unit: ""
value: 0
}




CANMMCAN_2_CAPD_5[18]
{
type: UINT(8)
alias: "RTICANMMCaptureMessage_19_RAW_byte_6"
flags: OUTPUT|READONLY
desc: "RTICANMMCaptureMessage_19 Byte 6"
unit: ""
value: 0
}




CANMMCAN_2_CAPD_6[18]
{
type: UINT(8)
alias: "RTICANMMCaptureMessage_19_RAW_byte_7"
flags: OUTPUT|READONLY
desc: "RTICANMMCaptureMessage_19 Byte 7"
unit: ""
value: 0
}




CANMMCAN_2_CAPD_7[18]
{
type: UINT(8)
alias: "RTICANMMCaptureMessage_19_RAW_byte_8"
flags: OUTPUT|READONLY
desc: "RTICANMMCaptureMessage_19 Byte 8"
unit: ""
value: 0
}





endgroup -- block-group "RTICANMMCaptureMessage_19"



group "RTICANMMCaptureMessage_20" -- subsystem-group
{
     flags: COLLAPSED
}


CANMMCAN_2_CAPS[19]
{
type: UINT(8)
alias: "RTICANMMCaptureMessage_20_status"
flags: OUTPUT|READONLY
desc: "RTICANMMCaptureMessage_20 Status"
unit: ""
value: 0
}




CANMMCAN_2_CAPL[19]
{
type: UINT(8)
alias: "RTICANMMCaptureMessage_20_Length"
flags: OUTPUT|READONLY
desc: "Message Length"
unit: ""
value: 0
}




CANMMCAN_2_CAPT[19]
{
type: flt(64,IEEE)
alias: "RTICANMMCaptureMessage_20_time"
flags: OUTPUT|READONLY
desc: "RTICANMMCaptureMessage_20 Time"
unit: "s"
value: 0.0
}




CANMMCAN_2_CAPID[19]
{
type: UINT(32)
alias: "RTICANMMCaptureMessage_20_ID"
flags: OUTPUT|READONLY
desc: "Message ID"
unit: ""
value: 0
}




CANMMCAN_2_CAPIDF[19]
{
type: UINT(8)
alias: "RTICANMMCaptureMessage_20_IDFormat"
flags: OUTPUT|READONLY
desc: "Message ID Format"
unit: ""
value: 0
}




CANMMCAN_2_CAPD_0[19]
{
type: UINT(8)
alias: "RTICANMMCaptureMessage_20_RAW_byte_1"
flags: OUTPUT|READONLY
desc: "RTICANMMCaptureMessage_20 Byte 1"
unit: ""
value: 0
}




CANMMCAN_2_CAPD_1[19]
{
type: UINT(8)
alias: "RTICANMMCaptureMessage_20_RAW_byte_2"
flags: OUTPUT|READONLY
desc: "RTICANMMCaptureMessage_20 Byte 2"
unit: ""
value: 0
}




CANMMCAN_2_CAPD_2[19]
{
type: UINT(8)
alias: "RTICANMMCaptureMessage_20_RAW_byte_3"
flags: OUTPUT|READONLY
desc: "RTICANMMCaptureMessage_20 Byte 3"
unit: ""
value: 0
}




CANMMCAN_2_CAPD_3[19]
{
type: UINT(8)
alias: "RTICANMMCaptureMessage_20_RAW_byte_4"
flags: OUTPUT|READONLY
desc: "RTICANMMCaptureMessage_20 Byte 4"
unit: ""
value: 0
}




CANMMCAN_2_CAPD_4[19]
{
type: UINT(8)
alias: "RTICANMMCaptureMessage_20_RAW_byte_5"
flags: OUTPUT|READONLY
desc: "RTICANMMCaptureMessage_20 Byte 5"
unit: ""
value: 0
}




CANMMCAN_2_CAPD_5[19]
{
type: UINT(8)
alias: "RTICANMMCaptureMessage_20_RAW_byte_6"
flags: OUTPUT|READONLY
desc: "RTICANMMCaptureMessage_20 Byte 6"
unit: ""
value: 0
}




CANMMCAN_2_CAPD_6[19]
{
type: UINT(8)
alias: "RTICANMMCaptureMessage_20_RAW_byte_7"
flags: OUTPUT|READONLY
desc: "RTICANMMCaptureMessage_20 Byte 7"
unit: ""
value: 0
}




CANMMCAN_2_CAPD_7[19]
{
type: UINT(8)
alias: "RTICANMMCaptureMessage_20_RAW_byte_8"
flags: OUTPUT|READONLY
desc: "RTICANMMCaptureMessage_20 Byte 8"
unit: ""
value: 0
}





endgroup -- block-group "RTICANMMCaptureMessage_20"



group "RTICANMMCaptureMessage_21" -- subsystem-group
{
     flags: COLLAPSED
}


CANMMCAN_2_CAPS[20]
{
type: UINT(8)
alias: "RTICANMMCaptureMessage_21_status"
flags: OUTPUT|READONLY
desc: "RTICANMMCaptureMessage_21 Status"
unit: ""
value: 0
}




CANMMCAN_2_CAPL[20]
{
type: UINT(8)
alias: "RTICANMMCaptureMessage_21_Length"
flags: OUTPUT|READONLY
desc: "Message Length"
unit: ""
value: 0
}




CANMMCAN_2_CAPT[20]
{
type: flt(64,IEEE)
alias: "RTICANMMCaptureMessage_21_time"
flags: OUTPUT|READONLY
desc: "RTICANMMCaptureMessage_21 Time"
unit: "s"
value: 0.0
}




CANMMCAN_2_CAPID[20]
{
type: UINT(32)
alias: "RTICANMMCaptureMessage_21_ID"
flags: OUTPUT|READONLY
desc: "Message ID"
unit: ""
value: 0
}




CANMMCAN_2_CAPIDF[20]
{
type: UINT(8)
alias: "RTICANMMCaptureMessage_21_IDFormat"
flags: OUTPUT|READONLY
desc: "Message ID Format"
unit: ""
value: 0
}




CANMMCAN_2_CAPD_0[20]
{
type: UINT(8)
alias: "RTICANMMCaptureMessage_21_RAW_byte_1"
flags: OUTPUT|READONLY
desc: "RTICANMMCaptureMessage_21 Byte 1"
unit: ""
value: 0
}




CANMMCAN_2_CAPD_1[20]
{
type: UINT(8)
alias: "RTICANMMCaptureMessage_21_RAW_byte_2"
flags: OUTPUT|READONLY
desc: "RTICANMMCaptureMessage_21 Byte 2"
unit: ""
value: 0
}




CANMMCAN_2_CAPD_2[20]
{
type: UINT(8)
alias: "RTICANMMCaptureMessage_21_RAW_byte_3"
flags: OUTPUT|READONLY
desc: "RTICANMMCaptureMessage_21 Byte 3"
unit: ""
value: 0
}




CANMMCAN_2_CAPD_3[20]
{
type: UINT(8)
alias: "RTICANMMCaptureMessage_21_RAW_byte_4"
flags: OUTPUT|READONLY
desc: "RTICANMMCaptureMessage_21 Byte 4"
unit: ""
value: 0
}




CANMMCAN_2_CAPD_4[20]
{
type: UINT(8)
alias: "RTICANMMCaptureMessage_21_RAW_byte_5"
flags: OUTPUT|READONLY
desc: "RTICANMMCaptureMessage_21 Byte 5"
unit: ""
value: 0
}




CANMMCAN_2_CAPD_5[20]
{
type: UINT(8)
alias: "RTICANMMCaptureMessage_21_RAW_byte_6"
flags: OUTPUT|READONLY
desc: "RTICANMMCaptureMessage_21 Byte 6"
unit: ""
value: 0
}




CANMMCAN_2_CAPD_6[20]
{
type: UINT(8)
alias: "RTICANMMCaptureMessage_21_RAW_byte_7"
flags: OUTPUT|READONLY
desc: "RTICANMMCaptureMessage_21 Byte 7"
unit: ""
value: 0
}




CANMMCAN_2_CAPD_7[20]
{
type: UINT(8)
alias: "RTICANMMCaptureMessage_21_RAW_byte_8"
flags: OUTPUT|READONLY
desc: "RTICANMMCaptureMessage_21 Byte 8"
unit: ""
value: 0
}





endgroup -- block-group "RTICANMMCaptureMessage_21"



group "RTICANMMCaptureMessage_22" -- subsystem-group
{
     flags: COLLAPSED
}


CANMMCAN_2_CAPS[21]
{
type: UINT(8)
alias: "RTICANMMCaptureMessage_22_status"
flags: OUTPUT|READONLY
desc: "RTICANMMCaptureMessage_22 Status"
unit: ""
value: 0
}




CANMMCAN_2_CAPL[21]
{
type: UINT(8)
alias: "RTICANMMCaptureMessage_22_Length"
flags: OUTPUT|READONLY
desc: "Message Length"
unit: ""
value: 0
}




CANMMCAN_2_CAPT[21]
{
type: flt(64,IEEE)
alias: "RTICANMMCaptureMessage_22_time"
flags: OUTPUT|READONLY
desc: "RTICANMMCaptureMessage_22 Time"
unit: "s"
value: 0.0
}




CANMMCAN_2_CAPID[21]
{
type: UINT(32)
alias: "RTICANMMCaptureMessage_22_ID"
flags: OUTPUT|READONLY
desc: "Message ID"
unit: ""
value: 0
}




CANMMCAN_2_CAPIDF[21]
{
type: UINT(8)
alias: "RTICANMMCaptureMessage_22_IDFormat"
flags: OUTPUT|READONLY
desc: "Message ID Format"
unit: ""
value: 0
}




CANMMCAN_2_CAPD_0[21]
{
type: UINT(8)
alias: "RTICANMMCaptureMessage_22_RAW_byte_1"
flags: OUTPUT|READONLY
desc: "RTICANMMCaptureMessage_22 Byte 1"
unit: ""
value: 0
}




CANMMCAN_2_CAPD_1[21]
{
type: UINT(8)
alias: "RTICANMMCaptureMessage_22_RAW_byte_2"
flags: OUTPUT|READONLY
desc: "RTICANMMCaptureMessage_22 Byte 2"
unit: ""
value: 0
}




CANMMCAN_2_CAPD_2[21]
{
type: UINT(8)
alias: "RTICANMMCaptureMessage_22_RAW_byte_3"
flags: OUTPUT|READONLY
desc: "RTICANMMCaptureMessage_22 Byte 3"
unit: ""
value: 0
}




CANMMCAN_2_CAPD_3[21]
{
type: UINT(8)
alias: "RTICANMMCaptureMessage_22_RAW_byte_4"
flags: OUTPUT|READONLY
desc: "RTICANMMCaptureMessage_22 Byte 4"
unit: ""
value: 0
}




CANMMCAN_2_CAPD_4[21]
{
type: UINT(8)
alias: "RTICANMMCaptureMessage_22_RAW_byte_5"
flags: OUTPUT|READONLY
desc: "RTICANMMCaptureMessage_22 Byte 5"
unit: ""
value: 0
}




CANMMCAN_2_CAPD_5[21]
{
type: UINT(8)
alias: "RTICANMMCaptureMessage_22_RAW_byte_6"
flags: OUTPUT|READONLY
desc: "RTICANMMCaptureMessage_22 Byte 6"
unit: ""
value: 0
}




CANMMCAN_2_CAPD_6[21]
{
type: UINT(8)
alias: "RTICANMMCaptureMessage_22_RAW_byte_7"
flags: OUTPUT|READONLY
desc: "RTICANMMCaptureMessage_22 Byte 7"
unit: ""
value: 0
}




CANMMCAN_2_CAPD_7[21]
{
type: UINT(8)
alias: "RTICANMMCaptureMessage_22_RAW_byte_8"
flags: OUTPUT|READONLY
desc: "RTICANMMCaptureMessage_22 Byte 8"
unit: ""
value: 0
}





endgroup -- block-group "RTICANMMCaptureMessage_22"



group "RTICANMMCaptureMessage_23" -- subsystem-group
{
     flags: COLLAPSED
}


CANMMCAN_2_CAPS[22]
{
type: UINT(8)
alias: "RTICANMMCaptureMessage_23_status"
flags: OUTPUT|READONLY
desc: "RTICANMMCaptureMessage_23 Status"
unit: ""
value: 0
}




CANMMCAN_2_CAPL[22]
{
type: UINT(8)
alias: "RTICANMMCaptureMessage_23_Length"
flags: OUTPUT|READONLY
desc: "Message Length"
unit: ""
value: 0
}




CANMMCAN_2_CAPT[22]
{
type: flt(64,IEEE)
alias: "RTICANMMCaptureMessage_23_time"
flags: OUTPUT|READONLY
desc: "RTICANMMCaptureMessage_23 Time"
unit: "s"
value: 0.0
}




CANMMCAN_2_CAPID[22]
{
type: UINT(32)
alias: "RTICANMMCaptureMessage_23_ID"
flags: OUTPUT|READONLY
desc: "Message ID"
unit: ""
value: 0
}




CANMMCAN_2_CAPIDF[22]
{
type: UINT(8)
alias: "RTICANMMCaptureMessage_23_IDFormat"
flags: OUTPUT|READONLY
desc: "Message ID Format"
unit: ""
value: 0
}




CANMMCAN_2_CAPD_0[22]
{
type: UINT(8)
alias: "RTICANMMCaptureMessage_23_RAW_byte_1"
flags: OUTPUT|READONLY
desc: "RTICANMMCaptureMessage_23 Byte 1"
unit: ""
value: 0
}




CANMMCAN_2_CAPD_1[22]
{
type: UINT(8)
alias: "RTICANMMCaptureMessage_23_RAW_byte_2"
flags: OUTPUT|READONLY
desc: "RTICANMMCaptureMessage_23 Byte 2"
unit: ""
value: 0
}




CANMMCAN_2_CAPD_2[22]
{
type: UINT(8)
alias: "RTICANMMCaptureMessage_23_RAW_byte_3"
flags: OUTPUT|READONLY
desc: "RTICANMMCaptureMessage_23 Byte 3"
unit: ""
value: 0
}




CANMMCAN_2_CAPD_3[22]
{
type: UINT(8)
alias: "RTICANMMCaptureMessage_23_RAW_byte_4"
flags: OUTPUT|READONLY
desc: "RTICANMMCaptureMessage_23 Byte 4"
unit: ""
value: 0
}




CANMMCAN_2_CAPD_4[22]
{
type: UINT(8)
alias: "RTICANMMCaptureMessage_23_RAW_byte_5"
flags: OUTPUT|READONLY
desc: "RTICANMMCaptureMessage_23 Byte 5"
unit: ""
value: 0
}




CANMMCAN_2_CAPD_5[22]
{
type: UINT(8)
alias: "RTICANMMCaptureMessage_23_RAW_byte_6"
flags: OUTPUT|READONLY
desc: "RTICANMMCaptureMessage_23 Byte 6"
unit: ""
value: 0
}




CANMMCAN_2_CAPD_6[22]
{
type: UINT(8)
alias: "RTICANMMCaptureMessage_23_RAW_byte_7"
flags: OUTPUT|READONLY
desc: "RTICANMMCaptureMessage_23 Byte 7"
unit: ""
value: 0
}




CANMMCAN_2_CAPD_7[22]
{
type: UINT(8)
alias: "RTICANMMCaptureMessage_23_RAW_byte_8"
flags: OUTPUT|READONLY
desc: "RTICANMMCaptureMessage_23 Byte 8"
unit: ""
value: 0
}





endgroup -- block-group "RTICANMMCaptureMessage_23"



group "RTICANMMCaptureMessage_24" -- subsystem-group
{
     flags: COLLAPSED
}


CANMMCAN_2_CAPS[23]
{
type: UINT(8)
alias: "RTICANMMCaptureMessage_24_status"
flags: OUTPUT|READONLY
desc: "RTICANMMCaptureMessage_24 Status"
unit: ""
value: 0
}




CANMMCAN_2_CAPL[23]
{
type: UINT(8)
alias: "RTICANMMCaptureMessage_24_Length"
flags: OUTPUT|READONLY
desc: "Message Length"
unit: ""
value: 0
}




CANMMCAN_2_CAPT[23]
{
type: flt(64,IEEE)
alias: "RTICANMMCaptureMessage_24_time"
flags: OUTPUT|READONLY
desc: "RTICANMMCaptureMessage_24 Time"
unit: "s"
value: 0.0
}




CANMMCAN_2_CAPID[23]
{
type: UINT(32)
alias: "RTICANMMCaptureMessage_24_ID"
flags: OUTPUT|READONLY
desc: "Message ID"
unit: ""
value: 0
}




CANMMCAN_2_CAPIDF[23]
{
type: UINT(8)
alias: "RTICANMMCaptureMessage_24_IDFormat"
flags: OUTPUT|READONLY
desc: "Message ID Format"
unit: ""
value: 0
}




CANMMCAN_2_CAPD_0[23]
{
type: UINT(8)
alias: "RTICANMMCaptureMessage_24_RAW_byte_1"
flags: OUTPUT|READONLY
desc: "RTICANMMCaptureMessage_24 Byte 1"
unit: ""
value: 0
}




CANMMCAN_2_CAPD_1[23]
{
type: UINT(8)
alias: "RTICANMMCaptureMessage_24_RAW_byte_2"
flags: OUTPUT|READONLY
desc: "RTICANMMCaptureMessage_24 Byte 2"
unit: ""
value: 0
}




CANMMCAN_2_CAPD_2[23]
{
type: UINT(8)
alias: "RTICANMMCaptureMessage_24_RAW_byte_3"
flags: OUTPUT|READONLY
desc: "RTICANMMCaptureMessage_24 Byte 3"
unit: ""
value: 0
}




CANMMCAN_2_CAPD_3[23]
{
type: UINT(8)
alias: "RTICANMMCaptureMessage_24_RAW_byte_4"
flags: OUTPUT|READONLY
desc: "RTICANMMCaptureMessage_24 Byte 4"
unit: ""
value: 0
}




CANMMCAN_2_CAPD_4[23]
{
type: UINT(8)
alias: "RTICANMMCaptureMessage_24_RAW_byte_5"
flags: OUTPUT|READONLY
desc: "RTICANMMCaptureMessage_24 Byte 5"
unit: ""
value: 0
}




CANMMCAN_2_CAPD_5[23]
{
type: UINT(8)
alias: "RTICANMMCaptureMessage_24_RAW_byte_6"
flags: OUTPUT|READONLY
desc: "RTICANMMCaptureMessage_24 Byte 6"
unit: ""
value: 0
}




CANMMCAN_2_CAPD_6[23]
{
type: UINT(8)
alias: "RTICANMMCaptureMessage_24_RAW_byte_7"
flags: OUTPUT|READONLY
desc: "RTICANMMCaptureMessage_24 Byte 7"
unit: ""
value: 0
}




CANMMCAN_2_CAPD_7[23]
{
type: UINT(8)
alias: "RTICANMMCaptureMessage_24_RAW_byte_8"
flags: OUTPUT|READONLY
desc: "RTICANMMCaptureMessage_24 Byte 8"
unit: ""
value: 0
}





endgroup -- block-group "RTICANMMCaptureMessage_24"



group "RTICANMMCaptureMessage_25" -- subsystem-group
{
     flags: COLLAPSED
}


CANMMCAN_2_CAPS[24]
{
type: UINT(8)
alias: "RTICANMMCaptureMessage_25_status"
flags: OUTPUT|READONLY
desc: "RTICANMMCaptureMessage_25 Status"
unit: ""
value: 0
}




CANMMCAN_2_CAPL[24]
{
type: UINT(8)
alias: "RTICANMMCaptureMessage_25_Length"
flags: OUTPUT|READONLY
desc: "Message Length"
unit: ""
value: 0
}




CANMMCAN_2_CAPT[24]
{
type: flt(64,IEEE)
alias: "RTICANMMCaptureMessage_25_time"
flags: OUTPUT|READONLY
desc: "RTICANMMCaptureMessage_25 Time"
unit: "s"
value: 0.0
}




CANMMCAN_2_CAPID[24]
{
type: UINT(32)
alias: "RTICANMMCaptureMessage_25_ID"
flags: OUTPUT|READONLY
desc: "Message ID"
unit: ""
value: 0
}




CANMMCAN_2_CAPIDF[24]
{
type: UINT(8)
alias: "RTICANMMCaptureMessage_25_IDFormat"
flags: OUTPUT|READONLY
desc: "Message ID Format"
unit: ""
value: 0
}




CANMMCAN_2_CAPD_0[24]
{
type: UINT(8)
alias: "RTICANMMCaptureMessage_25_RAW_byte_1"
flags: OUTPUT|READONLY
desc: "RTICANMMCaptureMessage_25 Byte 1"
unit: ""
value: 0
}




CANMMCAN_2_CAPD_1[24]
{
type: UINT(8)
alias: "RTICANMMCaptureMessage_25_RAW_byte_2"
flags: OUTPUT|READONLY
desc: "RTICANMMCaptureMessage_25 Byte 2"
unit: ""
value: 0
}




CANMMCAN_2_CAPD_2[24]
{
type: UINT(8)
alias: "RTICANMMCaptureMessage_25_RAW_byte_3"
flags: OUTPUT|READONLY
desc: "RTICANMMCaptureMessage_25 Byte 3"
unit: ""
value: 0
}




CANMMCAN_2_CAPD_3[24]
{
type: UINT(8)
alias: "RTICANMMCaptureMessage_25_RAW_byte_4"
flags: OUTPUT|READONLY
desc: "RTICANMMCaptureMessage_25 Byte 4"
unit: ""
value: 0
}




CANMMCAN_2_CAPD_4[24]
{
type: UINT(8)
alias: "RTICANMMCaptureMessage_25_RAW_byte_5"
flags: OUTPUT|READONLY
desc: "RTICANMMCaptureMessage_25 Byte 5"
unit: ""
value: 0
}




CANMMCAN_2_CAPD_5[24]
{
type: UINT(8)
alias: "RTICANMMCaptureMessage_25_RAW_byte_6"
flags: OUTPUT|READONLY
desc: "RTICANMMCaptureMessage_25 Byte 6"
unit: ""
value: 0
}




CANMMCAN_2_CAPD_6[24]
{
type: UINT(8)
alias: "RTICANMMCaptureMessage_25_RAW_byte_7"
flags: OUTPUT|READONLY
desc: "RTICANMMCaptureMessage_25 Byte 7"
unit: ""
value: 0
}




CANMMCAN_2_CAPD_7[24]
{
type: UINT(8)
alias: "RTICANMMCaptureMessage_25_RAW_byte_8"
flags: OUTPUT|READONLY
desc: "RTICANMMCaptureMessage_25 Byte 8"
unit: ""
value: 0
}





endgroup -- block-group "RTICANMMCaptureMessage_25"



group "RT" -- subsystem-group
{
     flags: COLLAPSED | HIDDEN
}



group "FreeRawMessages" -- subsystem-group
{
     flags: COLLAPSED | HIDDEN
}



endgroup -- block-group "FreeRawMessages"



endgroup -- block-group "RT"



endgroup -- block-group "CAN_2"


-- END@RTICANMM_MAIN_CAN_2_DS1401_1_2_1
