/*****************************************************************************************************************************/
/* RTICANMM_MAIN_CAN_2_TX_PORT */
/*                                                                                                                           */
/*   AUTHOR(S):                                                                                                              */
/*      U. Homann                                                                                                              */
/*      M. Eikermann                                                                                                              */
/*                                                                                                                           */
/*                                                                                                                           */
/*   RTICANMM Date: 06-Oct-2014 13:04:04                                                                                     */
/*   RTICANMM Version: 4.0.735878.5444907408                                                                                     */
/*                                                                                                                           */
/*  (c) Copyright 2016, dSPACE GmbH. All rights reserved.                                                                    */
/*      Brand names or product names are trademarks or registered trademarks of their respective companies or organizations. */
/*                                                                                                                           */
/* ***************************************************************************************************************************/

/* ABS2_C.BrkSw_Sta */ 
ssSetInputPortDataType(S, 0, SS_BOOLEAN); 
ssSetInputPortWidth(S, 0, 1);
/* ABS2_C.BrkSw_V */ 
ssSetInputPortDataType(S, 1, SS_BOOLEAN); 
ssSetInputPortWidth(S, 1, 1);
/* ABS2_C.VehSpeed */ 
ssSetInputPortDataType(S, 2, SS_DOUBLE); 
ssSetInputPortWidth(S, 2, 1);
/* ABS4_C.YawRate */ 
ssSetInputPortDataType(S, 3, SS_DOUBLE); 
ssSetInputPortWidth(S, 3, 1);
/* ABS4_C.YawRate_V */ 
ssSetInputPortDataType(S, 4, SS_BOOLEAN); 
ssSetInputPortWidth(S, 4, 1);
/* BCM1_C.BCM_RTurnLp_Sta */ 
ssSetInputPortDataType(S, 5, SS_BOOLEAN); 
ssSetInputPortWidth(S, 5, 1);
/* BCM1_C.BCM_LTurnLp_Sta */ 
ssSetInputPortDataType(S, 6, SS_BOOLEAN); 
ssSetInputPortWidth(S, 6, 1);
/* CSW1_C.CSW_FWipSw_Sta */ 
ssSetInputPortDataType(S, 7, SS_UINT8); 
ssSetInputPortWidth(S, 7, 1);
/* FECU1_C.FECU_HiBeamRly_Sta */ 
ssSetInputPortDataType(S, 8, SS_BOOLEAN); 
ssSetInputPortWidth(S, 8, 1);
/* SAS1_C.SAS_OK */ 
ssSetInputPortDataType(S, 9, SS_BOOLEAN); 
ssSetInputPortWidth(S, 9, 1);
/* SAS1_C.SAS_CAL */ 
ssSetInputPortDataType(S, 10, SS_BOOLEAN); 
ssSetInputPortWidth(S, 10, 1);
/* SAS1_C.SAS_Angle */ 
ssSetInputPortDataType(S, 11, SS_DOUBLE); 
ssSetInputPortWidth(S, 11, 1);
/* SpeedInformation.radarDeviceSpeedDirection */ 
ssSetInputPortDataType(S, 12, SS_UINT8); 
ssSetInputPortWidth(S, 12, 1);
/* SpeedInformation.radarDeviceSpeed */ 
ssSetInputPortDataType(S, 13, SS_DOUBLE); 
ssSetInputPortWidth(S, 13, 1);
/* TEST1.HighBeamCount */ 
ssSetInputPortDataType(S, 14, SS_UINT8); 
ssSetInputPortWidth(S, 14, 1);
/* TEST1.NoObjTimeLim */ 
ssSetInputPortDataType(S, 15, SS_DOUBLE); 
ssSetInputPortWidth(S, 15, 1);
/* TEST1.HighBeamTime */ 
ssSetInputPortDataType(S, 16, SS_DOUBLE); 
ssSetInputPortWidth(S, 16, 1);
/* TEST1.NoObjTime */ 
ssSetInputPortDataType(S, 17, SS_DOUBLE); 
ssSetInputPortWidth(S, 17, 1);
/* TEST1.ForceLowBeamT */ 
ssSetInputPortDataType(S, 18, SS_BOOLEAN); 
ssSetInputPortWidth(S, 18, 1);
/* TEST1.HighBeamSw */ 
ssSetInputPortDataType(S, 19, SS_BOOLEAN); 
ssSetInputPortWidth(S, 19, 1);
/* TEST1.RearFogSw */ 
ssSetInputPortDataType(S, 20, SS_BOOLEAN); 
ssSetInputPortWidth(S, 20, 1);
/* TEST1.ECO_SW_STA */ 
ssSetInputPortDataType(S, 21, SS_BOOLEAN); 
ssSetInputPortWidth(S, 21, 1);
/* TEST1.FECU_HiBeamRly_Sta */ 
ssSetInputPortDataType(S, 22, SS_BOOLEAN); 
ssSetInputPortWidth(S, 22, 1);
/* TEST1.FECU_LoBeamRly_Sta */ 
ssSetInputPortDataType(S, 23, SS_BOOLEAN); 
ssSetInputPortWidth(S, 23, 1);
/* TEST2.ObstacleAngle_Test */ 
ssSetInputPortDataType(S, 24, SS_DOUBLE); 
ssSetInputPortWidth(S, 24, 1);
/* TEST2.ObstacleVelY_Test */ 
ssSetInputPortDataType(S, 25, SS_DOUBLE); 
ssSetInputPortWidth(S, 25, 1);
/* TEST2.ObstacleVelX_Test */ 
ssSetInputPortDataType(S, 26, SS_DOUBLE); 
ssSetInputPortWidth(S, 26, 1);
/* TEST2.ObstaclePosY_Test */ 
ssSetInputPortDataType(S, 27, SS_DOUBLE); 
ssSetInputPortWidth(S, 27, 1);
/* TEST2.ObstaclePosX_Test */ 
ssSetInputPortDataType(S, 28, SS_DOUBLE); 
ssSetInputPortWidth(S, 28, 1);
/* TEST2.ObstacleType_Test */ 
ssSetInputPortDataType(S, 29, SS_UINT8); 
ssSetInputPortWidth(S, 29, 1);
/* TEST3.ObstacleAngle_Test */ 
ssSetInputPortDataType(S, 30, SS_DOUBLE); 
ssSetInputPortWidth(S, 30, 1);
/* TEST3.ObstacleVelY_Test */ 
ssSetInputPortDataType(S, 31, SS_DOUBLE); 
ssSetInputPortWidth(S, 31, 1);
/* TEST3.ObstacleVelX_Test */ 
ssSetInputPortDataType(S, 32, SS_DOUBLE); 
ssSetInputPortWidth(S, 32, 1);
/* TEST3.ObstaclePosY_Test */ 
ssSetInputPortDataType(S, 33, SS_DOUBLE); 
ssSetInputPortWidth(S, 33, 1);
/* TEST3.ObstaclePosX_Test */ 
ssSetInputPortDataType(S, 34, SS_DOUBLE); 
ssSetInputPortWidth(S, 34, 1);
/* TEST3.ObstacleType_Test */ 
ssSetInputPortDataType(S, 35, SS_UINT8); 
ssSetInputPortWidth(S, 35, 1);
/* TEST4.ObstacleAngle_Test */ 
ssSetInputPortDataType(S, 36, SS_DOUBLE); 
ssSetInputPortWidth(S, 36, 1);
/* TEST4.ObstacleVelY_Test */ 
ssSetInputPortDataType(S, 37, SS_DOUBLE); 
ssSetInputPortWidth(S, 37, 1);
/* TEST4.ObstacleVelX_Test */ 
ssSetInputPortDataType(S, 38, SS_DOUBLE); 
ssSetInputPortWidth(S, 38, 1);
/* TEST4.ObstaclePosY_Test */ 
ssSetInputPortDataType(S, 39, SS_DOUBLE); 
ssSetInputPortWidth(S, 39, 1);
/* TEST4.ObstaclePosX_Test */ 
ssSetInputPortDataType(S, 40, SS_DOUBLE); 
ssSetInputPortWidth(S, 40, 1);
/* TEST4.ObstacleType_Test */ 
ssSetInputPortDataType(S, 41, SS_UINT8); 
ssSetInputPortWidth(S, 41, 1);
/* TEST5.ObstacleAngle_Test */ 
ssSetInputPortDataType(S, 42, SS_DOUBLE); 
ssSetInputPortWidth(S, 42, 1);
/* TEST5.ObstacleVelY_Test */ 
ssSetInputPortDataType(S, 43, SS_DOUBLE); 
ssSetInputPortWidth(S, 43, 1);
/* TEST5.ObstacleVelX_Test */ 
ssSetInputPortDataType(S, 44, SS_DOUBLE); 
ssSetInputPortWidth(S, 44, 1);
/* TEST5.ObstaclePosY_Test */ 
ssSetInputPortDataType(S, 45, SS_DOUBLE); 
ssSetInputPortWidth(S, 45, 1);
/* TEST5.ObstaclePosX_Test */ 
ssSetInputPortDataType(S, 46, SS_DOUBLE); 
ssSetInputPortWidth(S, 46, 1);
/* TEST5.ObstacleType_Test */ 
ssSetInputPortDataType(S, 47, SS_UINT8); 
ssSetInputPortWidth(S, 47, 1);
/* TEST6.ObstacleAngle_Test */ 
ssSetInputPortDataType(S, 48, SS_DOUBLE); 
ssSetInputPortWidth(S, 48, 1);
/* TEST6.ObstacleVelY_Test */ 
ssSetInputPortDataType(S, 49, SS_DOUBLE); 
ssSetInputPortWidth(S, 49, 1);
/* TEST6.ObstacleVelX_Test */ 
ssSetInputPortDataType(S, 50, SS_DOUBLE); 
ssSetInputPortWidth(S, 50, 1);
/* TEST6.ObstaclePosY_Test */ 
ssSetInputPortDataType(S, 51, SS_DOUBLE); 
ssSetInputPortWidth(S, 51, 1);
/* TEST6.ObstaclePosX_Test */ 
ssSetInputPortDataType(S, 52, SS_DOUBLE); 
ssSetInputPortWidth(S, 52, 1);
/* TEST6.ObstacleType_Test */ 
ssSetInputPortDataType(S, 53, SS_UINT8); 
ssSetInputPortWidth(S, 53, 1);
/* YawRateInformation.radarDeviceYawRate */ 
ssSetInputPortDataType(S, 54, SS_DOUBLE); 
ssSetInputPortWidth(S, 54, 1);
