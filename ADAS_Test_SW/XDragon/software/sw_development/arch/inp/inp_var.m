% =========== $Update Time : 28-Nov-2016 13:04:28 $  =========
disp('Loading $Id: inp_var.m 1545 2017-01-16 03:43:29Z bcluan $')

%% Calibration Name, Units, Min, Max, Data Type, Comment
a2l_par('KINP_CANMsgValidABS1_flg_defval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgValidABS1_flg_tempval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgValidABS1_flg_invalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgValidABS1_flg_setvalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgValidABS1_flg_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgValidABS1_flg_ovrdval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgValidABS1_flg_srvcflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgValidABS1_flg_srvcval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgValidABS2_flg_defval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgValidABS2_flg_tempval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgValidABS2_flg_invalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgValidABS2_flg_setvalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgValidABS2_flg_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgValidABS2_flg_ovrdval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgValidABS2_flg_srvcflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgValidABS2_flg_srvcval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgValidABS3_flg_defval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgValidABS3_flg_tempval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgValidABS3_flg_invalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgValidABS3_flg_setvalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgValidABS3_flg_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgValidABS3_flg_ovrdval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgValidABS3_flg_srvcflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgValidABS3_flg_srvcval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgValidABS4_flg_defval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgValidABS4_flg_tempval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgValidABS4_flg_invalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgValidABS4_flg_setvalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgValidABS4_flg_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgValidABS4_flg_ovrdval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgValidABS4_flg_srvcflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgValidABS4_flg_srvcval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgValidECM1_flg_defval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgValidECM1_flg_tempval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgValidECM1_flg_invalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgValidECM1_flg_setvalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgValidECM1_flg_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgValidECM1_flg_ovrdval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgValidECM1_flg_srvcflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgValidECM1_flg_srvcval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgValidECM2_flg_defval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgValidECM2_flg_tempval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgValidECM2_flg_invalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgValidECM2_flg_setvalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgValidECM2_flg_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgValidECM2_flg_ovrdval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgValidECM2_flg_srvcflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgValidECM2_flg_srvcval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgValidECM3_flg_defval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgValidECM3_flg_tempval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgValidECM3_flg_invalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgValidECM3_flg_setvalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgValidECM3_flg_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgValidECM3_flg_ovrdval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgValidECM3_flg_srvcflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgValidECM3_flg_srvcval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgValidECM9_flg_defval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgValidECM9_flg_tempval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgValidECM9_flg_invalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgValidECM9_flg_setvalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgValidECM9_flg_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgValidECM9_flg_ovrdval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgValidECM9_flg_srvcflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgValidECM9_flg_srvcval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgValidTCM1_flg_defval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgValidTCM1_flg_tempval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgValidTCM1_flg_invalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgValidTCM1_flg_setvalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgValidTCM1_flg_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgValidTCM1_flg_ovrdval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgValidTCM1_flg_srvcflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgValidTCM1_flg_srvcval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgValidTCM2_flg_defval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgValidTCM2_flg_tempval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgValidTCM2_flg_invalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgValidTCM2_flg_setvalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgValidTCM2_flg_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgValidTCM2_flg_ovrdval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgValidTCM2_flg_srvcflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgValidTCM2_flg_srvcval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgValidSAS1_flg_defval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgValidSAS1_flg_tempval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgValidSAS1_flg_invalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgValidSAS1_flg_setvalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgValidSAS1_flg_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgValidSAS1_flg_ovrdval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgValidSAS1_flg_srvcflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgValidSAS1_flg_srvcval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgValidEPAS1_flg_defval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgValidEPAS1_flg_tempval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgValidEPAS1_flg_invalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgValidEPAS1_flg_setvalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgValidEPAS1_flg_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgValidEPAS1_flg_ovrdval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgValidEPAS1_flg_srvcflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgValidEPAS1_flg_srvcval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgValidEPAS2_flg_defval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgValidEPAS2_flg_tempval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgValidEPAS2_flg_invalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgValidEPAS2_flg_setvalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgValidEPAS2_flg_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgValidEPAS2_flg_ovrdval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgValidEPAS2_flg_srvcflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgValidEPAS2_flg_srvcval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgValidEPAS3_flg_defval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgValidEPAS3_flg_tempval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgValidEPAS3_flg_invalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgValidEPAS3_flg_setvalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgValidEPAS3_flg_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgValidEPAS3_flg_ovrdval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgValidEPAS3_flg_srvcflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgValidEPAS3_flg_srvcval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgValidBCM1_flg_defval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgValidBCM1_flg_tempval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgValidBCM1_flg_invalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgValidBCM1_flg_setvalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgValidBCM1_flg_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgValidBCM1_flg_ovrdval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgValidBCM1_flg_srvcflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgValidBCM1_flg_srvcval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgValidBCM2_flg_defval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgValidBCM2_flg_tempval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgValidBCM2_flg_invalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgValidBCM2_flg_setvalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgValidBCM2_flg_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgValidBCM2_flg_ovrdval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgValidBCM2_flg_srvcflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgValidBCM2_flg_srvcval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgValidMETER1_flg_defval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgValidMETER1_flg_tempval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgValidMETER1_flg_invalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgValidMETER1_flg_setvalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgValidMETER1_flg_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgValidMETER1_flg_ovrdval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgValidMETER1_flg_srvcflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgValidMETER1_flg_srvcval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgValidMETER3_flg_defval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgValidMETER3_flg_tempval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgValidMETER3_flg_invalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgValidMETER3_flg_setvalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgValidMETER3_flg_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgValidMETER3_flg_ovrdval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgValidMETER3_flg_srvcflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgValidMETER3_flg_srvcval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgValidAC1_flg_defval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgValidAC1_flg_tempval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgValidAC1_flg_invalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgValidAC1_flg_setvalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgValidAC1_flg_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgValidAC1_flg_ovrdval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgValidAC1_flg_srvcflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgValidAC1_flg_srvcval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgValidEPB1_flg_defval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgValidEPB1_flg_tempval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgValidEPB1_flg_invalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgValidEPB1_flg_setvalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgValidEPB1_flg_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgValidEPB1_flg_ovrdval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgValidEPB1_flg_srvcflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgValidEPB1_flg_srvcval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgValidVCU1_flg_defval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgValidVCU1_flg_tempval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgValidVCU1_flg_invalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgValidVCU1_flg_setvalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgValidVCU1_flg_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgValidVCU1_flg_ovrdval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgValidVCU1_flg_srvcflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgValidVCU1_flg_srvcval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgValidVCU2_flg_defval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgValidVCU2_flg_tempval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgValidVCU2_flg_invalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgValidVCU2_flg_setvalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgValidVCU2_flg_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgValidVCU2_flg_ovrdval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgValidVCU2_flg_srvcflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgValidVCU2_flg_srvcval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgValidHCU3_flg_defval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgValidHCU3_flg_tempval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgValidHCU3_flg_invalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgValidHCU3_flg_setvalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgValidHCU3_flg_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgValidHCU3_flg_ovrdval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgValidHCU3_flg_srvcflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgValidHCU3_flg_srvcval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgValidHCU4_flg_defval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgValidHCU4_flg_tempval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgValidHCU4_flg_invalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgValidHCU4_flg_setvalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgValidHCU4_flg_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgValidHCU4_flg_ovrdval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgValidHCU4_flg_srvcflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgValidHCU4_flg_srvcval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgValidHMI2_flg_defval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgValidHMI2_flg_tempval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgValidHMI2_flg_invalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgValidHMI2_flg_setvalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgValidHMI2_flg_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgValidHMI2_flg_ovrdval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgValidHMI2_flg_srvcflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgValidHMI2_flg_srvcval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgValidHMI1_flg_defval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgValidHMI1_flg_tempval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgValidHMI1_flg_invalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgValidHMI1_flg_setvalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgValidHMI1_flg_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgValidHMI1_flg_ovrdval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgValidHMI1_flg_srvcflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgValidHMI1_flg_srvcval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgValidCSW1_flg_defval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgValidCSW1_flg_tempval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgValidCSW1_flg_invalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgValidCSW1_flg_setvalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgValidCSW1_flg_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgValidCSW1_flg_ovrdval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgValidCSW1_flg_srvcflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgValidCSW1_flg_srvcval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgValidEPM1_flg_defval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgValidEPM1_flg_tempval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgValidEPM1_flg_invalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgValidEPM1_flg_setvalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgValidEPM1_flg_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgValidEPM1_flg_ovrdval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgValidEPM1_flg_srvcflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgValidEPM1_flg_srvcval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgValidEPM2_flg_defval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgValidEPM2_flg_tempval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgValidEPM2_flg_invalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgValidEPM2_flg_setvalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgValidEPM2_flg_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgValidEPM2_flg_ovrdval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgValidEPM2_flg_srvcflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgValidEPM2_flg_srvcval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgValidEPM3_flg_defval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgValidEPM3_flg_tempval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgValidEPM3_flg_invalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgValidEPM3_flg_setvalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgValidEPM3_flg_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgValidEPM3_flg_ovrdval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgValidEPM3_flg_srvcflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgValidEPM3_flg_srvcval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgValidEPM4_flg_defval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgValidEPM4_flg_tempval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgValidEPM4_flg_invalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgValidEPM4_flg_setvalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgValidEPM4_flg_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgValidEPM4_flg_ovrdval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgValidEPM4_flg_srvcflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgValidEPM4_flg_srvcval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgValidEPM5_flg_defval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgValidEPM5_flg_tempval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgValidEPM5_flg_invalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgValidEPM5_flg_setvalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgValidEPM5_flg_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgValidEPM5_flg_ovrdval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgValidEPM5_flg_srvcflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgValidEPM5_flg_srvcval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_ECM9CANPeriodTime_s', 	'sec', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_CANMsgUpdatedECM9_flg_defval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgUpdatedECM9_flg_tempval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgUpdatedECM9_flg_invalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgUpdatedECM9_flg_setvalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgUpdatedECM9_flg_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgUpdatedECM9_flg_ovrdval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgUpdatedECM9_flg_srvcflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgUpdatedECM9_flg_srvcval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_ABS1CANPeriodTime_s', 	'sec', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_CANMsgUpdatedABS1_flg_defval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgUpdatedABS1_flg_tempval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgUpdatedABS1_flg_invalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgUpdatedABS1_flg_setvalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgUpdatedABS1_flg_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgUpdatedABS1_flg_ovrdval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgUpdatedABS1_flg_srvcflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgUpdatedABS1_flg_srvcval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_ABS2CANPeriodTime_s', 	'sec', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_CANMsgUpdatedABS2_flg_defval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgUpdatedABS2_flg_tempval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgUpdatedABS2_flg_invalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgUpdatedABS2_flg_setvalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgUpdatedABS2_flg_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgUpdatedABS2_flg_ovrdval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgUpdatedABS2_flg_srvcflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgUpdatedABS2_flg_srvcval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_SAS1CANPeriodTime_s', 	'sec', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_CANMsgUpdatedSAS1_flg_defval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgUpdatedSAS1_flg_tempval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgUpdatedSAS1_flg_invalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgUpdatedSAS1_flg_setvalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgUpdatedSAS1_flg_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgUpdatedSAS1_flg_ovrdval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgUpdatedSAS1_flg_srvcflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgUpdatedSAS1_flg_srvcval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_EPAS2CANPeriodTime_s', 	'sec', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_CANMsgUpdatedEPAS2_flg_defval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgUpdatedEPAS2_flg_tempval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgUpdatedEPAS2_flg_invalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgUpdatedEPAS2_flg_setvalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgUpdatedEPAS2_flg_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgUpdatedEPAS2_flg_ovrdval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgUpdatedEPAS2_flg_srvcflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgUpdatedEPAS2_flg_srvcval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_EPAS3CANPeriodTime_s', 	'sec', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_CANMsgUpdatedEPAS3_flg_defval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgUpdatedEPAS3_flg_tempval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgUpdatedEPAS3_flg_invalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgUpdatedEPAS3_flg_setvalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgUpdatedEPAS3_flg_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgUpdatedEPAS3_flg_ovrdval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgUpdatedEPAS3_flg_srvcflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgUpdatedEPAS3_flg_srvcval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_VCU1CANPeriodTime_s', 	'sec', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_CANMsgUpdatedVCU1_flg_defval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgUpdatedVCU1_flg_tempval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgUpdatedVCU1_flg_invalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgUpdatedVCU1_flg_setvalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgUpdatedVCU1_flg_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgUpdatedVCU1_flg_ovrdval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgUpdatedVCU1_flg_srvcflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgUpdatedVCU1_flg_srvcval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_VCU2CANPeriodTime_s', 	'sec', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_CANMsgUpdatedVCU2_flg_defval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgUpdatedVCU2_flg_tempval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgUpdatedVCU2_flg_invalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgUpdatedVCU2_flg_setvalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgUpdatedVCU2_flg_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgUpdatedVCU2_flg_ovrdval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgUpdatedVCU2_flg_srvcflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgUpdatedVCU2_flg_srvcval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_HCU3CANPeriodTime_s', 	'sec', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_CANMsgUpdatedHCU3_flg_defval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgUpdatedHCU3_flg_tempval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgUpdatedHCU3_flg_invalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgUpdatedHCU3_flg_setvalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgUpdatedHCU3_flg_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgUpdatedHCU3_flg_ovrdval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgUpdatedHCU3_flg_srvcflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgUpdatedHCU3_flg_srvcval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgCheckedABS2_flg_defval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgCheckedABS2_flg_tempval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgCheckedABS2_flg_invalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgCheckedABS2_flg_setvalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgCheckedABS2_flg_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgCheckedABS2_flg_ovrdval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgCheckedABS2_flg_srvcflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgCheckedABS2_flg_srvcval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgCheckedSAS1_flg_defval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgCheckedSAS1_flg_tempval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgCheckedSAS1_flg_invalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgCheckedSAS1_flg_setvalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgCheckedSAS1_flg_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgCheckedSAS1_flg_ovrdval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgCheckedSAS1_flg_srvcflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgCheckedSAS1_flg_srvcval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgCheckedEPAS2_flg_defval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgCheckedEPAS2_flg_tempval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgCheckedEPAS2_flg_invalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgCheckedEPAS2_flg_setvalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgCheckedEPAS2_flg_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgCheckedEPAS2_flg_ovrdval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgCheckedEPAS2_flg_srvcflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgCheckedEPAS2_flg_srvcval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgCheckedEPAS3_flg_defval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgCheckedEPAS3_flg_tempval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgCheckedEPAS3_flg_invalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgCheckedEPAS3_flg_setvalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgCheckedEPAS3_flg_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgCheckedEPAS3_flg_ovrdval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgCheckedEPAS3_flg_srvcflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgCheckedEPAS3_flg_srvcval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgCheckedVCU1_flg_defval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgCheckedVCU1_flg_tempval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgCheckedVCU1_flg_invalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgCheckedVCU1_flg_setvalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgCheckedVCU1_flg_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgCheckedVCU1_flg_ovrdval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgCheckedVCU1_flg_srvcflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgCheckedVCU1_flg_srvcval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgCheckedVCU2_flg_defval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgCheckedVCU2_flg_tempval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgCheckedVCU2_flg_invalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgCheckedVCU2_flg_setvalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgCheckedVCU2_flg_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgCheckedVCU2_flg_ovrdval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgCheckedVCU2_flg_srvcflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMsgCheckedVCU2_flg_srvcval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_AccelPedalPosn_pct_gain', 	'rat', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_AccelPedalPosn_pct_offset', 	'pct', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_AccelPedalPosn_pct_defval', 	'pct', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_AccelPedalPosn_pct_invalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_AccelPedalPosn_pct_setvalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_AccelPedalPosn_pct_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_AccelPedalPosn_pct_ovrdval', 	'pct', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_AccelPedalPosn_pct_srvcflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_AccelPedalPosn_pct_srvcval', 	'pct', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_AccelPedalPosn_pct_maxval', 	'pct', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_AccelPedalPosn_pct_minval', 	'pct', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_EffAccelPedalPosn_pct_gain', 	'rat', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_EffAccelPedalPosn_pct_offset', 	'pct', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_EffAccelPedalPosn_pct_defval', 	'pct', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_EffAccelPedalPosn_pct_invalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_EffAccelPedalPosn_pct_setvalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_EffAccelPedalPosn_pct_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_EffAccelPedalPosn_pct_ovrdval', 	'pct', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_EffAccelPedalPosn_pct_srvcflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_EffAccelPedalPosn_pct_srvcval', 	'pct', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_EffAccelPedalPosn_pct_maxval', 	'pct', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_EffAccelPedalPosn_pct_minval', 	'pct', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_EngSpd_erpm_gain', 	'rat', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_EngSpd_erpm_offset', 	'erpm', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_EngSpd_erpm_defval', 	'erpm', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_EngSpd_erpm_invalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_EngSpd_erpm_setvalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_EngSpd_erpm_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_EngSpd_erpm_ovrdval', 	'erpm', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_EngSpd_erpm_srvcflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_EngSpd_erpm_srvcval', 	'erpm', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_EngSpd_erpm_maxval', 	'erpm', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_EngSpd_erpm_minval', 	'erpm', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_EngTqFriction_Nm_gain', 	'rat', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_EngTqFriction_Nm_offset', 	'Nm', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_EngTqFriction_Nm_defval', 	'Nm', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_EngTqFriction_Nm_invalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_EngTqFriction_Nm_setvalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_EngTqFriction_Nm_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_EngTqFriction_Nm_ovrdval', 	'Nm', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_EngTqFriction_Nm_srvcflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_EngTqFriction_Nm_srvcval', 	'Nm', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_EngTqFriction_Nm_maxval', 	'Nm', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_EngTqFriction_Nm_minval', 	'Nm', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_EngTqIndicated_Nm_gain', 	'rat', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_EngTqIndicated_Nm_offset', 	'Nm', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_EngTqIndicated_Nm_defval', 	'Nm', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_EngTqIndicated_Nm_invalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_EngTqIndicated_Nm_setvalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_EngTqIndicated_Nm_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_EngTqIndicated_Nm_ovrdval', 	'Nm', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_EngTqIndicated_Nm_srvcflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_EngTqIndicated_Nm_srvcval', 	'Nm', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_EngTqIndicated_Nm_maxval', 	'Nm', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_EngTqIndicated_Nm_minval', 	'Nm', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_EngTqIndicatedCOR_Nm_gain', 	'rat', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_EngTqIndicatedCOR_Nm_offset', 	'Nm', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_EngTqIndicatedCOR_Nm_defval', 	'Nm', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_EngTqIndicatedCOR_Nm_invalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_EngTqIndicatedCOR_Nm_setvalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_EngTqIndicatedCOR_Nm_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_EngTqIndicatedCOR_Nm_ovrdval', 	'Nm', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_EngTqIndicatedCOR_Nm_srvcflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_EngTqIndicatedCOR_Nm_srvcval', 	'Nm', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_EngTqIndicatedCOR_Nm_maxval', 	'Nm', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_EngTqIndicatedCOR_Nm_minval', 	'Nm', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_EngTqUnCORFault_flg_defval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_EngTqUnCORFault_flg_invalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_EngTqUnCORFault_flg_setvalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_EngTqUnCORFault_flg_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_EngTqUnCORFault_flg_ovrdval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_EngTqUnCORFault_flg_srvcflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_EngTqUnCORFault_flg_srvcval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_EngTqMax_Nm_gain', 	'rat', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_EngTqMax_Nm_offset', 	'Nm', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_EngTqMax_Nm_defval', 	'Nm', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_EngTqMax_Nm_invalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_EngTqMax_Nm_setvalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_EngTqMax_Nm_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_EngTqMax_Nm_ovrdval', 	'Nm', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_EngTqMax_Nm_srvcflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_EngTqMax_Nm_srvcval', 	'Nm', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_EngTqMax_Nm_maxval', 	'Nm', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_EngTqMax_Nm_minval', 	'Nm', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_EngTqMin_Nm_gain', 	'rat', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_EngTqMin_Nm_offset', 	'Nm', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_EngTqMin_Nm_defval', 	'Nm', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_EngTqMin_Nm_invalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_EngTqMin_Nm_setvalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_EngTqMin_Nm_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_EngTqMin_Nm_ovrdval', 	'Nm', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_EngTqMin_Nm_srvcflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_EngTqMin_Nm_srvcval', 	'Nm', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_EngTqMin_Nm_maxval', 	'Nm', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_EngTqMin_Nm_minval', 	'Nm', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_EMSHybridOpState_enum_defval', 	'enum', 	0, 	255, 	'uint8', 	'' );
a2l_par('KINP_EMSHybridOpState_enum_invalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_EMSHybridOpState_enum_setvalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_EMSHybridOpState_enum_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_EMSHybridOpState_enum_ovrdval', 	'enum', 	0, 	255, 	'uint8', 	'' );
a2l_par('KINP_EMSHybridOpState_enum_srvcflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_EMSHybridOpState_enum_srvcval', 	'enum', 	0, 	255, 	'uint8', 	'' );
a2l_par('KINP_EMSOpState_enum_defval', 	'enum', 	0, 	255, 	'uint8', 	'' );
a2l_par('KINP_EMSOpState_enum_invalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_EMSOpState_enum_setvalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_EMSOpState_enum_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_EMSOpState_enum_ovrdval', 	'enum', 	0, 	255, 	'uint8', 	'' );
a2l_par('KINP_EMSOpState_enum_srvcflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_EMSOpState_enum_srvcval', 	'enum', 	0, 	255, 	'uint8', 	'' );
a2l_par('KINP_EngHoodOpen_flg_defval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_EngHoodOpen_flg_invalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_EngHoodOpen_flg_setvalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_EngHoodOpen_flg_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_EngHoodOpen_flg_ovrdval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_EngHoodOpen_flg_srvcflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_EngHoodOpen_flg_srvcval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_ShifterPosn_enum_defval', 	'enum', 	0, 	255, 	'uint8', 	'' );
a2l_par('KINP_ShifterPosn_enum_invalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_ShifterPosn_enum_setvalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_ShifterPosn_enum_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_ShifterPosn_enum_ovrdval', 	'enum', 	0, 	255, 	'uint8', 	'' );
a2l_par('KINP_ShifterPosn_enum_srvcflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_ShifterPosn_enum_srvcval', 	'enum', 	0, 	255, 	'uint8', 	'' );
a2l_par('KINP_NowGearPosn_enum_defval', 	'enum', 	0, 	255, 	'uint8', 	'' );
a2l_par('KINP_NowGearPosn_enum_invalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_NowGearPosn_enum_setvalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_NowGearPosn_enum_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_NowGearPosn_enum_ovrdval', 	'enum', 	0, 	255, 	'uint8', 	'' );
a2l_par('KINP_NowGearPosn_enum_srvcflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_NowGearPosn_enum_srvcval', 	'enum', 	0, 	255, 	'uint8', 	'' );
a2l_par('KINP_TMTurbineSpd_rpm_gain', 	'rat', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_TMTurbineSpd_rpm_offset', 	'rpm', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_TMTurbineSpd_rpm_defval', 	'rpm', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_TMTurbineSpd_rpm_invalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_TMTurbineSpd_rpm_setvalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_TMTurbineSpd_rpm_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_TMTurbineSpd_rpm_ovrdval', 	'rpm', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_TMTurbineSpd_rpm_srvcflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_TMTurbineSpd_rpm_srvcval', 	'rpm', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_TMTurbineSpd_rpm_maxval', 	'rpm', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_TMTurbineSpd_rpm_minval', 	'rpm', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_TCMFaultStatus_enum_defval', 	'enum', 	0, 	255, 	'uint8', 	'' );
a2l_par('KINP_TCMFaultStatus_enum_invalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_TCMFaultStatus_enum_setvalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_TCMFaultStatus_enum_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_TCMFaultStatus_enum_ovrdval', 	'enum', 	0, 	255, 	'uint8', 	'' );
a2l_par('KINP_TCMFaultStatus_enum_srvcflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_TCMFaultStatus_enum_srvcval', 	'enum', 	0, 	255, 	'uint8', 	'' );
a2l_par('KINP_DriverMode_enum_defval', 	'enum', 	0, 	255, 	'uint8', 	'' );
a2l_par('KINP_DriverMode_enum_invalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_DriverMode_enum_setvalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_DriverMode_enum_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_DriverMode_enum_ovrdval', 	'enum', 	0, 	255, 	'uint8', 	'' );
a2l_par('KINP_DriverMode_enum_srvcflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_DriverMode_enum_srvcval', 	'enum', 	0, 	255, 	'uint8', 	'' );
a2l_par('KINP_KeySwitchStatus_enum_defval', 	'enum', 	0, 	255, 	'uint8', 	'' );
a2l_par('KINP_KeySwitchStatus_enum_invalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_KeySwitchStatus_enum_setvalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_KeySwitchStatus_enum_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_KeySwitchStatus_enum_ovrdval', 	'enum', 	0, 	255, 	'uint8', 	'' );
a2l_par('KINP_KeySwitchStatus_enum_srvcflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_KeySwitchStatus_enum_srvcval', 	'enum', 	0, 	255, 	'uint8', 	'' );
a2l_par('KINP_TurnSignalSwL_flg_defval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_TurnSignalSwL_flg_invalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_TurnSignalSwL_flg_setvalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_TurnSignalSwL_flg_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_TurnSignalSwL_flg_ovrdval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_TurnSignalSwL_flg_srvcflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_TurnSignalSwL_flg_srvcval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_TurnSignalSwR_flg_defval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_TurnSignalSwR_flg_invalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_TurnSignalSwR_flg_setvalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_TurnSignalSwR_flg_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_TurnSignalSwR_flg_ovrdval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_TurnSignalSwR_flg_srvcflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_TurnSignalSwR_flg_srvcval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_DriverDoorOpen_flg_defval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_DriverDoorOpen_flg_invalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_DriverDoorOpen_flg_setvalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_DriverDoorOpen_flg_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_DriverDoorOpen_flg_ovrdval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_DriverDoorOpen_flg_srvcflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_DriverDoorOpen_flg_srvcval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_PassengerDoorOpen_flg_defval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_PassengerDoorOpen_flg_invalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_PassengerDoorOpen_flg_setvalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_PassengerDoorOpen_flg_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_PassengerDoorOpen_flg_ovrdval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_PassengerDoorOpen_flg_srvcflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_PassengerDoorOpen_flg_srvcval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_LRDoorOpen_flg_defval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_LRDoorOpen_flg_invalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_LRDoorOpen_flg_setvalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_LRDoorOpen_flg_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_LRDoorOpen_flg_ovrdval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_LRDoorOpen_flg_srvcflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_LRDoorOpen_flg_srvcval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_RRDoorOpen_flg_defval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_RRDoorOpen_flg_invalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_RRDoorOpen_flg_setvalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_RRDoorOpen_flg_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_RRDoorOpen_flg_ovrdval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_RRDoorOpen_flg_srvcflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_RRDoorOpen_flg_srvcval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_TailGateOpen_flg_defval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_TailGateOpen_flg_invalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_TailGateOpen_flg_setvalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_TailGateOpen_flg_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_TailGateOpen_flg_ovrdval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_TailGateOpen_flg_srvcflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_TailGateOpen_flg_srvcval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_AnyDoorOpen_flg_defval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_AnyDoorOpen_flg_invalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_AnyDoorOpen_flg_setvalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_AnyDoorOpen_flg_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_AnyDoorOpen_flg_ovrdval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_AnyDoorOpen_flg_srvcflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_AnyDoorOpen_flg_srvcval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_HazardLightSw_flg_defval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_HazardLightSw_flg_invalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_HazardLightSw_flg_setvalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_HazardLightSw_flg_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_HazardLightSw_flg_ovrdval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_HazardLightSw_flg_srvcflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_HazardLightSw_flg_srvcval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_VehCrashed_flg_defval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_VehCrashed_flg_invalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_VehCrashed_flg_setvalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_VehCrashed_flg_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_VehCrashed_flg_ovrdval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_VehCrashed_flg_srvcflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_VehCrashed_flg_srvcval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_ABSActive_flg_defval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_ABSActive_flg_invalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_ABSActive_flg_setvalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_ABSActive_flg_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_ABSActive_flg_ovrdval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_ABSActive_flg_srvcflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_ABSActive_flg_srvcval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_ABSFault_flg_defval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_ABSFault_flg_invalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_ABSFault_flg_setvalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_ABSFault_flg_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_ABSFault_flg_ovrdval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_ABSFault_flg_srvcflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_ABSFault_flg_srvcval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_BrkLampOn_flg_defval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_BrkLampOn_flg_invalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_BrkLampOn_flg_setvalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_BrkLampOn_flg_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_BrkLampOn_flg_ovrdval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_BrkLampOn_flg_srvcflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_BrkLampOn_flg_srvcval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_EBDFault_flg_defval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_EBDFault_flg_invalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_EBDFault_flg_setvalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_EBDFault_flg_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_EBDFault_flg_ovrdval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_EBDFault_flg_srvcflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_EBDFault_flg_srvcval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_ESCActive_flg_defval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_ESCActive_flg_invalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_ESCActive_flg_setvalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_ESCActive_flg_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_ESCActive_flg_ovrdval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_ESCActive_flg_srvcflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_ESCActive_flg_srvcval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_ESCFault_flg_defval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_ESCFault_flg_invalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_ESCFault_flg_setvalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_ESCFault_flg_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_ESCFault_flg_ovrdval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_ESCFault_flg_srvcflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_ESCFault_flg_srvcval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_TCSActive_flg_defval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_TCSActive_flg_invalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_TCSActive_flg_setvalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_TCSActive_flg_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_TCSActive_flg_ovrdval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_TCSActive_flg_srvcflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_TCSActive_flg_srvcval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_TCSEnabled_flg_defval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_TCSEnabled_flg_invalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_TCSEnabled_flg_setvalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_TCSEnabled_flg_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_TCSEnabled_flg_ovrdval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_TCSEnabled_flg_srvcflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_TCSEnabled_flg_srvcval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_TCSFault_flg_defval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_TCSFault_flg_invalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_TCSFault_flg_setvalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_TCSFault_flg_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_TCSFault_flg_ovrdval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_TCSFault_flg_srvcflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_TCSFault_flg_srvcval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_HSAActive_flg_defval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_HSAActive_flg_invalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_HSAActive_flg_setvalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_HSAActive_flg_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_HSAActive_flg_ovrdval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_HSAActive_flg_srvcflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_HSAActive_flg_srvcval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_HSAFault_flg_defval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_HSAFault_flg_invalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_HSAFault_flg_setvalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_HSAFault_flg_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_HSAFault_flg_ovrdval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_HSAFault_flg_srvcflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_HSAFault_flg_srvcval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_VehSpd_kph_gain', 	'rat', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_VehSpd_kph_offset', 	'kph', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_VehSpd_kph_defval', 	'kph', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_VehSpd_kph_invalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_VehSpd_kph_setvalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_VehSpd_kph_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_VehSpd_kph_ovrdval', 	'kph', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_VehSpd_kph_srvcflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_VehSpd_kph_srvcval', 	'kph', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_VehSpd_kph_maxval', 	'kph', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_VehSpd_kph_minval', 	'kph', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_YawRate_degps_gain', 	'rat', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_YawRate_degps_offset', 	'degps', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_YawRate_degps_defval', 	'degps', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_YawRate_degps_invalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_YawRate_degps_setvalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_YawRate_degps_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_YawRate_degps_ovrdval', 	'degps', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_YawRate_degps_srvcflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_YawRate_degps_srvcval', 	'degps', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_YawRate_degps_maxval', 	'degps', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_YawRate_degps_minval', 	'degps', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_LatAccel_G_gain', 	'rat', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_LatAccel_G_offset', 	'G', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_LatAccel_G_defval', 	'G', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_LatAccel_G_invalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_LatAccel_G_setvalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_LatAccel_G_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_LatAccel_G_ovrdval', 	'G', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_LatAccel_G_srvcflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_LatAccel_G_srvcval', 	'G', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_LatAccel_G_maxval', 	'G', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_LatAccel_G_minval', 	'G', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_LongAccel_G_gain', 	'rat', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_LongAccel_G_offset', 	'G', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_LongAccel_G_defval', 	'G', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_LongAccel_G_invalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_LongAccel_G_setvalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_LongAccel_G_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_LongAccel_G_ovrdval', 	'G', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_LongAccel_G_srvcflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_LongAccel_G_srvcval', 	'G', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_LongAccel_G_maxval', 	'G', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_LongAccel_G_minval', 	'G', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_MCPressure_bar_gain', 	'rat', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_MCPressure_bar_offset', 	'bar', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_MCPressure_bar_defval', 	'bar', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_MCPressure_bar_invalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_MCPressure_bar_setvalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_MCPressure_bar_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_MCPressure_bar_ovrdval', 	'bar', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_MCPressure_bar_srvcflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_MCPressure_bar_srvcval', 	'bar', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_MCPressure_bar_maxval', 	'bar', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_MCPressure_bar_minval', 	'bar', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_SurfaceGrade_deg_gain', 	'rat', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_SurfaceGrade_deg_offset', 	'deg', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_SurfaceGrade_deg_defval', 	'deg', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_SurfaceGrade_deg_invalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_SurfaceGrade_deg_setvalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_SurfaceGrade_deg_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_SurfaceGrade_deg_ovrdval', 	'deg', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_SurfaceGrade_deg_srvcflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_SurfaceGrade_deg_srvcval', 	'deg', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_SurfaceGrade_deg_maxval', 	'deg', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_SurfaceGrade_deg_minval', 	'deg', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_BrakBoosterPres_kPa_gain', 	'rat', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_BrakBoosterPres_kPa_offset', 	'kPa', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_BrakBoosterPres_kPa_defval', 	'kPa', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_BrakBoosterPres_kPa_invalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_BrakBoosterPres_kPa_setvalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_BrakBoosterPres_kPa_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_BrakBoosterPres_kPa_ovrdval', 	'kPa', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_BrakBoosterPres_kPa_srvcflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_BrakBoosterPres_kPa_srvcval', 	'kPa', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_BrakBoosterPres_kPa_maxval', 	'kPa', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_BrakBoosterPres_kPa_minval', 	'kPa', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_LowBrakBoosterPres_flg_defval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_LowBrakBoosterPres_flg_invalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_LowBrakBoosterPres_flg_setvalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_LowBrakBoosterPres_flg_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_LowBrakBoosterPres_flg_ovrdval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_LowBrakBoosterPres_flg_srvcflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_LowBrakBoosterPres_flg_srvcval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_LFWheelSpeed_kph_gain', 	'rat', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_LFWheelSpeed_kph_offset', 	'kph', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_LFWheelSpeed_kph_defval', 	'kph', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_LFWheelSpeed_kph_invalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_LFWheelSpeed_kph_setvalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_LFWheelSpeed_kph_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_LFWheelSpeed_kph_ovrdval', 	'kph', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_LFWheelSpeed_kph_srvcflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_LFWheelSpeed_kph_srvcval', 	'kph', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_LFWheelSpeed_kph_maxval', 	'kph', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_LFWheelSpeed_kph_minval', 	'kph', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_LRWheelSpeed_kph_gain', 	'rat', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_LRWheelSpeed_kph_offset', 	'kph', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_LRWheelSpeed_kph_defval', 	'kph', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_LRWheelSpeed_kph_invalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_LRWheelSpeed_kph_setvalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_LRWheelSpeed_kph_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_LRWheelSpeed_kph_ovrdval', 	'kph', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_LRWheelSpeed_kph_srvcflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_LRWheelSpeed_kph_srvcval', 	'kph', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_LRWheelSpeed_kph_maxval', 	'kph', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_LRWheelSpeed_kph_minval', 	'kph', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_RFWheelSpeed_kph_gain', 	'rat', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_RFWheelSpeed_kph_offset', 	'kph', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_RFWheelSpeed_kph_defval', 	'kph', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_RFWheelSpeed_kph_invalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_RFWheelSpeed_kph_setvalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_RFWheelSpeed_kph_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_RFWheelSpeed_kph_ovrdval', 	'kph', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_RFWheelSpeed_kph_srvcflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_RFWheelSpeed_kph_srvcval', 	'kph', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_RFWheelSpeed_kph_maxval', 	'kph', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_RFWheelSpeed_kph_minval', 	'kph', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_RRWheelSpeed_kph_gain', 	'rat', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_RRWheelSpeed_kph_offset', 	'kph', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_RRWheelSpeed_kph_defval', 	'kph', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_RRWheelSpeed_kph_invalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_RRWheelSpeed_kph_setvalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_RRWheelSpeed_kph_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_RRWheelSpeed_kph_ovrdval', 	'kph', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_RRWheelSpeed_kph_srvcflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_RRWheelSpeed_kph_srvcval', 	'kph', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_RRWheelSpeed_kph_maxval', 	'kph', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_RRWheelSpeed_kph_minval', 	'kph', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_SteerAngle_deg_gain', 	'rat', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_SteerAngle_deg_offset', 	'deg', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_SteerAngle_deg_defval', 	'deg', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_SteerAngle_deg_invalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_SteerAngle_deg_setvalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_SteerAngle_deg_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_SteerAngle_deg_ovrdval', 	'deg', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_SteerAngle_deg_srvcflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_SteerAngle_deg_srvcval', 	'deg', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_SteerAngle_deg_maxval', 	'deg', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_SteerAngle_deg_minval', 	'deg', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_SteerSpeed_degps_gain', 	'rat', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_SteerSpeed_degps_offset', 	'degps', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_SteerSpeed_degps_defval', 	'degps', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_SteerSpeed_degps_invalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_SteerSpeed_degps_setvalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_SteerSpeed_degps_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_SteerSpeed_degps_ovrdval', 	'degps', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_SteerSpeed_degps_srvcflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_SteerSpeed_degps_srvcval', 	'degps', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_SteerSpeed_degps_maxval', 	'degps', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_SteerSpeed_degps_minval', 	'degps', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_RelSteerAngle_deg_gain', 	'rat', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_RelSteerAngle_deg_offset', 	'deg', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_RelSteerAngle_deg_defval', 	'deg', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_RelSteerAngle_deg_invalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_RelSteerAngle_deg_setvalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_RelSteerAngle_deg_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_RelSteerAngle_deg_ovrdval', 	'deg', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_RelSteerAngle_deg_srvcflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_RelSteerAngle_deg_srvcval', 	'deg', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_RelSteerAngle_deg_maxval', 	'deg', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_RelSteerAngle_deg_minval', 	'deg', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_SteerTorque_Nm_gain', 	'rat', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_SteerTorque_Nm_offset', 	'Nm', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_SteerTorque_Nm_defval', 	'Nm', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_SteerTorque_Nm_invalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_SteerTorque_Nm_setvalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_SteerTorque_Nm_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_SteerTorque_Nm_ovrdval', 	'Nm', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_SteerTorque_Nm_srvcflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_SteerTorque_Nm_srvcval', 	'Nm', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_SteerTorque_Nm_maxval', 	'Nm', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_SteerTorque_Nm_minval', 	'Nm', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_EPSElectPWR_A_gain', 	'rat', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_EPSElectPWR_A_offset', 	'A', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_EPSElectPWR_A_defval', 	'A', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_EPSElectPWR_A_invalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_EPSElectPWR_A_setvalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_EPSElectPWR_A_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_EPSElectPWR_A_ovrdval', 	'A', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_EPSElectPWR_A_srvcflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_EPSElectPWR_A_srvcval', 	'A', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_EPSElectPWR_A_maxval', 	'A', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_EPSElectPWR_A_minval', 	'A', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_EPSFailed_flg_defval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_EPSFailed_flg_invalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_EPSFailed_flg_setvalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_EPSFailed_flg_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_EPSFailed_flg_ovrdval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_EPSFailed_flg_srvcflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_EPSFailed_flg_srvcval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_AckCurStrAngReq_deg_gain', 	'rat', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_AckCurStrAngReq_deg_offset', 	'deg', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_AckCurStrAngReq_deg_defval', 	'deg', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_AckCurStrAngReq_deg_invalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_AckCurStrAngReq_deg_setvalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_AckCurStrAngReq_deg_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_AckCurStrAngReq_deg_ovrdval', 	'deg', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_AckCurStrAngReq_deg_srvcflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_AckCurStrAngReq_deg_srvcval', 	'deg', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_AckCurStrAngReq_deg_maxval', 	'deg', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_AckCurStrAngReq_deg_minval', 	'deg', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_AckCurStrAngReqApplable_flg_defval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_AckCurStrAngReqApplable_flg_invalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_AckCurStrAngReqApplable_flg_setvalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_AckCurStrAngReqApplable_flg_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_AckCurStrAngReqApplable_flg_ovrdval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_AckCurStrAngReqApplable_flg_srvcflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_AckCurStrAngReqApplable_flg_srvcval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_AckCurStrTqReq_Nm_gain', 	'rat', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_AckCurStrTqReq_Nm_offset', 	'Nm', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_AckCurStrTqReq_Nm_defval', 	'Nm', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_AckCurStrTqReq_Nm_invalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_AckCurStrTqReq_Nm_setvalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_AckCurStrTqReq_Nm_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_AckCurStrTqReq_Nm_ovrdval', 	'Nm', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_AckCurStrTqReq_Nm_srvcflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_AckCurStrTqReq_Nm_srvcval', 	'Nm', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_AckCurStrTqReq_Nm_maxval', 	'Nm', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_AckCurStrTqReq_Nm_minval', 	'Nm', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_AckCurStrTqReqApplable_flg_defval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_AckCurStrTqReqApplable_flg_invalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_AckCurStrTqReqApplable_flg_setvalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_AckCurStrTqReqApplable_flg_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_AckCurStrTqReqApplable_flg_ovrdval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_AckCurStrTqReqApplable_flg_srvcflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_AckCurStrTqReqApplable_flg_srvcval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_EPSBattVolt_V_gain', 	'rat', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_EPSBattVolt_V_offset', 	'V', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_EPSBattVolt_V_defval', 	'V', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_EPSBattVolt_V_invalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_EPSBattVolt_V_setvalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_EPSBattVolt_V_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_EPSBattVolt_V_ovrdval', 	'V', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_EPSBattVolt_V_srvcflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_EPSBattVolt_V_srvcval', 	'V', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_EPSBattVolt_V_maxval', 	'V', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_EPSBattVolt_V_minval', 	'V', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_EPASMILReq_flg_defval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_EPASMILReq_flg_invalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_EPASMILReq_flg_setvalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_EPASMILReq_flg_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_EPASMILReq_flg_ovrdval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_EPASMILReq_flg_srvcflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_EPASMILReq_flg_srvcval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_OdoMeter_km_gain', 	'rat', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_OdoMeter_km_offset', 	'km', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_OdoMeter_km_defval', 	'km', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_OdoMeter_km_invalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_OdoMeter_km_setvalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_OdoMeter_km_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_OdoMeter_km_ovrdval', 	'km', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_OdoMeter_km_srvcflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_OdoMeter_km_srvcval', 	'km', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_OdoMeter_km_maxval', 	'km', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_OdoMeter_km_minval', 	'km', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_LowBrakeFluid_flg_defval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_LowBrakeFluid_flg_invalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_LowBrakeFluid_flg_setvalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_LowBrakeFluid_flg_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_LowBrakeFluid_flg_ovrdval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_LowBrakeFluid_flg_srvcflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_LowBrakeFluid_flg_srvcval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_ParkBrakeOn_flg_defval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_ParkBrakeOn_flg_invalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_ParkBrakeOn_flg_setvalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_ParkBrakeOn_flg_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_ParkBrakeOn_flg_ovrdval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_ParkBrakeOn_flg_srvcflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_ParkBrakeOn_flg_srvcval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_SeatBeltNOTFasten_flg_defval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_SeatBeltNOTFasten_flg_invalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_SeatBeltNOTFasten_flg_setvalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_SeatBeltNOTFasten_flg_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_SeatBeltNOTFasten_flg_ovrdval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_SeatBeltNOTFasten_flg_srvcflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_SeatBeltNOTFasten_flg_srvcval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_MeterVehSpd_kph_gain', 	'rat', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_MeterVehSpd_kph_offset', 	'kph', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_MeterVehSpd_kph_defval', 	'kph', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_MeterVehSpd_kph_invalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_MeterVehSpd_kph_setvalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_MeterVehSpd_kph_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_MeterVehSpd_kph_ovrdval', 	'kph', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_MeterVehSpd_kph_srvcflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_MeterVehSpd_kph_srvcval', 	'kph', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_MeterVehSpd_kph_maxval', 	'kph', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_MeterVehSpd_kph_minval', 	'kph', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_OutsideTemp_degC_gain', 	'rat', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_OutsideTemp_degC_offset', 	'degC', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_OutsideTemp_degC_defval', 	'degC', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_OutsideTemp_degC_invalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_OutsideTemp_degC_setvalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_OutsideTemp_degC_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_OutsideTemp_degC_ovrdval', 	'degC', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_OutsideTemp_degC_srvcflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_OutsideTemp_degC_srvcval', 	'degC', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_OutsideTemp_degC_maxval', 	'degC', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_OutsideTemp_degC_minval', 	'degC', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_ParkBrakeBindSta_enum_defval', 	'enum', 	0, 	255, 	'uint8', 	'' );
a2l_par('KINP_ParkBrakeBindSta_enum_invalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_ParkBrakeBindSta_enum_setvalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_ParkBrakeBindSta_enum_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_ParkBrakeBindSta_enum_ovrdval', 	'enum', 	0, 	255, 	'uint8', 	'' );
a2l_par('KINP_ParkBrakeBindSta_enum_srvcflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_ParkBrakeBindSta_enum_srvcval', 	'enum', 	0, 	255, 	'uint8', 	'' );
a2l_par('KINP_AEBEnableH_flg_defval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_AEBEnableH_flg_invalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_AEBEnableH_flg_setvalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_AEBEnableH_flg_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_AEBEnableH_flg_ovrdval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_AEBEnableH_flg_srvcflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_AEBEnableH_flg_srvcval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_FCWEnableH_flg_defval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_FCWEnableH_flg_invalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_FCWEnableH_flg_setvalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_FCWEnableH_flg_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_FCWEnableH_flg_ovrdval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_FCWEnableH_flg_srvcflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_FCWEnableH_flg_srvcval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CSCEnableH_flg_defval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CSCEnableH_flg_invalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CSCEnableH_flg_setvalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CSCEnableH_flg_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CSCEnableH_flg_ovrdval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CSCEnableH_flg_srvcflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CSCEnableH_flg_srvcval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_LKAEnableH_flg_defval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_LKAEnableH_flg_invalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_LKAEnableH_flg_setvalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_LKAEnableH_flg_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_LKAEnableH_flg_ovrdval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_LKAEnableH_flg_srvcflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_LKAEnableH_flg_srvcval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_MAPAEnableH_flg_defval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_MAPAEnableH_flg_invalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_MAPAEnableH_flg_setvalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_MAPAEnableH_flg_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_MAPAEnableH_flg_ovrdval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_MAPAEnableH_flg_srvcflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_MAPAEnableH_flg_srvcval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_LCSEnableH_flg_defval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_LCSEnableH_flg_invalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_LCSEnableH_flg_setvalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_LCSEnableH_flg_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_LCSEnableH_flg_ovrdval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_LCSEnableH_flg_srvcflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_LCSEnableH_flg_srvcval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_LFCPilotOnH_flg_defval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_LFCPilotOnH_flg_invalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_LFCPilotOnH_flg_setvalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_LFCPilotOnH_flg_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_LFCPilotOnH_flg_ovrdval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_LFCPilotOnH_flg_srvcflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_LFCPilotOnH_flg_srvcval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_LFCPilotCancelH_flg_defval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_LFCPilotCancelH_flg_invalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_LFCPilotCancelH_flg_setvalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_LFCPilotCancelH_flg_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_LFCPilotCancelH_flg_ovrdval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_LFCPilotCancelH_flg_srvcflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_LFCPilotCancelH_flg_srvcval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_ACCOnH_flg_defval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_ACCOnH_flg_invalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_ACCOnH_flg_setvalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_ACCOnH_flg_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_ACCOnH_flg_ovrdval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_ACCOnH_flg_srvcflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_ACCOnH_flg_srvcval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_ACCCancelH_flg_defval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_ACCCancelH_flg_invalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_ACCCancelH_flg_setvalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_ACCCancelH_flg_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_ACCCancelH_flg_ovrdval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_ACCCancelH_flg_srvcflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_ACCCancelH_flg_srvcval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_ACCResSpdIncH_flg_defval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_ACCResSpdIncH_flg_invalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_ACCResSpdIncH_flg_setvalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_ACCResSpdIncH_flg_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_ACCResSpdIncH_flg_ovrdval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_ACCResSpdIncH_flg_srvcflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_ACCResSpdIncH_flg_srvcval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_ACCSetSpdDecH_flg_defval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_ACCSetSpdDecH_flg_invalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_ACCSetSpdDecH_flg_setvalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_ACCSetSpdDecH_flg_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_ACCSetSpdDecH_flg_ovrdval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_ACCSetSpdDecH_flg_srvcflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_ACCSetSpdDecH_flg_srvcval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_ACCSpdIncH_flg_defval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_ACCSpdIncH_flg_invalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_ACCSpdIncH_flg_setvalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_ACCSpdIncH_flg_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_ACCSpdIncH_flg_ovrdval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_ACCSpdIncH_flg_srvcflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_ACCSpdIncH_flg_srvcval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_ACCSpdDecH_flg_defval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_ACCSpdDecH_flg_invalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_ACCSpdDecH_flg_setvalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_ACCSpdDecH_flg_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_ACCSpdDecH_flg_ovrdval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_ACCSpdDecH_flg_srvcflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_ACCSpdDecH_flg_srvcval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_ACCTimeGapIncH_flg_defval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_ACCTimeGapIncH_flg_invalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_ACCTimeGapIncH_flg_setvalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_ACCTimeGapIncH_flg_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_ACCTimeGapIncH_flg_ovrdval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_ACCTimeGapIncH_flg_srvcflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_ACCTimeGapIncH_flg_srvcval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_ACCTimeGapDecH_flg_defval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_ACCTimeGapDecH_flg_invalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_ACCTimeGapDecH_flg_setvalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_ACCTimeGapDecH_flg_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_ACCTimeGapDecH_flg_ovrdval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_ACCTimeGapDecH_flg_srvcflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_ACCTimeGapDecH_flg_srvcval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_IGSAOnH_flg_defval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_IGSAOnH_flg_invalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_IGSAOnH_flg_setvalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_IGSAOnH_flg_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_IGSAOnH_flg_ovrdval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_IGSAOnH_flg_srvcflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_IGSAOnH_flg_srvcval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_IGSAResSpdIncH_flg_defval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_IGSAResSpdIncH_flg_invalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_IGSAResSpdIncH_flg_setvalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_IGSAResSpdIncH_flg_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_IGSAResSpdIncH_flg_ovrdval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_IGSAResSpdIncH_flg_srvcflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_IGSAResSpdIncH_flg_srvcval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_IGSASetSpdDecH_flg_defval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_IGSASetSpdDecH_flg_invalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_IGSASetSpdDecH_flg_setvalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_IGSASetSpdDecH_flg_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_IGSASetSpdDecH_flg_ovrdval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_IGSASetSpdDecH_flg_srvcflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_IGSASetSpdDecH_flg_srvcval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_IGSASwitchModeH_flg_defval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_IGSASwitchModeH_flg_invalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_IGSASwitchModeH_flg_setvalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_IGSASwitchModeH_flg_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_IGSASwitchModeH_flg_ovrdval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_IGSASwitchModeH_flg_srvcflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_IGSASwitchModeH_flg_srvcval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_FCWWarningModeH_enum_defval', 	'enum', 	0, 	255, 	'uint8', 	'' );
a2l_par('KINP_FCWWarningModeH_enum_invalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_FCWWarningModeH_enum_setvalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_FCWWarningModeH_enum_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_FCWWarningModeH_enum_ovrdval', 	'enum', 	0, 	255, 	'uint8', 	'' );
a2l_par('KINP_FCWWarningModeH_enum_srvcflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_FCWWarningModeH_enum_srvcval', 	'enum', 	0, 	255, 	'uint8', 	'' );
a2l_par('KINP_DefMaxACCSetSpeed_kph_gain', 	'rat', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_DefMaxACCSetSpeed_kph_offset', 	'kph', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_DefMaxACCSetSpeed_kph_defval', 	'kph', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_DefMaxACCSetSpeed_kph_invalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_DefMaxACCSetSpeed_kph_setvalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_DefMaxACCSetSpeed_kph_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_DefMaxACCSetSpeed_kph_ovrdval', 	'kph', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_DefMaxACCSetSpeed_kph_srvcflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_DefMaxACCSetSpeed_kph_srvcval', 	'kph', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_DefMaxACCSetSpeed_kph_maxval', 	'kph', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_DefMaxACCSetSpeed_kph_minval', 	'kph', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_AckCurBrakDecReq_mps2_gain', 	'rat', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_AckCurBrakDecReq_mps2_offset', 	'mps2', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_AckCurBrakDecReq_mps2_defval', 	'mps2', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_AckCurBrakDecReq_mps2_invalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_AckCurBrakDecReq_mps2_setvalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_AckCurBrakDecReq_mps2_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_AckCurBrakDecReq_mps2_ovrdval', 	'mps2', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_AckCurBrakDecReq_mps2_srvcflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_AckCurBrakDecReq_mps2_srvcval', 	'mps2', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_AckCurBrakDecReq_mps2_maxval', 	'mps2', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_AckCurBrakDecReq_mps2_minval', 	'mps2', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_AckCurBrakDecReqApplable_flg_defval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_AckCurBrakDecReqApplable_flg_invalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_AckCurBrakDecReqApplable_flg_setvalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_AckCurBrakDecReqApplable_flg_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_AckCurBrakDecReqApplable_flg_ovrdval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_AckCurBrakDecReqApplable_flg_srvcflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_AckCurBrakDecReqApplable_flg_srvcval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_AckCurPTTqReq_Nm_gain', 	'rat', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_AckCurPTTqReq_Nm_offset', 	'Nm', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_AckCurPTTqReq_Nm_defval', 	'Nm', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_AckCurPTTqReq_Nm_invalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_AckCurPTTqReq_Nm_setvalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_AckCurPTTqReq_Nm_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_AckCurPTTqReq_Nm_ovrdval', 	'Nm', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_AckCurPTTqReq_Nm_srvcflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_AckCurPTTqReq_Nm_srvcval', 	'Nm', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_AckCurPTTqReq_Nm_maxval', 	'Nm', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_AckCurPTTqReq_Nm_minval', 	'Nm', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_AckCurPTTqReqApplable_flg_defval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_AckCurPTTqReqApplable_flg_invalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_AckCurPTTqReqApplable_flg_setvalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_AckCurPTTqReqApplable_flg_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_AckCurPTTqReqApplable_flg_ovrdval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_AckCurPTTqReqApplable_flg_srvcflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_AckCurPTTqReqApplable_flg_srvcval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_AckCurVehDec_mps2_gain', 	'rat', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_AckCurVehDec_mps2_offset', 	'mps2', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_AckCurVehDec_mps2_defval', 	'mps2', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_AckCurVehDec_mps2_invalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_AckCurVehDec_mps2_setvalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_AckCurVehDec_mps2_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_AckCurVehDec_mps2_ovrdval', 	'mps2', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_AckCurVehDec_mps2_srvcflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_AckCurVehDec_mps2_srvcval', 	'mps2', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_AckCurVehDec_mps2_maxval', 	'mps2', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_AckCurVehDec_mps2_minval', 	'mps2', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_DeceContManag_flg_defval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_DeceContManag_flg_invalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_DeceContManag_flg_setvalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_DeceContManag_flg_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_DeceContManag_flg_ovrdval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_DeceContManag_flg_srvcflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_DeceContManag_flg_srvcval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_DriverBrakPedalOn_flg_defval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_DriverBrakPedalOn_flg_invalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_DriverBrakPedalOn_flg_setvalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_DriverBrakPedalOn_flg_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_DriverBrakPedalOn_flg_ovrdval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_DriverBrakPedalOn_flg_srvcflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_DriverBrakPedalOn_flg_srvcval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_ECMExtnTqAvailable_flg_defval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_ECMExtnTqAvailable_flg_invalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_ECMExtnTqAvailable_flg_setvalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_ECMExtnTqAvailable_flg_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_ECMExtnTqAvailable_flg_ovrdval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_ECMExtnTqAvailable_flg_srvcflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_ECMExtnTqAvailable_flg_srvcval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_ECMTqSource_enum_defval', 	'enum', 	0, 	255, 	'uint8', 	'' );
a2l_par('KINP_ECMTqSource_enum_invalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_ECMTqSource_enum_setvalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_ECMTqSource_enum_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_ECMTqSource_enum_ovrdval', 	'enum', 	0, 	255, 	'uint8', 	'' );
a2l_par('KINP_ECMTqSource_enum_srvcflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_ECMTqSource_enum_srvcval', 	'enum', 	0, 	255, 	'uint8', 	'' );
a2l_par('KINP_ESCBrakeStatus_enum_defval', 	'enum', 	0, 	255, 	'uint8', 	'' );
a2l_par('KINP_ESCBrakeStatus_enum_invalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_ESCBrakeStatus_enum_setvalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_ESCBrakeStatus_enum_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_ESCBrakeStatus_enum_ovrdval', 	'enum', 	0, 	255, 	'uint8', 	'' );
a2l_par('KINP_ESCBrakeStatus_enum_srvcflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_ESCBrakeStatus_enum_srvcval', 	'enum', 	0, 	255, 	'uint8', 	'' );
a2l_par('KINP_ESCExtnBrkAvailable_flg_defval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_ESCExtnBrkAvailable_flg_invalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_ESCExtnBrkAvailable_flg_setvalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_ESCExtnBrkAvailable_flg_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_ESCExtnBrkAvailable_flg_ovrdval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_ESCExtnBrkAvailable_flg_srvcflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_ESCExtnBrkAvailable_flg_srvcval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_ESCBattVolt_V_gain', 	'rat', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_ESCBattVolt_V_offset', 	'V', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_ESCBattVolt_V_defval', 	'V', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_ESCBattVolt_V_invalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_ESCBattVolt_V_setvalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_ESCBattVolt_V_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_ESCBattVolt_V_ovrdval', 	'V', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_ESCBattVolt_V_srvcflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_ESCBattVolt_V_srvcval', 	'V', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_ESCBattVolt_V_maxval', 	'V', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_ESCBattVolt_V_minval', 	'V', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_HWAccelPedalPosn_pct_gain', 	'rat', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_HWAccelPedalPosn_pct_offset', 	'pct', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_HWAccelPedalPosn_pct_defval', 	'pct', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_HWAccelPedalPosn_pct_invalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_HWAccelPedalPosn_pct_setvalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_HWAccelPedalPosn_pct_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_HWAccelPedalPosn_pct_ovrdval', 	'pct', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_HWAccelPedalPosn_pct_srvcflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_HWAccelPedalPosn_pct_srvcval', 	'pct', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_HWAccelPedalPosn_pct_maxval', 	'pct', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_HWAccelPedalPosn_pct_minval', 	'pct', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_CurDriverTqReq_Nm_gain', 	'rat', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_CurDriverTqReq_Nm_offset', 	'Nm', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_CurDriverTqReq_Nm_defval', 	'Nm', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_CurDriverTqReq_Nm_invalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CurDriverTqReq_Nm_setvalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CurDriverTqReq_Nm_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CurDriverTqReq_Nm_ovrdval', 	'Nm', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_CurDriverTqReq_Nm_srvcflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CurDriverTqReq_Nm_srvcval', 	'Nm', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_CurDriverTqReq_Nm_maxval', 	'Nm', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_CurDriverTqReq_Nm_minval', 	'Nm', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_HCUMILReq_flg_defval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_HCUMILReq_flg_invalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_HCUMILReq_flg_setvalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_HCUMILReq_flg_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_HCUMILReq_flg_ovrdval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_HCUMILReq_flg_srvcflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_HCUMILReq_flg_srvcval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_ACCOnVCU_flg_defval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_ACCOnVCU_flg_invalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_ACCOnVCU_flg_setvalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_ACCOnVCU_flg_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_ACCOnVCU_flg_ovrdval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_ACCOnVCU_flg_srvcflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_ACCOnVCU_flg_srvcval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_ACCResSpdIncVCU_flg_defval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_ACCResSpdIncVCU_flg_invalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_ACCResSpdIncVCU_flg_setvalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_ACCResSpdIncVCU_flg_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_ACCResSpdIncVCU_flg_ovrdval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_ACCResSpdIncVCU_flg_srvcflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_ACCResSpdIncVCU_flg_srvcval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_ACCSetSpdDecVCU_flg_defval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_ACCSetSpdDecVCU_flg_invalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_ACCSetSpdDecVCU_flg_setvalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_ACCSetSpdDecVCU_flg_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_ACCSetSpdDecVCU_flg_ovrdval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_ACCSetSpdDecVCU_flg_srvcflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_ACCSetSpdDecVCU_flg_srvcval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_ACCTimeGapIncVCU_flg_defval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_ACCTimeGapIncVCU_flg_invalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_ACCTimeGapIncVCU_flg_setvalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_ACCTimeGapIncVCU_flg_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_ACCTimeGapIncVCU_flg_ovrdval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_ACCTimeGapIncVCU_flg_srvcflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_ACCTimeGapIncVCU_flg_srvcval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_ACCTimeGapDecVCU_flg_defval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_ACCTimeGapDecVCU_flg_invalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_ACCTimeGapDecVCU_flg_setvalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_ACCTimeGapDecVCU_flg_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_ACCTimeGapDecVCU_flg_ovrdval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_ACCTimeGapDecVCU_flg_srvcflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_ACCTimeGapDecVCU_flg_srvcval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_LFCOnVCU_flg_defval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_LFCOnVCU_flg_invalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_LFCOnVCU_flg_setvalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_LFCOnVCU_flg_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_LFCOnVCU_flg_ovrdval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_LFCOnVCU_flg_srvcflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_LFCOnVCU_flg_srvcval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_MSAOnVCU_flg_defval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_MSAOnVCU_flg_invalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_MSAOnVCU_flg_setvalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_MSAOnVCU_flg_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_MSAOnVCU_flg_ovrdval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_MSAOnVCU_flg_srvcflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_MSAOnVCU_flg_srvcval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_LaneQualityL_enum_defval', 	'enum', 	0, 	255, 	'uint8', 	'' );
a2l_par('KINP_LaneQualityL_enum_invalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_LaneQualityL_enum_setvalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_LaneQualityL_enum_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_LaneQualityL_enum_ovrdval', 	'enum', 	0, 	255, 	'uint8', 	'' );
a2l_par('KINP_LaneQualityL_enum_srvcflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_LaneQualityL_enum_srvcval', 	'enum', 	0, 	255, 	'uint8', 	'' );
a2l_par('KINP_LaneTypeL_enum_defval', 	'enum', 	0, 	255, 	'uint8', 	'' );
a2l_par('KINP_LaneTypeL_enum_invalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_LaneTypeL_enum_setvalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_LaneTypeL_enum_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_LaneTypeL_enum_ovrdval', 	'enum', 	0, 	255, 	'uint8', 	'' );
a2l_par('KINP_LaneTypeL_enum_srvcflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_LaneTypeL_enum_srvcval', 	'enum', 	0, 	255, 	'uint8', 	'' );
a2l_par('KINP_LaneMrkClrL_enum_defval', 	'enum', 	0, 	255, 	'uint8', 	'' );
a2l_par('KINP_LaneMrkClrL_enum_invalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_LaneMrkClrL_enum_setvalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_LaneMrkClrL_enum_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_LaneMrkClrL_enum_ovrdval', 	'enum', 	0, 	255, 	'uint8', 	'' );
a2l_par('KINP_LaneMrkClrL_enum_srvcflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_LaneMrkClrL_enum_srvcval', 	'enum', 	0, 	255, 	'uint8', 	'' );
a2l_par('KINP_LaneQualityR_enum_defval', 	'enum', 	0, 	255, 	'uint8', 	'' );
a2l_par('KINP_LaneQualityR_enum_invalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_LaneQualityR_enum_setvalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_LaneQualityR_enum_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_LaneQualityR_enum_ovrdval', 	'enum', 	0, 	255, 	'uint8', 	'' );
a2l_par('KINP_LaneQualityR_enum_srvcflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_LaneQualityR_enum_srvcval', 	'enum', 	0, 	255, 	'uint8', 	'' );
a2l_par('KINP_LaneTypeR_enum_defval', 	'enum', 	0, 	255, 	'uint8', 	'' );
a2l_par('KINP_LaneTypeR_enum_invalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_LaneTypeR_enum_setvalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_LaneTypeR_enum_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_LaneTypeR_enum_ovrdval', 	'enum', 	0, 	255, 	'uint8', 	'' );
a2l_par('KINP_LaneTypeR_enum_srvcflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_LaneTypeR_enum_srvcval', 	'enum', 	0, 	255, 	'uint8', 	'' );
a2l_par('KINP_LaneMrkClrR_enum_defval', 	'enum', 	0, 	255, 	'uint8', 	'' );
a2l_par('KINP_LaneMrkClrR_enum_invalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_LaneMrkClrR_enum_setvalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_LaneMrkClrR_enum_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_LaneMrkClrR_enum_ovrdval', 	'enum', 	0, 	255, 	'uint8', 	'' );
a2l_par('KINP_LaneMrkClrR_enum_srvcflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_LaneMrkClrR_enum_srvcval', 	'enum', 	0, 	255, 	'uint8', 	'' );
a2l_par('KINP_LaneC0L_m_gain', 	'rat', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_LaneC0L_m_offset', 	'm', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_LaneC0L_m_defval', 	'm', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_LaneC0L_m_invalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_LaneC0L_m_setvalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_LaneC0L_m_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_LaneC0L_m_ovrdval', 	'm', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_LaneC0L_m_srvcflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_LaneC0L_m_srvcval', 	'm', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_LaneC0L_m_maxval', 	'm', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_LaneC0L_m_minval', 	'm', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_LaneC1L_rad_gain', 	'rat', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_LaneC1L_rad_offset', 	'rad', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_LaneC1L_rad_defval', 	'rad', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_LaneC1L_rad_invalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_LaneC1L_rad_setvalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_LaneC1L_rad_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_LaneC1L_rad_ovrdval', 	'rad', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_LaneC1L_rad_srvcflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_LaneC1L_rad_srvcval', 	'rad', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_LaneC1L_rad_maxval', 	'rad', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_LaneC1L_rad_minval', 	'rad', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_LaneC2L_rat_gain', 	'rat', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_LaneC2L_rat_offset', 	'rat', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_LaneC2L_rat_defval', 	'rat', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_LaneC2L_rat_invalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_LaneC2L_rat_setvalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_LaneC2L_rat_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_LaneC2L_rat_ovrdval', 	'rat', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_LaneC2L_rat_srvcflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_LaneC2L_rat_srvcval', 	'rat', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_LaneC2L_rat_maxval', 	'rat', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_LaneC2L_rat_minval', 	'rat', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_LaneC3L_rat_gain', 	'rat', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_LaneC3L_rat_offset', 	'rat', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_LaneC3L_rat_defval', 	'rat', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_LaneC3L_rat_invalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_LaneC3L_rat_setvalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_LaneC3L_rat_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_LaneC3L_rat_ovrdval', 	'rat', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_LaneC3L_rat_srvcflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_LaneC3L_rat_srvcval', 	'rat', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_LaneC3L_rat_maxval', 	'rat', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_LaneC3L_rat_minval', 	'rat', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_LaneC0R_m_gain', 	'rat', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_LaneC0R_m_offset', 	'm', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_LaneC0R_m_defval', 	'm', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_LaneC0R_m_invalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_LaneC0R_m_setvalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_LaneC0R_m_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_LaneC0R_m_ovrdval', 	'm', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_LaneC0R_m_srvcflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_LaneC0R_m_srvcval', 	'm', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_LaneC0R_m_maxval', 	'm', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_LaneC0R_m_minval', 	'm', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_LaneC1R_rad_gain', 	'rat', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_LaneC1R_rad_offset', 	'rad', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_LaneC1R_rad_defval', 	'rad', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_LaneC1R_rad_invalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_LaneC1R_rad_setvalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_LaneC1R_rad_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_LaneC1R_rad_ovrdval', 	'rad', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_LaneC1R_rad_srvcflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_LaneC1R_rad_srvcval', 	'rad', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_LaneC1R_rad_maxval', 	'rad', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_LaneC1R_rad_minval', 	'rad', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_LaneC2R_rat_gain', 	'rat', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_LaneC2R_rat_offset', 	'rat', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_LaneC2R_rat_defval', 	'rat', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_LaneC2R_rat_invalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_LaneC2R_rat_setvalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_LaneC2R_rat_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_LaneC2R_rat_ovrdval', 	'rat', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_LaneC2R_rat_srvcflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_LaneC2R_rat_srvcval', 	'rat', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_LaneC2R_rat_maxval', 	'rat', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_LaneC2R_rat_minval', 	'rat', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_LaneC3R_rat_gain', 	'rat', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_LaneC3R_rat_offset', 	'rat', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_LaneC3R_rat_defval', 	'rat', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_LaneC3R_rat_invalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_LaneC3R_rat_setvalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_LaneC3R_rat_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_LaneC3R_rat_ovrdval', 	'rat', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_LaneC3R_rat_srvcflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_LaneC3R_rat_srvcval', 	'rat', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_LaneC3R_rat_maxval', 	'rat', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_LaneC3R_rat_minval', 	'rat', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_LaneMrkWidL_m_gain', 	'rat', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_LaneMrkWidL_m_offset', 	'm', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_LaneMrkWidL_m_defval', 	'm', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_LaneMrkWidL_m_invalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_LaneMrkWidL_m_setvalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_LaneMrkWidL_m_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_LaneMrkWidL_m_ovrdval', 	'm', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_LaneMrkWidL_m_srvcflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_LaneMrkWidL_m_srvcval', 	'm', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_LaneMrkWidL_m_maxval', 	'm', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_LaneMrkWidL_m_minval', 	'm', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_LaneMrkWidR_m_gain', 	'rat', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_LaneMrkWidR_m_offset', 	'm', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_LaneMrkWidR_m_defval', 	'm', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_LaneMrkWidR_m_invalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_LaneMrkWidR_m_setvalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_LaneMrkWidR_m_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_LaneMrkWidR_m_ovrdval', 	'm', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_LaneMrkWidR_m_srvcflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_LaneMrkWidR_m_srvcval', 	'm', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_LaneMrkWidR_m_maxval', 	'm', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_LaneMrkWidR_m_minval', 	'm', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_ViewRangeStartL_m_gain', 	'rat', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_ViewRangeStartL_m_offset', 	'm', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_ViewRangeStartL_m_defval', 	'm', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_ViewRangeStartL_m_invalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_ViewRangeStartL_m_setvalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_ViewRangeStartL_m_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_ViewRangeStartL_m_ovrdval', 	'm', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_ViewRangeStartL_m_srvcflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_ViewRangeStartL_m_srvcval', 	'm', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_ViewRangeStartL_m_maxval', 	'm', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_ViewRangeStartL_m_minval', 	'm', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_ViewRangeStartR_m_gain', 	'rat', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_ViewRangeStartR_m_offset', 	'm', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_ViewRangeStartR_m_defval', 	'm', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_ViewRangeStartR_m_invalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_ViewRangeStartR_m_setvalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_ViewRangeStartR_m_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_ViewRangeStartR_m_ovrdval', 	'm', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_ViewRangeStartR_m_srvcflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_ViewRangeStartR_m_srvcval', 	'm', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_ViewRangeStartR_m_maxval', 	'm', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_ViewRangeStartR_m_minval', 	'm', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_TLCL_s_gain', 	'rat', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_TLCL_s_offset', 	'sec', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_TLCL_s_defval', 	'sec', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_TLCL_s_invalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_TLCL_s_setvalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_TLCL_s_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_TLCL_s_ovrdval', 	'sec', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_TLCL_s_srvcflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_TLCL_s_srvcval', 	'sec', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_TLCL_s_maxval', 	'sec', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_TLCL_s_minval', 	'sec', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_TLCR_s_gain', 	'rat', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_TLCR_s_offset', 	'sec', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_TLCR_s_defval', 	'sec', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_TLCR_s_invalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_TLCR_s_setvalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_TLCR_s_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_TLCR_s_ovrdval', 	'sec', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_TLCR_s_srvcflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_TLCR_s_srvcval', 	'sec', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_TLCR_s_maxval', 	'sec', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_TLCR_s_minval', 	'sec', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_LaneCrosL_flg_defval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_LaneCrosL_flg_invalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_LaneCrosL_flg_setvalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_LaneCrosL_flg_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_LaneCrosL_flg_ovrdval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_LaneCrosL_flg_srvcflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_LaneCrosL_flg_srvcval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_LaneCrosR_flg_defval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_LaneCrosR_flg_invalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_LaneCrosR_flg_setvalid', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_LaneCrosR_flg_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_LaneCrosR_flg_ovrdval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_LaneCrosR_flg_srvcflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_LaneCrosR_flg_srvcval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_IgnitionVolt_V_limupr', 	'V', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_IgnitionVolt_V_limlow', 	'V', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_IgnitionVolt_V_tcfilt', 	's', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_IgnitionVolt_V_defval', 	'V', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_IgnitionVolt_V_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_IgnitionVolt_V_ovrdval', 	'V', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_IgnitionVolt_V_srvcflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_IgnitionVolt_V_srvcval', 	'V', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_BatteryVolt_V_limupr', 	'V', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_BatteryVolt_V_limlow', 	'V', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_BatteryVolt_V_tcfilt', 	's', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_BatteryVolt_V_defval', 	'V', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_BatteryVolt_V_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_BatteryVolt_V_ovrdval', 	'V', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_BatteryVolt_V_srvcflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_BatteryVolt_V_srvcval', 	'V', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_IgnitionActiveVolt_V', 	'V', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_SteerSpeedCalRate_s', 	's', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_SteerSpeedFltConst_s', 	's', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KINP_ABSCANCommuOk_flg_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_ABSCANCommuOk_flg_ovrdval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_BCMCANCommuOk_flg_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_BCMCANCommuOk_flg_ovrdval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_ECMCANCommuOk_flg_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_ECMCANCommuOk_flg_ovrdval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_TCMCANCommuOk_flg_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_TCMCANCommuOk_flg_ovrdval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_EPSCANCommuOk_flg_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_EPSCANCommuOk_flg_ovrdval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_METERCANCommuOk_flg_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_METERCANCommuOk_flg_ovrdval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_ACCANCommuOk_flg_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_ACCANCommuOk_flg_ovrdval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_EPBCANCommuOk_flg_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_EPBCANCommuOk_flg_ovrdval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_VCUCANCommuOk_flg_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_VCUCANCommuOk_flg_ovrdval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_HMICANCommuOk_flg_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_HMICANCommuOk_flg_ovrdval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CSWCANCommuOk_flg_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CSWCANCommuOk_flg_ovrdval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_EPMCANCommuOk_flg_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_EPMCANCommuOk_flg_ovrdval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_ABSCANAlive_flg_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_ABSCANAlive_flg_ovrdval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_BCMCANAlive_flg_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_BCMCANAlive_flg_ovrdval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_ECMCANAlive_flg_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_ECMCANAlive_flg_ovrdval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_TCMCANAlive_flg_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_TCMCANAlive_flg_ovrdval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_EPSCANAlive_flg_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_EPSCANAlive_flg_ovrdval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_METERCANAlive_flg_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_METERCANAlive_flg_ovrdval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_ACCANAlive_flg_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_ACCANAlive_flg_ovrdval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_EPBCANAlive_flg_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_EPBCANAlive_flg_ovrdval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_VCUCANAlive_flg_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_VCUCANAlive_flg_ovrdval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_HMICANAlive_flg_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_HMICANAlive_flg_ovrdval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CSWCANAlive_flg_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CSWCANAlive_flg_ovrdval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_EPMCANAlive_flg_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_EPMCANAlive_flg_ovrdval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_ABS1CANCommuOk_flg_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_ABS1CANCommuOk_flg_ovrdval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_ABS2CANCommuOk_flg_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_ABS2CANCommuOk_flg_ovrdval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_ABS3CANCommuOk_flg_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_ABS3CANCommuOk_flg_ovrdval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_ABS4CANCommuOk_flg_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_ABS4CANCommuOk_flg_ovrdval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_BCM1CANCommuOk_flg_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_BCM1CANCommuOk_flg_ovrdval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_BCM2CANCommuOk_flg_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_BCM2CANCommuOk_flg_ovrdval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_ECM1CANCommuOk_flg_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_ECM1CANCommuOk_flg_ovrdval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_ECM2CANCommuOk_flg_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_ECM2CANCommuOk_flg_ovrdval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_ECM3CANCommuOk_flg_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_ECM3CANCommuOk_flg_ovrdval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_ECM9CANCommuOk_flg_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_ECM9CANCommuOk_flg_ovrdval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_TCM1CANCommuOk_flg_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_TCM1CANCommuOk_flg_ovrdval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_TCM2CANCommuOk_flg_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_TCM2CANCommuOk_flg_ovrdval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_SAS1CANCommuOk_flg_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_SAS1CANCommuOk_flg_ovrdval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_EPAS1CANCommuOk_flg_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_EPAS1CANCommuOk_flg_ovrdval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_EPAS2CANCommuOk_flg_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_EPAS2CANCommuOk_flg_ovrdval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_EPAS3CANCommuOk_flg_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_EPAS3CANCommuOk_flg_ovrdval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_METER1CANCommuOk_flg_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_METER1CANCommuOk_flg_ovrdval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_METER3CANCommuOk_flg_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_METER3CANCommuOk_flg_ovrdval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_AC1CANCommuOk_flg_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_AC1CANCommuOk_flg_ovrdval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_EPB1CANCommuOk_flg_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_EPB1CANCommuOk_flg_ovrdval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_VCU1CANCommuOk_flg_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_VCU1CANCommuOk_flg_ovrdval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_VCU2CANCommuOk_flg_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_VCU2CANCommuOk_flg_ovrdval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_HCU3CANCommuOk_flg_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_HCU3CANCommuOk_flg_ovrdval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_HCU4CANCommuOk_flg_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_HCU4CANCommuOk_flg_ovrdval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_HMI2CANCommuOk_flg_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_HMI2CANCommuOk_flg_ovrdval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_HMI1CANCommuOk_flg_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_HMI1CANCommuOk_flg_ovrdval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CSW1CANCommuOk_flg_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CSW1CANCommuOk_flg_ovrdval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_EPM1CANCommuOk_flg_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_EPM1CANCommuOk_flg_ovrdval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_EPM2CANCommuOk_flg_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_EPM2CANCommuOk_flg_ovrdval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_EPM3CANCommuOk_flg_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_EPM3CANCommuOk_flg_ovrdval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_EPM4CANCommuOk_flg_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_EPM4CANCommuOk_flg_ovrdval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_EPM5CANCommuOk_flg_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_EPM5CANCommuOk_flg_ovrdval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_EPM6CANCommuOk_flg_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_EPM6CANCommuOk_flg_ovrdval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_EPM7CANCommuOk_flg_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_EPM7CANCommuOk_flg_ovrdval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_EPM8CANCommuOk_flg_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_EPM8CANCommuOk_flg_ovrdval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_EPM9CANCommuOk_flg_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_EPM9CANCommuOk_flg_ovrdval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_EPM10CANCommuOk_flg_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_EPM10CANCommuOk_flg_ovrdval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_EPM11CANCommuOk_flg_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_EPM11CANCommuOk_flg_ovrdval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_EPM12CANCommuOk_flg_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_EPM12CANCommuOk_flg_ovrdval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_EPM13CANCommuOk_flg_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_EPM13CANCommuOk_flg_ovrdval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_EPM14CANCommuOk_flg_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_EPM14CANCommuOk_flg_ovrdval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_EPM15CANCommuOk_flg_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_EPM15CANCommuOk_flg_ovrdval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_EPM16CANCommuOk_flg_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_EPM16CANCommuOk_flg_ovrdval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_EPM17CANCommuOk_flg_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_EPM17CANCommuOk_flg_ovrdval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_EPM18CANCommuOk_flg_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_EPM18CANCommuOk_flg_ovrdval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_EPM19CANCommuOk_flg_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_EPM19CANCommuOk_flg_ovrdval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_EPM20CANCommuOk_flg_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_EPM20CANCommuOk_flg_ovrdval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_EPM21CANCommuOk_flg_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_EPM21CANCommuOk_flg_ovrdval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_EPM22CANCommuOk_flg_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_EPM22CANCommuOk_flg_ovrdval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_EPM23CANCommuOk_flg_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_EPM23CANCommuOk_flg_ovrdval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_EPM24CANCommuOk_flg_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_EPM24CANCommuOk_flg_ovrdval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_EPM25CANCommuOk_flg_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_EPM25CANCommuOk_flg_ovrdval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_EPM26CANCommuOk_flg_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_EPM26CANCommuOk_flg_ovrdval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_EPM27CANCommuOk_flg_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_EPM27CANCommuOk_flg_ovrdval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_EPM28CANCommuOk_flg_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_EPM28CANCommuOk_flg_ovrdval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_EPM29CANCommuOk_flg_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_EPM29CANCommuOk_flg_ovrdval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_EPM30CANCommuOk_flg_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_EPM30CANCommuOk_flg_ovrdval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_EPM31CANCommuOk_flg_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_EPM31CANCommuOk_flg_ovrdval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_EPM32CANCommuOk_flg_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_EPM32CANCommuOk_flg_ovrdval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_EPM33CANCommuOk_flg_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_EPM33CANCommuOk_flg_ovrdval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_EPM34CANCommuOk_flg_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_EPM34CANCommuOk_flg_ovrdval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_EPM35CANCommuOk_flg_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_EPM35CANCommuOk_flg_ovrdval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CamLeftLaneRecvOk_flg_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CamLeftLaneRecvOk_flg_ovrdval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CamRightLaneRecvOk_flg_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CamRightLaneRecvOk_flg_ovrdval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CamObs1RecvOk_flg_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CamObs1RecvOk_flg_ovrdval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CamObs2RecvOk_flg_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CamObs2RecvOk_flg_ovrdval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CamObs3RecvOk_flg_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CamObs3RecvOk_flg_ovrdval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CamObs4RecvOk_flg_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CamObs4RecvOk_flg_ovrdval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CamObs5RecvOk_flg_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CamObs5RecvOk_flg_ovrdval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CamObs6RecvOk_flg_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CamObs6RecvOk_flg_ovrdval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CamObs7RecvOk_flg_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CamObs7RecvOk_flg_ovrdval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CamObs8RecvOk_flg_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CamObs8RecvOk_flg_ovrdval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CamObs9RecvOk_flg_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CamObs9RecvOk_flg_ovrdval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CamObs10RecvOk_flg_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CamObs10RecvOk_flg_ovrdval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_ABSCANValidOk_flg_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_ABSCANValidOk_flg_ovrdval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_BCMCANValidOk_flg_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_BCMCANValidOk_flg_ovrdval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_ECMCANValidOk_flg_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_ECMCANValidOk_flg_ovrdval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_TCMCANValidOk_flg_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_TCMCANValidOk_flg_ovrdval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_EPSCANValidOk_flg_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_EPSCANValidOk_flg_ovrdval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_METERCANValidOk_flg_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_METERCANValidOk_flg_ovrdval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_ACCANValidOk_flg_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_ACCANValidOk_flg_ovrdval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_EPBCANValidOk_flg_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_EPBCANValidOk_flg_ovrdval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_VCUCANValidOk_flg_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_VCUCANValidOk_flg_ovrdval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_HMICANValidOk_flg_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_HMICANValidOk_flg_ovrdval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CSWCANValidOk_flg_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CSWCANValidOk_flg_ovrdval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_EPMCANValidOk_flg_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_EPMCANValidOk_flg_ovrdval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_ABS1CANRolCntOk_flg_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_ABS1CANRolCntOk_flg_ovrdval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_ABS2CANRolCntOk_flg_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_ABS2CANRolCntOk_flg_ovrdval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_ECM9CANRolCntOk_flg_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_ECM9CANRolCntOk_flg_ovrdval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_SAS1CANRolCntOk_flg_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_SAS1CANRolCntOk_flg_ovrdval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_EPAS2CANRolCntOk_flg_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_EPAS2CANRolCntOk_flg_ovrdval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_EPAS3CANRolCntOk_flg_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_EPAS3CANRolCntOk_flg_ovrdval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_VCU1CANRolCntOk_flg_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_VCU1CANRolCntOk_flg_ovrdval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_VCU2CANRolCntOk_flg_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_VCU2CANRolCntOk_flg_ovrdval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_HCU3CANRolCntOk_flg_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_HCU3CANRolCntOk_flg_ovrdval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_ABS2CANChkSumOk_flg_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_ABS2CANChkSumOk_flg_ovrdval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_SAS1CANChkSumOk_flg_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_SAS1CANChkSumOk_flg_ovrdval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_EPAS2CANChkSumOk_flg_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_EPAS2CANChkSumOk_flg_ovrdval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_EPAS3CANChkSumOk_flg_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_EPAS3CANChkSumOk_flg_ovrdval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_VCU1CANChkSumOk_flg_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_VCU1CANChkSumOk_flg_ovrdval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_VCU2CANChkSumOk_flg_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_VCU2CANChkSumOk_flg_ovrdval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANAPPSigOk_flg_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANAPPSigOk_flg_ovrdval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANEffAPPSigOk_flg_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANEffAPPSigOk_flg_ovrdval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANEngSpdSigOk_flg_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANEngSpdSigOk_flg_ovrdval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANEngTqFricSigOk_flg_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANEngTqFricSigOk_flg_ovrdval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANEngTqIndSigOk_flg_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANEngTqIndSigOk_flg_ovrdval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANEngTqIndCORSigOk_flg_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANEngTqIndCORSigOk_flg_ovrdval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANEngTqMaxSigOk_flg_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANEngTqMaxSigOk_flg_ovrdval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANEngTqMinSigOk_flg_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANEngTqMinSigOk_flg_ovrdval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANBrkLampOnSigOk_flg_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANBrkLampOnSigOk_flg_ovrdval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANVehSpdSigOk_flg_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANVehSpdSigOk_flg_ovrdval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANYawRateSigOk_flg_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANYawRateSigOk_flg_ovrdval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANLatAccelSigOk_flg_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANLatAccelSigOk_flg_ovrdval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANLongAccelSigOk_flg_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANLongAccelSigOk_flg_ovrdval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMCPressureSigOk_flg_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMCPressureSigOk_flg_ovrdval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANSurfGradeSigOk_flg_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANSurfGradeSigOk_flg_ovrdval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANBrakBoostPresSigOk_flg_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANBrakBoostPresSigOk_flg_ovrdval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANLFWhlSpdSigOk_flg_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANLFWhlSpdSigOk_flg_ovrdval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANLRWhlSpdSigOk_flg_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANLRWhlSpdSigOk_flg_ovrdval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANRFWhlSpdSigOk_flg_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANRFWhlSpdSigOk_flg_ovrdval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANRRWhlSpdSigOk_flg_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANRRWhlSpdSigOk_flg_ovrdval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANStrAngSigOk_flg_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANStrAngSigOk_flg_ovrdval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANStrSpdSigOk_flg_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANStrSpdSigOk_flg_ovrdval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANRelStrAngSigOk_flg_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANRelStrAngSigOk_flg_ovrdval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANStrTorqSigOk_flg_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANStrTorqSigOk_flg_ovrdval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANAckCurStrAngReqSigOk_flg_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANAckCurStrAngReqSigOk_flg_ovrdval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANAckCurStrTqReqSigOk_flg_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANAckCurStrTqReqSigOk_flg_ovrdval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANEPSBattVoltSigOk_flg_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANEPSBattVoltSigOk_flg_ovrdval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANVehCrashdSigOk_flg_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANVehCrashdSigOk_flg_ovrdval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANShftPosnSigSigOk_flg_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANShftPosnSigOk_flg_ovrdval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANNowGearPosnSigOk_flg_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANNowGearPosnSigOk_flg_ovrdval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANTMTurbSpdSigOk_flg_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANTMTurbSpdSigOk_flg_ovrdval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANOdoMeterSigOk_flg_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANOdoMeterSigOk_flg_ovrdval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMeterVehSpdSigOk_flg_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANMeterVehSpdSigOk_flg_ovrdval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANOutsideTempSigOk_flg_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANOutsideTempSigOk_flg_ovrdval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANParkBrakBindStaSigOk_flg_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANParkBrakBindStaSigOk_flg_ovrdval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANAckCurBrakDecReqSigOk_flg_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANAckCurBrakDecReqSigOk_flg_ovrdval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANAckCurPTTqReqSigOk_flg_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANAckCurPTTqReqSigOk_flg_ovrdval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANAckCurVehDecSigOk_flg_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANAckCurVehDecSigOk_flg_ovrdval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANDriverBrakPedalOnSigOk_flg_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANDriverBrakPedalOnSigOk_flg_ovrdval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANESCBattVoltSigOk_flg_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANESCBattVoltSigOk_flg_ovrdval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANHWAPPSigOk_flg_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANHWAPPSigOk_flg_ovrdval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANCurDriverTqReqSigOk_flg_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_CANCurDriverTqReqSigOk_flg_ovrdval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_IgnVoltRangHighOk_flg_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_IgnVoltRangHighOk_flg_ovrdval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_IgnVoltRangLowOk_flg_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_IgnVoltRangLowOk_flg_ovrdval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_BattVoltRangHighOk_flg_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_BattVoltRangHighOk_flg_ovrdval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_BattVoltRangLowOk_flg_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_BattVoltRangLowOk_flg_ovrdval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_ADCOk_flg_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_ADCOk_flg_ovrdval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_EEPROMOk_flg_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_EEPROMOk_flg_ovrdval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_RAMOk_flg_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_RAMOk_flg_ovrdval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_ROMOk_flg_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_ROMOk_flg_ovrdval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_VREF1Ok_flg_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_VREF1Ok_flg_ovrdval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_VREF2Ok_flg_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_VREF2Ok_flg_ovrdval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KINP_StrRate_Threshold', 	'radps', 	0, 	100, 	'single', 	'' );

%% Monitored Signals
% Module Signals %
a2l_mon('VINP_CANMsgValidABS1_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_CANMsgABS1CommuOk_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_CANMsgValidABS2_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_CANMsgABS2CommuOk_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_CANMsgValidABS3_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_CANMsgABS3CommuOk_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_CANMsgValidABS4_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_CANMsgABS4CommuOk_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_CANMsgValidECM1_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_CANMsgECM1CommuOk_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_CANMsgValidECM2_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_CANMsgECM2CommuOk_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_CANMsgValidECM3_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_CANMsgECM3CommuOk_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_CANMsgValidECM9_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_CANMsgECM9CommuOk_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_CANMsgValidTCM1_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_CANMsgTCM1CommuOk_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_CANMsgValidTCM2_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_CANMsgTCM2CommuOk_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_CANMsgValidSAS1_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_CANMsgSAS1CommuOk_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_CANMsgValidEPAS1_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_CANMsgEPAS1CommuOk_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_CANMsgValidEPAS2_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_CANMsgEPAS2CommuOk_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_CANMsgValidEPAS3_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_CANMsgEPAS3CommuOk_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_CANMsgValidBCM1_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_CANMsgBCM1CommuOk_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_CANMsgValidBCM2_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_CANMsgBCM2CommuOk_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_CANMsgValidMETER1_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_CANMsgMETER1CommuOk_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_CANMsgValidMETER3_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_CANMsgMETER3CommuOk_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_CANMsgValidAC1_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_CANMsgAC1CommuOk_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_CANMsgValidEPB1_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_CANMsgEPB1CommuOk_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_CANMsgValidVCU1_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_CANMsgVCU1CommuOk_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_CANMsgValidVCU2_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_CANMsgVCU2CommuOk_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_CANMsgValidHCU3_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_CANMsgHCU3CommuOk_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_CANMsgValidHCU4_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_CANMsgHCU4CommuOk_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_CANMsgValidHMI2_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_CANMsgHMI2CommuOk_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_CANMsgValidHMI1_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_CANMsgHMI1CommuOk_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_CANMsgValidCSW1_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_CANMsgCSW1CommuOk_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_CANMsgValidEPM1_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_CANMsgEPM1CommuOk_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_CANMsgValidEPM2_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_CANMsgEPM2CommuOk_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_CANMsgValidEPM3_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_CANMsgEPM3CommuOk_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_CANMsgValidEPM4_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_CANMsgEPM4CommuOk_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_CANMsgValidEPM5_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_CANMsgEPM5CommuOk_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_CANMsgValidEPM6_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_CANMsgEPM6CommuOk_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_CANMsgValidEPM7_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_CANMsgEPM7CommuOk_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_CANMsgValidEPM8_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_CANMsgEPM8CommuOk_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_CANMsgValidEPM9_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_CANMsgEPM9CommuOk_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_CANMsgValidEPM10_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_CANMsgEPM10CommuOk_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_CANMsgValidEPM11_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_CANMsgEPM11CommuOk_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_CANMsgValidEPM12_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_CANMsgEPM12CommuOk_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_CANMsgValidEPM13_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_CANMsgEPM13CommuOk_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_CANMsgValidEPM14_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_CANMsgEPM14CommuOk_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_CANMsgValidEPM15_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_CANMsgEPM15CommuOk_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_CANMsgValidEPM16_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_CANMsgEPM16CommuOk_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_CANMsgValidEPM17_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_CANMsgEPM17CommuOk_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_CANMsgValidEPM18_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_CANMsgEPM18CommuOk_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_CANMsgValidEPM19_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_CANMsgEPM19CommuOk_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_CANMsgValidEPM20_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_CANMsgEPM20CommuOk_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_CANMsgValidEPM21_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_CANMsgEPM21CommuOk_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_CANMsgValidEPM22_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_CANMsgEPM22CommuOk_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_CANMsgValidEPM23_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_CANMsgEPM23CommuOk_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_CANMsgValidEPM24_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_CANMsgEPM24CommuOk_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_CANMsgValidEPM25_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_CANMsgEPM25CommuOk_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_CANMsgValidEPM26_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_CANMsgEPM26CommuOk_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_CANMsgValidEPM27_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_CANMsgEPM27CommuOk_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_CANMsgValidEPM28_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_CANMsgEPM28CommuOk_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_CANMsgValidEPM29_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_CANMsgEPM29CommuOk_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_CANMsgValidEPM30_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_CANMsgEPM30CommuOk_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_CANMsgValidEPM31_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_CANMsgEPM31CommuOk_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_CANMsgValidEPM32_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_CANMsgEPM32CommuOk_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_CANMsgValidEPM33_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_CANMsgEPM33CommuOk_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_CANMsgValidEPM34_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_CANMsgEPM34CommuOk_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_CANMsgValidEPM35_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_CANMsgEPM35CommuOk_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_CamLeftLaneReceiveValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_CamLeftLaneReceiveOk_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_CamRightLaneReceiveValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_CamRightLaneReceiveOk_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_CamObs1ReceiveValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_CamObs1ReceiveOk_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_CamObs2ReceiveValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_CamObs2ReceiveOk_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_CamObs3ReceiveValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_CamObs3ReceiveOk_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_CamObs4ReceiveValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_CamObs4ReceiveOk_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_CamObs5ReceiveValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_CamObs5ReceiveOk_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_CamObs6ReceiveValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_CamObs6ReceiveOk_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_CamObs7ReceiveValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_CamObs7ReceiveOk_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_CamObs8ReceiveValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_CamObs8ReceiveOk_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_CamObs9ReceiveValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_CamObs9ReceiveOk_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_CamObs10ReceiveValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_CamObs10ReceiveOk_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_CANMsgUpdatedECM9_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_CANMsgECM9RolCntOk_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_CANMsgUpdatedABS1_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_CANMsgABS1RolCntOk_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_CANMsgUpdatedABS2_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_CANMsgABS2RolCntOk_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_CANMsgUpdatedSAS1_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_CANMsgSAS1RolCntOk_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_CANMsgUpdatedEPAS2_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_CANMsgEPAS2RolCntOk_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_CANMsgUpdatedEPAS3_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_CANMsgEPAS3RolCntOk_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_CANMsgUpdatedVCU1_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_CANMsgVCU1RolCntOk_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_CANMsgUpdatedVCU2_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_CANMsgVCU2RolCntOk_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_CANMsgUpdatedHCU3_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_CANMsgHCU3RolCntOk_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_CANMsgCheckedABS2_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_CANMsgABS2ChkSumOk_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_CANMsgCheckedSAS1_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_CANMsgSAS1ChkSumOk_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_CANMsgCheckedEPAS2_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_CANMsgEPAS2ChkSumOk_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_CANMsgCheckedEPAS3_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_CANMsgEPAS3ChkSumOk_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_CANMsgCheckedVCU1_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_CANMsgVCU1ChkSumOk_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_CANMsgCheckedVCU2_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_CANMsgVCU2ChkSumOk_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_SteerSpeedUnFlt_degps', 	'degps', 	-1000000, 	1000000, 	'single', 	'',	1 );
a2l_mon('VINP_ABSCANCommuFault_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_BCMCANCommuFault_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_ECMCANCommuFault_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_TCMCANCommuFault_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_EPSCANCommuFault_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_METERCANCommuFault_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_ACCANCommuFault_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_EPBCANCommuFault_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_VCUCANCommuFault_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_HMICANCommuFault_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_CSWCANCommuFault_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_EPMCANCommuFault_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_ABS1CANCommuFault_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_ABS2CANCommuFault_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_ABS3CANCommuFault_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_ABS4CANCommuFault_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_BCM1CANCommuFault_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_BCM2CANCommuFault_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_ECM1CANCommuFault_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_ECM2CANCommuFault_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_ECM3CANCommuFault_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_ECM9CANCommuFault_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_TCM1CANCommuFault_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_TCM2CANCommuFault_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_SAS1CANCommuFault_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_EPAS1CANCommuFault_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_EPAS2CANCommuFault_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_EPAS3CANCommuFault_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_METER1CANCommuFault_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_METER3CANCommuFault_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_AC1CANCommuFault_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_EPB1CANCommuFault_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_VCU1CANCommuFault_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_VCU2CANCommuFault_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_HCU3CANCommuFault_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_HCU4CANCommuFault_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_HMI2CANCommuFault_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_HMI1CANCommuFault_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_CSW1CANCommuFault_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_EPM1CANCommuFault_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_EPM2CANCommuFault_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_EPM3CANCommuFault_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_EPM4CANCommuFault_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_EPM5CANCommuFault_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_EPM6CANCommuFault_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_EPM7CANCommuFault_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_EPM8CANCommuFault_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_EPM9CANCommuFault_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_EPM10CANCommuFault_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_EPM11CANCommuFault_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_EPM12CANCommuFault_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_EPM13CANCommuFault_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_EPM14CANCommuFault_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_EPM15CANCommuFault_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_EPM16CANCommuFault_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_EPM17CANCommuFault_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_EPM18CANCommuFault_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_EPM19CANCommuFault_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_EPM20CANCommuFault_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_EPM21CANCommuFault_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_EPM22CANCommuFault_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_EPM23CANCommuFault_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_EPM24CANCommuFault_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_EPM25CANCommuFault_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_EPM26CANCommuFault_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_EPM27CANCommuFault_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_EPM28CANCommuFault_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_EPM29CANCommuFault_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_EPM30CANCommuFault_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_EPM31CANCommuFault_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_EPM32CANCommuFault_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_EPM33CANCommuFault_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_EPM34CANCommuFault_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_EPM35CANCommuFault_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_CamLeftLaneRecvFault_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_CamRightLaneRecvFault_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_CamObs1RecvFault_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_CamObs2RecvFault_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_CamObs3RecvFault_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_CamObs4RecvFault_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_CamObs5RecvFault_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_CamObs6RecvFault_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_CamObs7RecvFault_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_CamObs8RecvFault_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_CamObs9RecvFault_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_CamObs10RecvFault_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_ABSCANInvalidFault_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_BCMCANInvalidFault_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_ECMCANInvalidFault_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_TCMCANInvalidFault_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_EPSCANInvalidFault_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_METERCANInvalidFault_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_ACCANInvalidFault_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_EPBCANInvalidFault_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_VCUCANInvalidFault_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_HMICANInvalidFault_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_CSWCANInvalidFault_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_EPMCANInvalidFault_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_ABS1CANRolCntFault_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_ABS2CANRolCntFault_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_ECM9CANRolCntFault_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_SAS1CANRolCntFault_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_EPAS2CANRolCntFault_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_EPAS3CANRolCntFault_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_VCU1CANRolCntFault_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_VCU2CANRolCntFault_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_HCU3CANRolCntFault_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_ABS2CANChkSumFault_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_SAS1CANChkSumFault_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_EPAS2CANChkSumFault_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_EPAS3CANChkSumFault_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_VCU1CANChkSumFault_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_VCU2CANChkSumFault_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_CANAPPSigFault_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_CANEffAPPSigFault_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_CANEngSpdSigFault_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_CANEngTqFricSigFault_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_CANEngTqIndSigFault_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_CANEngTqIndCORSigFault_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_CANEngTqMaxSigFault_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_CANEngTqMinSigFault_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_CANBrkLampOnSigFault_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_CANVehSpdSigFault_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_CANYawRateSigFault_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_CANLatAccelSigFault_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_CANLongAccelSigFault_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_CANMCPressureSigFault_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_CANSurfGradeSigFault_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_CANBrakBoostPresSigFault_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_CANLFWhlSpdSigFault_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_CANLRWhlSpdSigFault_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_CANRFWhlSpdSigFault_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_CANRRWhlSpdSigFault_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_CANStrAngSigFault_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_CANStrSpdSigFault_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_CANRelStrAngSigFault_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_CANStrTorqSigFault_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_CANAckCurStrAngReqSigFault_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_CANAckCurStrTqReqSigFault_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_CANEPSBattVoltSigFault_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_CANVehCrashdSigFault_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_CANShftPosnSigFault_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_CANNowGearPosnSigFault_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_CANTMTurbSpdSigFault_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_CANOdoMeterSigFault_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_CANMeterVehSpdSigFault_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_CANOutsideTempSigFault_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_CANParkBrakBindStaSigFault_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_CANAckCurBrakDecReqSigFault_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_CANAckCurPTTqReqSigFault_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_CANAckCurVehDecSigFault_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_CANDriverBrkPdlOnSigFault_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_CANESCBattVoltSigFault_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_CANHWAPPSigFault_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_CANCurDriverTqReqSigFault_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_IgnVoltRangHighFault_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_IgnVoltRangLowFault_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_BattVoltRangHighFault_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_BattVoltRangLowFault_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_ADCFault_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_EEPROMFault_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_RAMFault_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_ROMFault_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_VREF1Fault_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_VREF2Fault_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );

% Output Signals %
a2l_mon('VINP_IgnitionVolt_V', 	'V', 	-1000000, 	1000000, 	'single', 	'',	1 );
a2l_mon('VINP_IgnitionVoltValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_BatteryVolt_V', 	'V', 	-1000000, 	1000000, 	'single', 	'',	1 );
a2l_mon('VINP_BatteryVoltValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_AppTime_ms', 	'ms', 	-9000000000, 	9000000000, 	'single', 	'',	1 );
a2l_mon('VINP_ADCFault_enum', 	'enum', 	0, 	255, 	'uint8', 	'',	1 );
a2l_mon('VINP_EEPROMFault_enum', 	'enum', 	0, 	255, 	'uint8', 	'',	1 );
a2l_mon('VINP_RAMFault_enum', 	'enum', 	0, 	255, 	'uint8', 	'',	1 );
a2l_mon('VINP_ROMFault_enum', 	'enum', 	0, 	255, 	'uint8', 	'',	1 );
a2l_mon('VINP_VREF1Fault_enum', 	'enum', 	0, 	255, 	'uint8', 	'',	1 );
a2l_mon('VINP_VREF2Fault_enum', 	'enum', 	0, 	255, 	'uint8', 	'',	1 );
a2l_mon('VINP_AccelPedalPosn_pct', 	'pct', 	-1000000, 	1000000, 	'single', 	'',	1 );
a2l_mon('VINP_AccelPedalPosnValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_EffAccelPedalPosn_pct', 	'pct', 	-1000000, 	1000000, 	'single', 	'',	1 );
a2l_mon('VINP_EffAccelPedalPosnValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_EngSpd_erpm', 	'erpm', 	-1000000, 	1000000, 	'single', 	'',	1 );
a2l_mon('VINP_EngSpdValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_EngTqFriction_Nm', 	'Nm', 	-1000000, 	1000000, 	'single', 	'',	1 );
a2l_mon('VINP_EngTqFrictionValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_EngTqIndicated_Nm', 	'Nm', 	-1000000, 	1000000, 	'single', 	'',	1 );
a2l_mon('VINP_EngTqIndicatedValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_EngTqIndicatedCOR_Nm', 	'Nm', 	-1000000, 	1000000, 	'single', 	'',	1 );
a2l_mon('VINP_EngTqIndicatedCORValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_EngTqMax_Nm', 	'Nm', 	-1000000, 	1000000, 	'single', 	'',	1 );
a2l_mon('VINP_EngTqMaxValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_EngTqMin_Nm', 	'Nm', 	-1000000, 	1000000, 	'single', 	'',	1 );
a2l_mon('VINP_EngTqMinValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_EngTqUnCORFault_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_EngTqUnCORFaultValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_EMSHybridOpState_enum', 	'enum', 	0, 	255, 	'uint8', 	'',	1 );
a2l_mon('VINP_EMSHybridOpStateValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_EMSOpState_enum', 	'enum', 	0, 	255, 	'uint8', 	'',	1 );
a2l_mon('VINP_EMSOpStateValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_EngHoodOpen_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_EngHoodOpenValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_OBDWarnCycAchiv_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_OBDWarnCycAchivValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_OBDDriveCycAchiv_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_OBDDriveCycAchivValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_ShifterPosn_enum', 	'enum', 	0, 	255, 	'uint8', 	'',	1 );
a2l_mon('VINP_ShifterPosnValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_NowGearPosn_enum', 	'enum', 	0, 	255, 	'uint8', 	'',	1 );
a2l_mon('VINP_NowGearPosnValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_TMTurbineSpd_rpm', 	'rpm', 	-1000000, 	1000000, 	'single', 	'',	1 );
a2l_mon('VINP_TMTurbineSpdValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_TCMFaultStatus_enum', 	'enum', 	0, 	255, 	'uint8', 	'',	1 );
a2l_mon('VINP_TCMFaultStatusValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_TqConvClutchSt_enum', 	'enum', 	0, 	255, 	'uint8', 	'',	1 );
a2l_mon('VINP_TqConvClutchStValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_TCMMILReq_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_TCMMILReqValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_TCMWinterMode_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_TCMWinterModeValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_TCMPowerMode_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_TCMPowerModeValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_DriverMode_enum', 	'enum', 	0, 	255, 	'uint8', 	'',	1 );
a2l_mon('VINP_DriverModeValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_KeySwitchStatus_enum', 	'enum', 	0, 	255, 	'uint8', 	'',	1 );
a2l_mon('VINP_KeySwitchStatusValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_TurnSignalSwL_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_TurnSignalSwLValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_TurnSignalSwR_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_TurnSignalSwRValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_HazardLightSw_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_HazardLightSwValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_DriverDoorOpen_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_DriverDoorOpenValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_PassengerDoorOpen_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_PassengerDoorOpenValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_LRDoorOpen_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_LRDoorOpenValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_RRDoorOpen_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_RRDoorOpenValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_TailGateOpen_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_TailGateOpenValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_AnyDoorOpen_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_AnyDoorOpenValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_VehCrashed_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_VehCrashedValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_ABSActive_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_ABSActiveValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_ABSFault_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_ABSFaultValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_EBDFault_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_EBDFaultValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_ESCActive_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_ESCActiveValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_ESCFault_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_ESCFaultValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_TCSActive_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_TCSActiveValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_TCSEnabled_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_TCSEnabledValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_TCSFault_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_TCSFaultValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_HSAActive_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_HSAActiveValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_HSAFault_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_HSAFaultValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_BrkLampOn_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_BrkLampOnValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_VehSpd_kph', 	'kph', 	-1000000, 	1000000, 	'single', 	'',	1 );
a2l_mon('VINP_VehSpdValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_YawRate_degps', 	'degps', 	-1000000, 	1000000, 	'single', 	'',	1 );
a2l_mon('VINP_YawRateValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_LatAccel_G', 	'G', 	-1000000, 	1000000, 	'single', 	'',	1 );
a2l_mon('VINP_LatAccelValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_LongAccel_G', 	'G', 	-1000000, 	1000000, 	'single', 	'',	1 );
a2l_mon('VINP_LongAccelValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_MCPressure_bar', 	'bar', 	-1000000, 	1000000, 	'single', 	'',	1 );
a2l_mon('VINP_MCPressureValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_SurfaceGrade_deg', 	'deg', 	-1000000, 	1000000, 	'single', 	'',	1 );
a2l_mon('VINP_SurfaceGradeValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_BrakBoosterPres_kPa', 	'kPa', 	-1000000, 	1000000, 	'single', 	'',	1 );
a2l_mon('VINP_BrakBoosterPresValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_LowBrakBoosterPres_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_LowBrakBoosterPresValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_LFWheelSpeed_kph', 	'kph', 	-1000000, 	1000000, 	'single', 	'',	1 );
a2l_mon('VINP_LFWheelSpeedValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_LRWheelSpeed_kph', 	'kph', 	-1000000, 	1000000, 	'single', 	'',	1 );
a2l_mon('VINP_LRWheelSpeedValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_RFWheelSpeed_kph', 	'kph', 	-1000000, 	1000000, 	'single', 	'',	1 );
a2l_mon('VINP_RFWheelSpeedValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_RRWheelSpeed_kph', 	'kph', 	-1000000, 	1000000, 	'single', 	'',	1 );
a2l_mon('VINP_RRWheelSpeedValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_SteerAngle_deg', 	'deg', 	-1000000, 	1000000, 	'single', 	'',	1 );
a2l_mon('VINP_SteerAngleValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_SteerSpeed_degps', 	'degps', 	-1000000, 	1000000, 	'single', 	'',	1 );
a2l_mon('VINP_SteerSpeedValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_RelSteerAngle_deg', 	'deg', 	-1000000, 	1000000, 	'single', 	'',	1 );
a2l_mon('VINP_RelSteerAngleValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_SteerTorque_Nm', 	'Nm', 	-1000000, 	1000000, 	'single', 	'',	1 );
a2l_mon('VINP_SteerTorqueValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_EPSElectPWR_A', 	'A', 	-1000000, 	1000000, 	'single', 	'',	1 );
a2l_mon('VINP_EPSElectPWRValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_EPSFailed_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_EPSFailedValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_AckCurStrAngReq_deg', 	'deg', 	-1000000, 	1000000, 	'single', 	'',	1 );
a2l_mon('VINP_AckCurStrAngReqValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_AckCurStrAngReqApplable_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_AckCurStrAngReqApplableValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_AckCurStrTqReq_Nm', 	'Nm', 	-1000000, 	1000000, 	'single', 	'',	1 );
a2l_mon('VINP_AckCurStrTqReqValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_AckCurStrTqReqApplable_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_AckCurStrTqReqApplableValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_EPSBattVolt_V', 	'V', 	-1000000, 	1000000, 	'single', 	'',	1 );
a2l_mon('VINP_EPSBattVoltValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_EPASMILReq_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_EPASMILReqValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_EPSLKAStatus_enum', 	'enum', 	0, 	255, 	'uint8', 	'',	1 );
a2l_mon('VINP_EPSLKAStatusValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_EPSLFCStatus_enum', 	'enum', 	0, 	255, 	'uint8', 	'',	1 );
a2l_mon('VINP_EPSLFCStatusValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_EPSADASAbReason_enum', 	'enum', 	0, 	255, 	'uint8', 	'',	1 );
a2l_mon('VINP_EPSADASAbReasonValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_OdoMeter_km', 	'km', 	-1000000, 	1000000, 	'single', 	'',	1 );
a2l_mon('VINP_OdoMeterValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_LowBrakeFluid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_LowBrakeFluidValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_ParkBrakeOn_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_ParkBrakeOnValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_SeatBeltNOTFasten_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_SeatBeltNOTFastenValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_MeterVehSpd_kph', 	'kph', 	-1000000, 	1000000, 	'single', 	'',	1 );
a2l_mon('VINP_MeterVehSpdValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_OutsideTemp_degC', 	'degC', 	-1000000, 	1000000, 	'single', 	'',	1 );
a2l_mon('VINP_OutsideTempValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_ParkBrakeBindSta_enum', 	'enum', 	0, 	255, 	'uint8', 	'',	1 );
a2l_mon('VINP_ParkBrakeBindStaValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_RearFogSwOn_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_RearFogSwOnValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_HighBeamSwOn_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_HighBeamSwOnValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_AckCurBrakDecReq_mps2', 	'mps2', 	-1000000, 	1000000, 	'single', 	'',	1 );
a2l_mon('VINP_AckCurBrakDecReqValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_AckCurBrakDecReqApplable_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_AckCurBrakDecReqApplableValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_AckCurPTTqReq_Nm', 	'Nm', 	-1000000, 	1000000, 	'single', 	'',	1 );
a2l_mon('VINP_AckCurPTTqReqValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_AckCurPTTqReqApplable_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_AckCurPTTqReqApplableValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_AckCurVehDec_mps2', 	'mps2', 	-1000000, 	1000000, 	'single', 	'',	1 );
a2l_mon('VINP_AckCurVehDecValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_DeceContManag_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_DeceContManagValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_DriverBrakPedalOn_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_DriverBrakPedalOnValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_ECMExtnTqAvailable_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_ECMExtnTqAvailableValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_ECMTqSource_enum', 	'enum', 	0, 	255, 	'uint8', 	'',	1 );
a2l_mon('VINP_ECMTqSourceValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_ESCBrakeStatus_enum', 	'enum', 	0, 	255, 	'uint8', 	'',	1 );
a2l_mon('VINP_ESCBrakeStatusValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_ESCExtnBrkAvailable_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_ESCExtnBrkAvailableValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_ESCBattVolt_V', 	'V', 	-1000000, 	1000000, 	'single', 	'',	1 );
a2l_mon('VINP_ESCBattVoltValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_HWAccelPedalPosn_pct', 	'pct', 	-1000000, 	1000000, 	'single', 	'',	1 );
a2l_mon('VINP_HWAccelPedalPosnValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_CurDriverTqReq_Nm', 	'Nm', 	-1000000, 	1000000, 	'single', 	'',	1 );
a2l_mon('VINP_CurDriverTqReqValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_TCMGearPosnReqAllow_enum', 	'enum', 	0, 	255, 	'uint8', 	'',	1 );
a2l_mon('VINP_TCMGearPosnReqAllowValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_MSAStatus_enum', 	'enum', 	0, 	255, 	'uint8', 	'',	1 );
a2l_mon('VINP_MSAStatusValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_HybridLimpHome_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_HybridLimpHomeValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_HCUMILReq_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_HCUMILReqValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_ACCOnVCU_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_ACCOnVCUValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_ACCResSpdIncVCU_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_ACCResSpdIncVCUValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_ACCSetSpdDecVCU_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_ACCSetSpdDecVCUValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_ACCDistVCU_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_ACCDistVCUValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_ACCTimeGapIncVCU_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_ACCTimeGapIncVCUValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_ACCTimeGapDecVCU_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_ACCTimeGapDecVCUValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_LFCOnVCU_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_LFCOnVCUValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_MSAOnVCU_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_MSAOnVCUValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_AEBEnableH_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_AEBEnableHValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_FCWEnableH_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_FCWEnableHValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_CSCEnableH_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_CSCEnableHValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_LKAEnableH_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_LKAEnableHValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_MAPAEnableH_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_MAPAEnableHValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_LCSEnableH_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_LCSEnableHValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_FCWWarningModeH_enum', 	'enum', 	0, 	255, 	'uint8', 	'',	1 );
a2l_mon('VINP_FCWWarningModeHValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_DefMaxACCSetSpeed_kph', 	'kph', 	-1000000, 	1000000, 	'single', 	'',	1 );
a2l_mon('VINP_DefMaxACCSetSpeedValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_LFCPilotOnH_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_LFCPilotOnHValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_LFCPilotCancelH_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_LFCPilotCancelHValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_ACCOnH_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_ACCOnHValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_ACCCancelH_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_ACCCancelHValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_ACCResSpdIncH_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_ACCResSpdIncHValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_ACCSetSpdDecH_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_ACCSetSpdDecHValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_ACCSpdIncH_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_ACCSpdIncHValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_ACCSpdDecH_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_ACCSpdDecHValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_ACCTimeGapIncH_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_ACCTimeGapIncHValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_ACCTimeGapDecH_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_ACCTimeGapDecHValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_IGSAOnH_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_IGSAOnHValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_IGSAResSpdIncH_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_IGSAResSpdIncHValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_IGSASetSpdDecH_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_IGSASetSpdDecHValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_IGSASwitchModeH_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_IGSASwitchModeHValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_LaneQualityL_enum', 	'enum', 	0, 	255, 	'uint8', 	'',	1 );
a2l_mon('VINP_LaneQualityLValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_LaneQualityR_enum', 	'enum', 	0, 	255, 	'uint8', 	'',	1 );
a2l_mon('VINP_LaneQualityRValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_LaneC0LRaw_m', 	'm', 	-1000000, 	1000000, 	'single', 	'',	1 );
a2l_mon('VINP_LaneC0LValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_LaneC1LRaw_rad', 	'rad', 	-1000000, 	1000000, 	'single', 	'',	1 );
a2l_mon('VINP_LaneC1LValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_LaneC2LRaw_rat', 	'rat', 	-1000000, 	1000000, 	'single', 	'',	1 );
a2l_mon('VINP_LaneC2LValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_LaneC3LRaw_rat', 	'rat', 	-1000000, 	1000000, 	'single', 	'',	1 );
a2l_mon('VINP_LaneC3LValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_LaneC0RRaw_m', 	'm', 	-1000000, 	1000000, 	'single', 	'',	1 );
a2l_mon('VINP_LaneC0RValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_LaneC1RRaw_rad', 	'rad', 	-1000000, 	1000000, 	'single', 	'',	1 );
a2l_mon('VINP_LaneC1RValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_LaneC2RRaw_rat', 	'rat', 	-1000000, 	1000000, 	'single', 	'',	1 );
a2l_mon('VINP_LaneC2RValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_LaneC3RRaw_rat', 	'rat', 	-1000000, 	1000000, 	'single', 	'',	1 );
a2l_mon('VINP_LaneC3RValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_LaneTypeL_enum', 	'enum', 	0, 	255, 	'uint8', 	'',	1 );
a2l_mon('VINP_LaneTypeLValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_LaneTypeR_enum', 	'enum', 	0, 	255, 	'uint8', 	'',	1 );
a2l_mon('VINP_LaneTypeRValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_LaneMrkClrL_enum', 	'enum', 	0, 	255, 	'uint8', 	'',	1 );
a2l_mon('VINP_LaneMrkClrLValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_LaneMrkClrR_enum', 	'enum', 	0, 	255, 	'uint8', 	'',	1 );
a2l_mon('VINP_LaneMrkClrRValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_LaneMrkWidL_m', 	'm', 	-1000000, 	1000000, 	'single', 	'',	1 );
a2l_mon('VINP_LaneMrkWidLValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_LaneMrkWidR_m', 	'm', 	-1000000, 	1000000, 	'single', 	'',	1 );
a2l_mon('VINP_LaneMrkWidRValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_ViewRangeStartL_m', 	'm', 	-1000000, 	1000000, 	'single', 	'',	1 );
a2l_mon('VINP_ViewRangeStartLValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_ViewRangeStartR_m', 	'm', 	-1000000, 	1000000, 	'single', 	'',	1 );
a2l_mon('VINP_ViewRangeStartRValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_ViewRangeEndL_m', 	'm', 	-1000000, 	1000000, 	'single', 	'',	1 );
a2l_mon('VINP_ViewRangeEndLValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_ViewRangeEndR_m', 	'm', 	-1000000, 	1000000, 	'single', 	'',	1 );
a2l_mon('VINP_ViewRangeEndRValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_TLCL_s', 	's', 	-1000000, 	1000000, 	'single', 	'',	1 );
a2l_mon('VINP_TLCLValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_TLCR_s', 	's', 	-1000000, 	1000000, 	'single', 	'',	1 );
a2l_mon('VINP_TLCRValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_LaneCrosL_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_LaneCrosLValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_LaneCrosR_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_LaneCrosRValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_NextLaneC0L_m', 	'm', 	-1000000, 	1000000, 	'single', 	'',	1 );
a2l_mon('VINP_NextLaneC0LValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_NextLaneC1L_rad', 	'rad', 	-1000000, 	1000000, 	'single', 	'',	1 );
a2l_mon('VINP_NextLaneC1LValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_NextLaneC2L_rat', 	'rat', 	-1000000, 	1000000, 	'single', 	'',	1 );
a2l_mon('VINP_NextLaneC2LValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_NextLaneC3L_rat', 	'rat', 	-1000000, 	1000000, 	'single', 	'',	1 );
a2l_mon('VINP_NextLaneC3LValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_NextLaneQualityL_enum', 	'enum', 	0, 	255, 	'uint8', 	'',	1 );
a2l_mon('VINP_NextLaneQualityLValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_NextLaneTypeL_enum', 	'enum', 	0, 	255, 	'uint8', 	'',	1 );
a2l_mon('VINP_NextLaneTypeLValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_NextLaneMrkWidL_m', 	'm', 	-1000000, 	1000000, 	'single', 	'',	1 );
a2l_mon('VINP_NextLaneMrkWidLValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_NextViewRangeStartL_m', 	'm', 	-1000000, 	1000000, 	'single', 	'',	1 );
a2l_mon('VINP_NextViewRangeStartLValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_NextViewRangeEndL_m', 	'm', 	-1000000, 	1000000, 	'single', 	'',	1 );
a2l_mon('VINP_NextViewRangeEndLValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_NextLaneC0R_m', 	'm', 	-1000000, 	1000000, 	'single', 	'',	1 );
a2l_mon('VINP_NextLaneC0RValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_NextLaneC1R_rad', 	'rad', 	-1000000, 	1000000, 	'single', 	'',	1 );
a2l_mon('VINP_NextLaneC1RValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_NextLaneC2R_rat', 	'rat', 	-1000000, 	1000000, 	'single', 	'',	1 );
a2l_mon('VINP_NextLaneC2RValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_NextLaneC3R_rat', 	'rat', 	-1000000, 	1000000, 	'single', 	'',	1 );
a2l_mon('VINP_NextLaneC3RValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_NextLaneQualityR_enum', 	'enum', 	0, 	255, 	'uint8', 	'',	1 );
a2l_mon('VINP_NextLaneQualityRValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_NextLaneTypeR_enum', 	'enum', 	0, 	255, 	'uint8', 	'',	1 );
a2l_mon('VINP_NextLaneTypeRValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_NextLaneMrkWidR_m', 	'm', 	-1000000, 	1000000, 	'single', 	'',	1 );
a2l_mon('VINP_NextLaneMrkWidRValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_NextViewRangeStartR_m', 	'm', 	-1000000, 	1000000, 	'single', 	'',	1 );
a2l_mon('VINP_NextViewRangeStartRValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_NextViewRangeEndR_m', 	'm', 	-1000000, 	1000000, 	'single', 	'',	1 );
a2l_mon('VINP_NextViewRangeEndRValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_CamNofObjects_num', 	'num', 	0, 	255, 	'uint8', 	'',	1 );
a2l_mon('VINP_CamNofObjectsValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_CamGoDecision_enum', 	'enum', 	0, 	255, 	'uint8', 	'',	1 );
a2l_mon('VINP_CamGoDecisionValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_CloseCarDetected_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_CloseCarDetectedValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_RightCarCutIn_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_RightCarCutInValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_LeftCarCutIn_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_LeftCarCutInValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_CamFSImpairedVD_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_CamFSImpairedVDValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_CamFSLowSun_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_CamFSLowSunValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_CamFSBlurImage_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_CamFSBlurImageValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_CamFSSmearImage_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_CamFSSmearImageValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_CamFSPartialBlockage_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_CamFSPartialBlockageValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_CamFSFullBlockage_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_CamFSFullBlockageValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_CamFSSplashes_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_CamFSSplashesValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_CamFSOutofCal_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_CamFSOutofCalValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_CamFSCalMisalign_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_CamFSCalMisalignValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_CamFSSmearedspots_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_CamFSSmearedspotsValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_CamFSSpotHalosFrozen_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_CamFSSpotHalosFrozenValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_CamFSFoggySpots_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_CamFSFoggySpotsValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_CamFSSunRay_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_CamFSSunRayValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_CamObsID10_num', 	'num', 	0, 	255, 	'uint8', 	'',	10 );
a2l_mon('VINP_CamObsIDValid10_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	10 );
a2l_mon('VINP_CamObsPosX10_m', 	'm', 	-1000000, 	1000000, 	'single', 	'',	10 );
a2l_mon('VINP_CamObsPosXValid10_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	10 );
a2l_mon('VINP_CamObsPosY10_m', 	'm', 	-1000000, 	1000000, 	'single', 	'',	10 );
a2l_mon('VINP_CamObsPosYValid10_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	10 );
a2l_mon('VINP_CamObsVelX10_mps', 	'mps', 	-1000000, 	1000000, 	'single', 	'',	10 );
a2l_mon('VINP_CamObsVelXValid10_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	10 );
a2l_mon('VINP_CamObsVelY10_mps', 	'mps', 	-1000000, 	1000000, 	'single', 	'',	10 );
a2l_mon('VINP_CamObsVelYValid10_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	10 );
a2l_mon('VINP_CamObsAccX10_mps2', 	'mps2', 	-1000000, 	1000000, 	'single', 	'',	10 );
a2l_mon('VINP_CamObsAccXValid10_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	10 );
a2l_mon('VINP_CamObsAng10_deg', 	'deg', 	-1000000, 	1000000, 	'single', 	'',	10 );
a2l_mon('VINP_CamObsAngValid10_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	10 );
a2l_mon('VINP_CamObsAngRate10_degps', 	'degps', 	-1000000, 	1000000, 	'single', 	'',	10 );
a2l_mon('VINP_CamObsAngRateValid10_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	10 );
a2l_mon('VINP_CamObsLength10_m', 	'm', 	-1000000, 	1000000, 	'single', 	'',	10 );
a2l_mon('VINP_CamObsLengthValid10_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	10 );
a2l_mon('VINP_CamObsWidth10_m', 	'm', 	-1000000, 	1000000, 	'single', 	'',	10 );
a2l_mon('VINP_CamObsWidthValid10_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	10 );
a2l_mon('VINP_CamObsType10_enum', 	'enum', 	0, 	255, 	'uint8', 	'',	10 );
a2l_mon('VINP_CamObsTypeValid10_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	10 );
a2l_mon('VINP_CamObsStatus10_enum', 	'enum', 	0, 	255, 	'uint8', 	'',	10 );
a2l_mon('VINP_CamObsStatusValid10_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	10 );
a2l_mon('VINP_CamObsValid10_enum', 	'enum', 	0, 	255, 	'uint8', 	'',	10 );
a2l_mon('VINP_CamObsValidValid10_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	10 );
a2l_mon('VINP_CamObsMoveInO10_enum', 	'enum', 	0, 	255, 	'uint8', 	'',	10 );
a2l_mon('VINP_CamObsMoveInOValid10_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	10 );
a2l_mon('VINP_CamObsBlinker10_enum', 	'enum', 	0, 	255, 	'uint8', 	'',	10 );
a2l_mon('VINP_CamObsBlinkerValid10_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	10 );
a2l_mon('VINP_CamObsBrakeLight10_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	10 );
a2l_mon('VINP_CamObsBrakeLightValid10_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	10 );
a2l_mon('VINP_CamObsAge10_cnt', 	'cnt', 	0, 	255, 	'uint8', 	'',	10 );
a2l_mon('VINP_CamObsAgeValid10_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	10 );
a2l_mon('VINP_CamObsLane10_enum', 	'enum', 	0, 	255, 	'uint8', 	'',	10 );
a2l_mon('VINP_CamObsLaneValid10_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	10 );
a2l_mon('VINP_CamObsCIPV10_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	10 );
a2l_mon('VINP_CamObsCIPVValid10_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	10 );
a2l_mon('VINP_CamObsReplaced10_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	10 );
a2l_mon('VINP_CamObsReplacedValid10_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	10 );
a2l_mon('VINP_IgnitionActive_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_VehSpd_mps', 	'mps', 	-1000000, 	1000000, 	'single', 	'',	1 );
a2l_mon('VINP_SteerAngle_rad', 	'rad', 	-1000000, 	1000000, 	'single', 	'',	1 );
a2l_mon('VINP_YawRate_radps', 	'radps', 	-1000000, 	1000000, 	'single', 	'',	1 );
a2l_mon('VINP_LaneC0LKalF_m', 	'm', 	-1000000, 	1000000, 	'single', 	'',	1 );
a2l_mon('VINP_LaneC1LKalF_rad', 	'rad', 	-1000000, 	1000000, 	'single', 	'',	1 );
a2l_mon('VINP_LaneC2LKalF_rat', 	'rat', 	-1000000, 	1000000, 	'single', 	'',	1 );
a2l_mon('VINP_LaneC3LKalF_rat', 	'rat', 	-1000000, 	1000000, 	'single', 	'',	1 );
a2l_mon('VINP_LaneC0RKalF_m', 	'm', 	-1000000, 	1000000, 	'single', 	'',	1 );
a2l_mon('VINP_LaneC1RKalF_rad', 	'rad', 	-1000000, 	1000000, 	'single', 	'',	1 );
a2l_mon('VINP_LaneC2RKalF_rat', 	'rat', 	-1000000, 	1000000, 	'single', 	'',	1 );
a2l_mon('VINP_LaneC3RKalF_rat', 	'rat', 	-1000000, 	1000000, 	'single', 	'',	1 );
a2l_mon('VINP_ABSCANValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_BCMCANValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_ECMCANValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_TCMCANValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_EPSCANValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_METERCANValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_ACCANValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_EPBCANValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_VCUCANValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_HMICANValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_CSWCANValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_EPMCANValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_ABSCANAlive_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_BCMCANAlive_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_ECMCANAlive_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_TCMCANAlive_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_EPSCANAlive_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_METERCANAlive_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_ACCANAlive_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_EPBCANAlive_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_VCUCANAlive_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_HMICANAlive_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_CSWCANAlive_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VINP_EPMCANAlive_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
