%% File : DataFusion.tlc
%% Created: Fri Jul 22 13:09:50 2016
%%
%% Description: 
%%   Simulink Coder wrapper functions interface generated for 
%%   S-function "DataFusion.c".
%%
%%         File generated by S-function Builder Block
%%
%%   For more information on using the Target Language with the 
%%   Simulink Coder, see the Target Language Compiler manual
%%   (under Simulink Coder) in the "Inlining S-Functions"
%%   chapter under the section and subsection:
%%     "Writing Block Target Files to Inline S-Functions",
%%        "Function-Based or Wrappered Code".
%%
%implements  DataFusion "C"
%% Function: BlockTypeSetup ===================================================
%%
%% Purpose:
%%      Set up external references for wrapper functions in the 
%%      generated code.
%%
%function BlockTypeSetup(block, system) Output
    
  %if IsModelReferenceSimTarget() || CodeFormat=="S-Function"
    %assign hFileName = "DataFusion_accel_wrapper"
    %assign hFileNameMacro = FEVAL("upper", hFileName)
    %openfile hFile = "%<hFileName>.h"
    %selectfile hFile
    #ifndef _%<hFileNameMacro>_H_
    #define _%<hFileNameMacro>_H_

    #include "tmwtypes.h"
    extern void DataFusion_Outputs_wrapper_accel(const void *velocity, void *__velocityBUS,                          const void *yawRate, void *__yawRateBUS,                          const void *objects, void *__objectsBUS,                          const void *obstacles, void *__obstaclesBUS,
                          void *tracks, void *__tracksBUS);
    #endif
    %closefile hFile

    %assign cFileName = "DataFusion_accel_wrapper"
    %openfile cFile = "%<cFileName>.c"
    %selectfile cFile
    #include <string.h>
    #include "tmwtypes.h"
    #include "DataFusion_bus.h"
	void DataFusion_Outputs_wrapper_accel(const void *velocity, void *__velocityBUS,                          const void *yawRate, void *__yawRateBUS,                          const void *objects, void *__objectsBUS,                          const void *obstacles, void *__obstaclesBUS,
                          void *tracks, void *__tracksBUS){
	%assign dTypeId = LibBlockInputSignalDataTypeId(0)
    %<SLibAssignSLStructToUserStruct(dTypeId, "(*(VelocityList*) __velocityBUS)", "(char *)velocity", 0)>

	%assign dTypeId = LibBlockInputSignalDataTypeId(1)
    %<SLibAssignSLStructToUserStruct(dTypeId, "(*(YawRateList*) __yawRateBUS)", "(char *)yawRate", 1)>

	%assign dTypeId = LibBlockInputSignalDataTypeId(2)
    %<SLibAssignSLStructToUserStruct(dTypeId, "(*(ObjectList*) __objectsBUS)", "(char *)objects", 2)>

	%assign dTypeId = LibBlockInputSignalDataTypeId(3)
    %<SLibAssignSLStructToUserStruct(dTypeId, "(*(ObstacleList*) __obstaclesBUS)", "(char *)obstacles", 3)>
	DataFusion_Outputs_wrapper((VelocityList *) __velocityBUS, (YawRateList *) __yawRateBUS, (ObjectList *) __objectsBUS, (ObstacleList *) __obstaclesBUS,
                          (TrackList *) __tracksBUS);

	%assign dTypeId = LibBlockOutputSignalDataTypeId(0)
    %<SLibAssignUserStructToSLStruct(dTypeId, "(char *)tracks", "(*(TrackList*) __tracksBUS)", 0)>
}

   %closefile cFile

    %<LibAddToCommonIncludes("%<hFileName>.h")>
    %<LibAddToModelSources("%<cFileName>")>

  %else
  %openfile externs
    
  extern void DataFusion_Outputs_wrapper(const VelocityList *velocity,
                          const YawRateList *yawRate,
                          const ObjectList *objects,
                          const ObstacleList *obstacles,
                          TrackList *tracks);
  %closefile externs
  %<LibCacheExtern(externs)>

 %endif
  %%
%endfunction


%% Function: Outputs ==========================================================
%%
%% Purpose:
%%      Code generation rules for mdlOutputs function.
%%
%function Outputs(block, system) Output
  %%
  %assign pu0 = LibBlockInputSignalAddr(0, "", "", 0)
  %assign pu1 = LibBlockInputSignalAddr(1, "", "", 0)
  %assign pu2 = LibBlockInputSignalAddr(2, "", "", 0)
  %assign pu3 = LibBlockInputSignalAddr(3, "", "", 0)
  %assign py0 = LibBlockOutputSignalAddr(0, "", "", 0)
  %assign py_width = LibBlockOutputSignalWidth(0)
  %assign pu_width = LibBlockInputSignalWidth(0)
  
  %if IsModelReferenceSimTarget() || CodeFormat=="S-Function"
    %assign u0BUS_ptr = LibBlockDWorkAddr(u0BUS, "", "", 0)
    %assign u1BUS_ptr = LibBlockDWorkAddr(u1BUS, "", "", 0)
    %assign u2BUS_ptr = LibBlockDWorkAddr(u2BUS, "", "", 0)
    %assign u3BUS_ptr = LibBlockDWorkAddr(u3BUS, "", "", 0)
    %assign y0BUS_ptr = LibBlockDWorkAddr(y0BUS, "", "", 0)
	DataFusion_Outputs_wrapper_accel(%<pu0>, %<u0BUS_ptr>, %<pu1>, %<u1BUS_ptr>, %<pu2>, %<u2BUS_ptr>, %<pu3>, %<u3BUS_ptr>, %<py0>, %<y0BUS_ptr> );
  %else
	DataFusion_Outputs_wrapper(%<pu0>, %<pu1>, %<pu2>, %<pu3>, %<py0> );
  %endif
  %%
%endfunction


%% [EOF] DataFusion.tlc





