% =========== $Update Time : 07-Nov-2016 16:05:26 $  =========
disp('Loading $Id: dinr_var.m 1526 2016-11-07 08:20:13Z chimotsai $')

%% Calibration Name, Units, Min, Max, Data Type, Comment
a2l_par('KDINR_DisableEstimator_flg', 	'flg', 	0, 	1, 	'boolean', 	'' );

%% Monitored Signals
% Module Signals %

% Output Signals %
a2l_mon('VDINR_IgnitionVolt_V', 	'V', 	-1000000, 	1000000, 	'single', 	'',	1 );
a2l_mon('VDINR_IgnitionVoltValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VDINR_BatteryVolt_V', 	'V', 	-1000000, 	1000000, 	'single', 	'',	1 );
a2l_mon('VDINR_BatteryVoltValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VDINR_AppTime_ms', 	'ms', 	-9000000000, 	9000000000, 	'single', 	'',	1 );
a2l_mon('VDINR_ADCFault_enum', 	'enum', 	0, 	255, 	'uint8', 	'',	1 );
a2l_mon('VDINR_EEPROMFault_enum', 	'enum', 	0, 	255, 	'uint8', 	'',	1 );
a2l_mon('VDINR_RAMFault_enum', 	'enum', 	0, 	255, 	'uint8', 	'',	1 );
a2l_mon('VDINR_ROMFault_enum', 	'enum', 	0, 	255, 	'uint8', 	'',	1 );
a2l_mon('VDINR_VREF1Fault_enum', 	'enum', 	0, 	255, 	'uint8', 	'',	1 );
a2l_mon('VDINR_VREF2Fault_enum', 	'enum', 	0, 	255, 	'uint8', 	'',	1 );
a2l_mon('VDINR_AccelPedalPosn_pct', 	'pct', 	-1000000, 	1000000, 	'single', 	'',	1 );
a2l_mon('VDINR_AccelPedalPosnValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VDINR_EffAccelPedalPosn_pct', 	'pct', 	-1000000, 	1000000, 	'single', 	'',	1 );
a2l_mon('VDINR_EffAccelPedalPosnValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VDINR_EngSpd_erpm', 	'erpm', 	-1000000, 	1000000, 	'single', 	'',	1 );
a2l_mon('VDINR_EngSpdValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VDINR_EngTqFriction_Nm', 	'Nm', 	-1000000, 	1000000, 	'single', 	'',	1 );
a2l_mon('VDINR_EngTqFrictionValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VDINR_EngTqIndicated_Nm', 	'Nm', 	-1000000, 	1000000, 	'single', 	'',	1 );
a2l_mon('VDINR_EngTqIndicatedValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VDINR_EngTqIndicatedCOR_Nm', 	'Nm', 	-1000000, 	1000000, 	'single', 	'',	1 );
a2l_mon('VDINR_EngTqIndicatedCORValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VDINR_EngTqMax_Nm', 	'Nm', 	-1000000, 	1000000, 	'single', 	'',	1 );
a2l_mon('VDINR_EngTqMaxValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VDINR_EngTqMin_Nm', 	'Nm', 	-1000000, 	1000000, 	'single', 	'',	1 );
a2l_mon('VDINR_EngTqMinValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VDINR_EngTqUnCORFault_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VDINR_EngTqUnCORFaultValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VDINR_EMSHybridOpState_enum', 	'enum', 	0, 	255, 	'uint8', 	'',	1 );
a2l_mon('VDINR_EMSHybridOpStateValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VDINR_EMSOpState_enum', 	'enum', 	0, 	255, 	'uint8', 	'',	1 );
a2l_mon('VDINR_EMSOpStateValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VDINR_EngHoodOpen_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VDINR_EngHoodOpenValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VDINR_OBDWarnCycAchiv_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VDINR_OBDWarnCycAchivValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VDINR_OBDDriveCycAchiv_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VDINR_OBDDriveCycAchivValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VDINR_ShifterPosn_enum', 	'enum', 	0, 	255, 	'uint8', 	'',	1 );
a2l_mon('VDINR_ShifterPosnValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VDINR_NowGearPosn_enum', 	'enum', 	0, 	255, 	'uint8', 	'',	1 );
a2l_mon('VDINR_NowGearPosnValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VDINR_TMTurbineSpd_rpm', 	'rpm', 	-1000000, 	1000000, 	'single', 	'',	1 );
a2l_mon('VDINR_TMTurbineSpdValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VDINR_TCMFaultStatus_enum', 	'enum', 	0, 	255, 	'uint8', 	'',	1 );
a2l_mon('VDINR_TCMFaultStatusValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VDINR_TqConvClutchSt_enum', 	'enum', 	0, 	255, 	'uint8', 	'',	1 );
a2l_mon('VDINR_TqConvClutchStValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VDINR_TCMMILReq_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VDINR_TCMMILReqValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VDINR_TCMWinterMode_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VDINR_TCMWinterModeValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VDINR_TCMPowerMode_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VDINR_TCMPowerModeValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VDINR_DriverMode_enum', 	'enum', 	0, 	255, 	'uint8', 	'',	1 );
a2l_mon('VDINR_DriverModeValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VDINR_KeySwitchStatus_enum', 	'enum', 	0, 	255, 	'uint8', 	'',	1 );
a2l_mon('VDINR_KeySwitchStatusValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VDINR_TurnSignalSwL_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VDINR_TurnSignalSwLValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VDINR_TurnSignalSwR_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VDINR_TurnSignalSwRValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VDINR_HazardLightSw_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VDINR_HazardLightSwValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VDINR_DriverDoorOpen_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VDINR_DriverDoorOpenValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VDINR_PassengerDoorOpen_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VDINR_PassengerDoorOpenValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VDINR_LRDoorOpen_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VDINR_LRDoorOpenValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VDINR_RRDoorOpen_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VDINR_RRDoorOpenValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VDINR_TailGateOpen_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VDINR_TailGateOpenValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VDINR_AnyDoorOpen_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VDINR_AnyDoorOpenValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VDINR_VehCrashed_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VDINR_VehCrashedValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VDINR_ABSActive_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VDINR_ABSActiveValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VDINR_ABSFault_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VDINR_ABSFaultValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VDINR_EBDFault_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VDINR_EBDFaultValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VDINR_ESCActive_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VDINR_ESCActiveValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VDINR_ESCFault_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VDINR_ESCFaultValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VDINR_TCSActive_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VDINR_TCSActiveValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VDINR_TCSEnabled_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VDINR_TCSEnabledValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VDINR_TCSFault_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VDINR_TCSFaultValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VDINR_HSAActive_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VDINR_HSAActiveValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VDINR_HSAFault_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VDINR_HSAFaultValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VDINR_BrkLampOn_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VDINR_BrkLampOnValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VDINR_VehSpd_kph', 	'kph', 	-1000000, 	1000000, 	'single', 	'',	1 );
a2l_mon('VDINR_VehSpdValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VDINR_YawRate_degps', 	'degps', 	-1000000, 	1000000, 	'single', 	'',	1 );
a2l_mon('VDINR_YawRateValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VDINR_LatAccel_G', 	'G', 	-1000000, 	1000000, 	'single', 	'',	1 );
a2l_mon('VDINR_LatAccelValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VDINR_LongAccel_G', 	'G', 	-1000000, 	1000000, 	'single', 	'',	1 );
a2l_mon('VDINR_LongAccelValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VDINR_MCPressure_bar', 	'bar', 	-1000000, 	1000000, 	'single', 	'',	1 );
a2l_mon('VDINR_MCPressureValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VDINR_SurfaceGrade_deg', 	'deg', 	-1000000, 	1000000, 	'single', 	'',	1 );
a2l_mon('VDINR_SurfaceGradeValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VDINR_BrakBoosterPres_kPa', 	'kPa', 	-1000000, 	1000000, 	'single', 	'',	1 );
a2l_mon('VDINR_BrakBoosterPresValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VDINR_LowBrakBoosterPres_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VDINR_LowBrakBoosterPresValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VDINR_LFWheelSpeed_kph', 	'kph', 	-1000000, 	1000000, 	'single', 	'',	1 );
a2l_mon('VDINR_LFWheelSpeedValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VDINR_LRWheelSpeed_kph', 	'kph', 	-1000000, 	1000000, 	'single', 	'',	1 );
a2l_mon('VDINR_LRWheelSpeedValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VDINR_RFWheelSpeed_kph', 	'kph', 	-1000000, 	1000000, 	'single', 	'',	1 );
a2l_mon('VDINR_RFWheelSpeedValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VDINR_RRWheelSpeed_kph', 	'kph', 	-1000000, 	1000000, 	'single', 	'',	1 );
a2l_mon('VDINR_RRWheelSpeedValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VDINR_SteerAngle_deg', 	'deg', 	-1000000, 	1000000, 	'single', 	'',	1 );
a2l_mon('VDINR_SteerAngleValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VDINR_SteerSpeed_degps', 	'degps', 	-1000000, 	1000000, 	'single', 	'',	1 );
a2l_mon('VDINR_SteerSpeedValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VDINR_RelSteerAngle_deg', 	'deg', 	-1000000, 	1000000, 	'single', 	'',	1 );
a2l_mon('VDINR_RelSteerAngleValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VDINR_SteerTorque_Nm', 	'Nm', 	-1000000, 	1000000, 	'single', 	'',	1 );
a2l_mon('VDINR_SteerTorqueValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VDINR_EPSElectPWR_A', 	'A', 	-1000000, 	1000000, 	'single', 	'',	1 );
a2l_mon('VDINR_EPSElectPWRValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VDINR_EPSFailed_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VDINR_EPSFailedValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VDINR_AckCurStrAngReq_deg', 	'deg', 	-1000000, 	1000000, 	'single', 	'',	1 );
a2l_mon('VDINR_AckCurStrAngReqValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VDINR_AckCurStrAngReqApplable_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VDINR_AckCurStrAngReqApplableValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VDINR_AckCurStrTqReq_Nm', 	'Nm', 	-1000000, 	1000000, 	'single', 	'',	1 );
a2l_mon('VDINR_AckCurStrTqReqValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VDINR_AckCurStrTqReqApplable_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VDINR_AckCurStrTqReqApplableValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VDINR_EPSBattVolt_V', 	'V', 	-1000000, 	1000000, 	'single', 	'',	1 );
a2l_mon('VDINR_EPSBattVoltValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VDINR_EPASMILReq_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VDINR_EPASMILReqValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VDINR_EPSLKAStatus_enum', 	'enum', 	0, 	255, 	'uint8', 	'',	1 );
a2l_mon('VDINR_EPSLKAStatusValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VDINR_EPSLFCStatus_enum', 	'enum', 	0, 	255, 	'uint8', 	'',	1 );
a2l_mon('VDINR_EPSLFCStatusValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VDINR_EPSADASAbReason_enum', 	'enum', 	0, 	255, 	'uint8', 	'',	1 );
a2l_mon('VDINR_EPSADASAbReasonValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VDINR_OdoMeter_km', 	'km', 	-1000000, 	1000000, 	'single', 	'',	1 );
a2l_mon('VDINR_OdoMeterValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VDINR_LowBrakeFluid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VDINR_LowBrakeFluidValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VDINR_ParkBrakeOn_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VDINR_ParkBrakeOnValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VDINR_SeatBeltNOTFasten_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VDINR_SeatBeltNOTFastenValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VDINR_MeterVehSpd_kph', 	'kph', 	-1000000, 	1000000, 	'single', 	'',	1 );
a2l_mon('VDINR_MeterVehSpdValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VDINR_OutsideTemp_degC', 	'degC', 	-1000000, 	1000000, 	'single', 	'',	1 );
a2l_mon('VDINR_OutsideTempValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VDINR_ParkBrakeBindSta_enum', 	'enum', 	0, 	255, 	'uint8', 	'',	1 );
a2l_mon('VDINR_ParkBrakeBindStaValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VDINR_RearFogSwOn_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VDINR_RearFogSwOnValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VDINR_HighBeamSwOn_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VDINR_HighBeamSwOnValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VDINR_AckCurBrakDecReq_mps2', 	'mps2', 	-1000000, 	1000000, 	'single', 	'',	1 );
a2l_mon('VDINR_AckCurBrakDecReqValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VDINR_AckCurBrakDecReqApplable_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VDINR_AckCurBrakDecReqApplableValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VDINR_AckCurPTTqReq_Nm', 	'Nm', 	-1000000, 	1000000, 	'single', 	'',	1 );
a2l_mon('VDINR_AckCurPTTqReqValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VDINR_AckCurPTTqReqApplable_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VDINR_AckCurPTTqReqApplableValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VDINR_AckCurVehDec_mps2', 	'mps2', 	-1000000, 	1000000, 	'single', 	'',	1 );
a2l_mon('VDINR_AckCurVehDecValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VDINR_DeceContManag_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VDINR_DeceContManagValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VDINR_DriverBrakPedalOn_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VDINR_DriverBrakPedalOnValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VDINR_ECMExtnTqAvailable_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VDINR_ECMExtnTqAvailableValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VDINR_ECMTqSource_enum', 	'enum', 	0, 	255, 	'uint8', 	'',	1 );
a2l_mon('VDINR_ECMTqSourceValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VDINR_ESCBrakeStatus_enum', 	'enum', 	0, 	255, 	'uint8', 	'',	1 );
a2l_mon('VDINR_ESCBrakeStatusValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VDINR_ESCExtnBrkAvailable_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VDINR_ESCExtnBrkAvailableValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VDINR_ESCBattVolt_V', 	'V', 	-1000000, 	1000000, 	'single', 	'',	1 );
a2l_mon('VDINR_ESCBattVoltValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VDINR_HWAccelPedalPosn_pct', 	'pct', 	-1000000, 	1000000, 	'single', 	'',	1 );
a2l_mon('VDINR_HWAccelPedalPosnValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VDINR_CurDriverTqReq_Nm', 	'Nm', 	-1000000, 	1000000, 	'single', 	'',	1 );
a2l_mon('VDINR_CurDriverTqReqValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VDINR_TCMGearPosnReqAllow_enum', 	'enum', 	0, 	255, 	'uint8', 	'',	1 );
a2l_mon('VDINR_TCMGearPosnReqAllowValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VDINR_MSAStatus_enum', 	'enum', 	0, 	255, 	'uint8', 	'',	1 );
a2l_mon('VDINR_MSAStatusValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VDINR_HybridLimpHome_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VDINR_HybridLimpHomeValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VDINR_HCUMILReq_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VDINR_HCUMILReqValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VDINR_ACCOnVCU_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VDINR_ACCOnVCUValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VDINR_ACCResSpdIncVCU_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VDINR_ACCResSpdIncVCUValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VDINR_ACCSetSpdDecVCU_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VDINR_ACCSetSpdDecVCUValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VDINR_ACCDistVCU_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VDINR_ACCDistVCUValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VDINR_ACCTimeGapIncVCU_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VDINR_ACCTimeGapIncVCUValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VDINR_ACCTimeGapDecVCU_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VDINR_ACCTimeGapDecVCUValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VDINR_LFCOnVCU_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VDINR_LFCOnVCUValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VDINR_MSAOnVCU_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VDINR_MSAOnVCUValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VDINR_AEBEnableH_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VDINR_AEBEnableHValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VDINR_FCWEnableH_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VDINR_FCWEnableHValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VDINR_CSCEnableH_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VDINR_CSCEnableHValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VDINR_LKAEnableH_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VDINR_LKAEnableHValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VDINR_MAPAEnableH_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VDINR_MAPAEnableHValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VDINR_LCSEnableH_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VDINR_LCSEnableHValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VDINR_FCWWarningModeH_enum', 	'enum', 	0, 	255, 	'uint8', 	'',	1 );
a2l_mon('VDINR_FCWWarningModeHValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VDINR_DefMaxACCSetSpeed_kph', 	'kph', 	-1000000, 	1000000, 	'single', 	'',	1 );
a2l_mon('VDINR_DefMaxACCSetSpeedValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VDINR_LFCPilotOnH_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VDINR_LFCPilotOnHValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VDINR_LFCPilotCancelH_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VDINR_LFCPilotCancelHValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VDINR_ACCOnH_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VDINR_ACCOnHValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VDINR_ACCCancelH_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VDINR_ACCCancelHValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VDINR_ACCResSpdIncH_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VDINR_ACCResSpdIncHValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VDINR_ACCSetSpdDecH_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VDINR_ACCSetSpdDecHValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VDINR_ACCSpdIncH_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VDINR_ACCSpdIncHValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VDINR_ACCSpdDecH_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VDINR_ACCSpdDecHValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VDINR_ACCTimeGapIncH_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VDINR_ACCTimeGapIncHValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VDINR_ACCTimeGapDecH_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VDINR_ACCTimeGapDecHValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VDINR_IGSAOnH_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VDINR_IGSAOnHValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VDINR_IGSAResSpdIncH_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VDINR_IGSAResSpdIncHValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VDINR_IGSASetSpdDecH_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VDINR_IGSASetSpdDecHValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VDINR_IGSASwitchModeH_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VDINR_IGSASwitchModeHValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VDINR_LaneQualityL_enum', 	'enum', 	0, 	255, 	'uint8', 	'',	1 );
a2l_mon('VDINR_LaneQualityLValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VDINR_LaneQualityR_enum', 	'enum', 	0, 	255, 	'uint8', 	'',	1 );
a2l_mon('VDINR_LaneQualityRValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VDINR_LaneC0LRaw_m', 	'm', 	-1000000, 	1000000, 	'single', 	'',	1 );
a2l_mon('VDINR_LaneC0LValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VDINR_LaneC1LRaw_rad', 	'rad', 	-1000000, 	1000000, 	'single', 	'',	1 );
a2l_mon('VDINR_LaneC1LValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VDINR_LaneC2LRaw_rat', 	'rat', 	-1000000, 	1000000, 	'single', 	'',	1 );
a2l_mon('VDINR_LaneC2LValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VDINR_LaneC3LRaw_rat', 	'rat', 	-1000000, 	1000000, 	'single', 	'',	1 );
a2l_mon('VDINR_LaneC3LValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VDINR_LaneC0RRaw_m', 	'm', 	-1000000, 	1000000, 	'single', 	'',	1 );
a2l_mon('VDINR_LaneC0RValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VDINR_LaneC1RRaw_rad', 	'rad', 	-1000000, 	1000000, 	'single', 	'',	1 );
a2l_mon('VDINR_LaneC1RValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VDINR_LaneC2RRaw_rat', 	'rat', 	-1000000, 	1000000, 	'single', 	'',	1 );
a2l_mon('VDINR_LaneC2RValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VDINR_LaneC3RRaw_rat', 	'rat', 	-1000000, 	1000000, 	'single', 	'',	1 );
a2l_mon('VDINR_LaneC3RValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VDINR_LaneTypeL_enum', 	'enum', 	0, 	255, 	'uint8', 	'',	1 );
a2l_mon('VDINR_LaneTypeLValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VDINR_LaneTypeR_enum', 	'enum', 	0, 	255, 	'uint8', 	'',	1 );
a2l_mon('VDINR_LaneTypeRValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VDINR_LaneMrkClrL_enum', 	'enum', 	0, 	255, 	'uint8', 	'',	1 );
a2l_mon('VDINR_LaneMrkClrLValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VDINR_LaneMrkClrR_enum', 	'enum', 	0, 	255, 	'uint8', 	'',	1 );
a2l_mon('VDINR_LaneMrkClrRValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VDINR_LaneMrkWidL_m', 	'm', 	-1000000, 	1000000, 	'single', 	'',	1 );
a2l_mon('VDINR_LaneMrkWidLValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VDINR_LaneMrkWidR_m', 	'm', 	-1000000, 	1000000, 	'single', 	'',	1 );
a2l_mon('VDINR_LaneMrkWidRValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VDINR_ViewRangeStartL_m', 	'm', 	-1000000, 	1000000, 	'single', 	'',	1 );
a2l_mon('VDINR_ViewRangeStartLValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VDINR_ViewRangeStartR_m', 	'm', 	-1000000, 	1000000, 	'single', 	'',	1 );
a2l_mon('VDINR_ViewRangeStartRValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VDINR_ViewRangeEndL_m', 	'm', 	-1000000, 	1000000, 	'single', 	'',	1 );
a2l_mon('VDINR_ViewRangeEndLValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VDINR_ViewRangeEndR_m', 	'm', 	-1000000, 	1000000, 	'single', 	'',	1 );
a2l_mon('VDINR_ViewRangeEndRValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VDINR_TLCL_s', 	's', 	-1000000, 	1000000, 	'single', 	'',	1 );
a2l_mon('VDINR_TLCLValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VDINR_TLCR_s', 	's', 	-1000000, 	1000000, 	'single', 	'',	1 );
a2l_mon('VDINR_TLCRValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VDINR_LaneCrosL_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VDINR_LaneCrosLValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VDINR_LaneCrosR_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VDINR_LaneCrosRValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VDINR_NextLaneC0L_m', 	'm', 	-1000000, 	1000000, 	'single', 	'',	1 );
a2l_mon('VDINR_NextLaneC0LValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VDINR_NextLaneC1L_rad', 	'rad', 	-1000000, 	1000000, 	'single', 	'',	1 );
a2l_mon('VDINR_NextLaneC1LValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VDINR_NextLaneC2L_rat', 	'rat', 	-1000000, 	1000000, 	'single', 	'',	1 );
a2l_mon('VDINR_NextLaneC2LValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VDINR_NextLaneC3L_rat', 	'rat', 	-1000000, 	1000000, 	'single', 	'',	1 );
a2l_mon('VDINR_NextLaneC3LValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VDINR_NextLaneQualityL_enum', 	'enum', 	0, 	255, 	'uint8', 	'',	1 );
a2l_mon('VDINR_NextLaneQualityLValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VDINR_NextLaneTypeL_enum', 	'enum', 	0, 	255, 	'uint8', 	'',	1 );
a2l_mon('VDINR_NextLaneTypeLValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VDINR_NextLaneMrkWidL_m', 	'm', 	-1000000, 	1000000, 	'single', 	'',	1 );
a2l_mon('VDINR_NextLaneMrkWidLValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VDINR_NextViewRangeStartL_m', 	'm', 	-1000000, 	1000000, 	'single', 	'',	1 );
a2l_mon('VDINR_NextViewRangeStartLValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VDINR_NextViewRangeEndL_m', 	'm', 	-1000000, 	1000000, 	'single', 	'',	1 );
a2l_mon('VDINR_NextViewRangeEndLValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VDINR_NextLaneC0R_m', 	'm', 	-1000000, 	1000000, 	'single', 	'',	1 );
a2l_mon('VDINR_NextLaneC0RValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VDINR_NextLaneC1R_rad', 	'rad', 	-1000000, 	1000000, 	'single', 	'',	1 );
a2l_mon('VDINR_NextLaneC1RValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VDINR_NextLaneC2R_rat', 	'rat', 	-1000000, 	1000000, 	'single', 	'',	1 );
a2l_mon('VDINR_NextLaneC2RValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VDINR_NextLaneC3R_rat', 	'rat', 	-1000000, 	1000000, 	'single', 	'',	1 );
a2l_mon('VDINR_NextLaneC3RValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VDINR_NextLaneQualityR_enum', 	'enum', 	0, 	255, 	'uint8', 	'',	1 );
a2l_mon('VDINR_NextLaneQualityRValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VDINR_NextLaneTypeR_enum', 	'enum', 	0, 	255, 	'uint8', 	'',	1 );
a2l_mon('VDINR_NextLaneTypeRValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VDINR_NextLaneMrkWidR_m', 	'm', 	-1000000, 	1000000, 	'single', 	'',	1 );
a2l_mon('VDINR_NextLaneMrkWidRValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VDINR_NextViewRangeStartR_m', 	'm', 	-1000000, 	1000000, 	'single', 	'',	1 );
a2l_mon('VDINR_NextViewRangeStartRValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VDINR_NextViewRangeEndR_m', 	'm', 	-1000000, 	1000000, 	'single', 	'',	1 );
a2l_mon('VDINR_NextViewRangeEndRValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VDINR_CamNofObjects_num', 	'num', 	0, 	255, 	'uint8', 	'',	1 );
a2l_mon('VDINR_CamNofObjectsValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VDINR_CamGoDecision_enum', 	'enum', 	0, 	255, 	'uint8', 	'',	1 );
a2l_mon('VDINR_CamGoDecisionValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VDINR_CloseCarDetected_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VDINR_CloseCarDetectedValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VDINR_RightCarCutIn_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VDINR_RightCarCutInValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VDINR_LeftCarCutIn_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VDINR_LeftCarCutInValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VDINR_CamFSImpairedVD_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VDINR_CamFSImpairedVDValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VDINR_CamFSLowSun_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VDINR_CamFSLowSunValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VDINR_CamFSBlurImage_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VDINR_CamFSBlurImageValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VDINR_CamFSSmearImage_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VDINR_CamFSSmearImageValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VDINR_CamFSPartialBlockage_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VDINR_CamFSPartialBlockageValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VDINR_CamFSFullBlockage_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VDINR_CamFSFullBlockageValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VDINR_CamFSSplashes_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VDINR_CamFSSplashesValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VDINR_CamFSOutofCal_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VDINR_CamFSOutofCalValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VDINR_CamFSCalMisalign_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VDINR_CamFSCalMisalignValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VDINR_CamFSSmearedspots_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VDINR_CamFSSmearedspotsValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VDINR_CamFSSpotHalosFrozen_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VDINR_CamFSSpotHalosFrozenValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VDINR_CamFSFoggySpots_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VDINR_CamFSFoggySpotsValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VDINR_CamFSSunRay_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VDINR_CamFSSunRayValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VDINR_CamObsID10_num', 	'num', 	0, 	255, 	'uint8', 	'',	10 );
a2l_mon('VDINR_CamObsIDValid10_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	10 );
a2l_mon('VDINR_CamObsPosX10_m', 	'm', 	-1000000, 	1000000, 	'single', 	'',	10 );
a2l_mon('VDINR_CamObsPosXValid10_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	10 );
a2l_mon('VDINR_CamObsPosY10_m', 	'm', 	-1000000, 	1000000, 	'single', 	'',	10 );
a2l_mon('VDINR_CamObsPosYValid10_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	10 );
a2l_mon('VDINR_CamObsVelX10_mps', 	'mps', 	-1000000, 	1000000, 	'single', 	'',	10 );
a2l_mon('VDINR_CamObsVelXValid10_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	10 );
a2l_mon('VDINR_CamObsVelY10_mps', 	'mps', 	-1000000, 	1000000, 	'single', 	'',	10 );
a2l_mon('VDINR_CamObsVelYValid10_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	10 );
a2l_mon('VDINR_CamObsAccX10_mps2', 	'mps2', 	-1000000, 	1000000, 	'single', 	'',	10 );
a2l_mon('VDINR_CamObsAccXValid10_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	10 );
a2l_mon('VDINR_CamObsAng10_deg', 	'deg', 	-1000000, 	1000000, 	'single', 	'',	10 );
a2l_mon('VDINR_CamObsAngValid10_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	10 );
a2l_mon('VDINR_CamObsAngRate10_degps', 	'degps', 	-1000000, 	1000000, 	'single', 	'',	10 );
a2l_mon('VDINR_CamObsAngRateValid10_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	10 );
a2l_mon('VDINR_CamObsLength10_m', 	'm', 	-1000000, 	1000000, 	'single', 	'',	10 );
a2l_mon('VDINR_CamObsLengthValid10_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	10 );
a2l_mon('VDINR_CamObsWidth10_m', 	'm', 	-1000000, 	1000000, 	'single', 	'',	10 );
a2l_mon('VDINR_CamObsWidthValid10_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	10 );
a2l_mon('VDINR_CamObsType10_enum', 	'enum', 	0, 	255, 	'uint8', 	'',	10 );
a2l_mon('VDINR_CamObsTypeValid10_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	10 );
a2l_mon('VDINR_CamObsStatus10_enum', 	'enum', 	0, 	255, 	'uint8', 	'',	10 );
a2l_mon('VDINR_CamObsStatusValid10_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	10 );
a2l_mon('VDINR_CamObsValid10_enum', 	'enum', 	0, 	255, 	'uint8', 	'',	10 );
a2l_mon('VDINR_CamObsValidValid10_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	10 );
a2l_mon('VDINR_CamObsMoveInO10_enum', 	'enum', 	0, 	255, 	'uint8', 	'',	10 );
a2l_mon('VDINR_CamObsMoveInOValid10_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	10 );
a2l_mon('VDINR_CamObsBlinker10_enum', 	'enum', 	0, 	255, 	'uint8', 	'',	10 );
a2l_mon('VDINR_CamObsBlinkerValid10_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	10 );
a2l_mon('VDINR_CamObsBrakeLight10_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	10 );
a2l_mon('VDINR_CamObsBrakeLightValid10_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	10 );
a2l_mon('VDINR_CamObsAge10_cnt', 	'cnt', 	0, 	255, 	'uint8', 	'',	10 );
a2l_mon('VDINR_CamObsAgeValid10_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	10 );
a2l_mon('VDINR_CamObsLane10_enum', 	'enum', 	0, 	255, 	'uint8', 	'',	10 );
a2l_mon('VDINR_CamObsLaneValid10_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	10 );
a2l_mon('VDINR_CamObsCIPV10_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	10 );
a2l_mon('VDINR_CamObsCIPVValid10_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	10 );
a2l_mon('VDINR_CamObsReplaced10_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	10 );
a2l_mon('VDINR_CamObsReplacedValid10_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	10 );
a2l_mon('VDINR_IgnitionActive_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VDINR_VehSpd_mps', 	'mps', 	-1000000, 	1000000, 	'single', 	'',	1 );
a2l_mon('VDINR_SteerAngle_rad', 	'rad', 	-1000000, 	1000000, 	'single', 	'',	1 );
a2l_mon('VDINR_YawRate_radps', 	'radps', 	-1000000, 	1000000, 	'single', 	'',	1 );
a2l_mon('VDINR_LaneC0LKalF_m', 	'm', 	-1000000, 	1000000, 	'single', 	'',	1 );
a2l_mon('VDINR_LaneC1LKalF_rad', 	'rad', 	-1000000, 	1000000, 	'single', 	'',	1 );
a2l_mon('VDINR_LaneC2LKalF_rat', 	'rat', 	-1000000, 	1000000, 	'single', 	'',	1 );
a2l_mon('VDINR_LaneC3LKalF_rat', 	'rat', 	-1000000, 	1000000, 	'single', 	'',	1 );
a2l_mon('VDINR_LaneC0RKalF_m', 	'm', 	-1000000, 	1000000, 	'single', 	'',	1 );
a2l_mon('VDINR_LaneC1RKalF_rad', 	'rad', 	-1000000, 	1000000, 	'single', 	'',	1 );
a2l_mon('VDINR_LaneC2RKalF_rat', 	'rat', 	-1000000, 	1000000, 	'single', 	'',	1 );
a2l_mon('VDINR_LaneC3RKalF_rat', 	'rat', 	-1000000, 	1000000, 	'single', 	'',	1 );
a2l_mon('VDINR_ABSCANValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VDINR_BCMCANValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VDINR_ECMCANValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VDINR_TCMCANValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VDINR_EPSCANValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VDINR_METERCANValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VDINR_ACCANValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VDINR_EPBCANValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VDINR_VCUCANValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VDINR_HMICANValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VDINR_CSWCANValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VDINR_EPMCANValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VDINR_ABSCANAlive_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VDINR_BCMCANAlive_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VDINR_ECMCANAlive_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VDINR_TCMCANAlive_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VDINR_EPSCANAlive_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VDINR_METERCANAlive_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VDINR_ACCANAlive_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VDINR_EPBCANAlive_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VDINR_VCUCANAlive_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VDINR_HMICANAlive_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VDINR_CSWCANAlive_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VDINR_EPMCANAlive_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VDINR_CamInternalError_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VDINR_FCWEnableO_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VDINR_AEBEnableO_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VDINR_TurnSignalSw_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VDINR_LaneC0L_m', 	'm', 	-1000000, 	1000000, 	'single', 	'',	1 );
a2l_mon('VDINR_LaneC1L_rad', 	'rad', 	-1000000, 	1000000, 	'single', 	'',	1 );
a2l_mon('VDINR_LaneC2L_rat', 	'rat', 	-1000000, 	1000000, 	'single', 	'',	1 );
a2l_mon('VDINR_LaneC3L_rat', 	'rat', 	-1000000, 	1000000, 	'single', 	'',	1 );
a2l_mon('VDINR_LaneC0R_m', 	'm', 	-1000000, 	1000000, 	'single', 	'',	1 );
a2l_mon('VDINR_LaneC1R_rad', 	'rad', 	-1000000, 	1000000, 	'single', 	'',	1 );
a2l_mon('VDINR_LaneC2R_rat', 	'rat', 	-1000000, 	1000000, 	'single', 	'',	1 );
a2l_mon('VDINR_LaneC3R_rat', 	'rat', 	-1000000, 	1000000, 	'single', 	'',	1 );
