% =========== $Update Time : 07-Nov-2016 12:37:54 $  =========
disp('Loading $Id: hal_var.m 1526 2016-11-07 08:20:13Z chimotsai $')

%% Calibration Name, Units, Min, Max, Data Type, Comment
a2l_par('KHAL_MssgIdObjStatus_num', 	'num', 	0, 	5000, 	'uint16', 	'' );
a2l_par('KHAL_MssgIdObj1_num', 	'num', 	0, 	5000, 	'uint16', 	'' );
a2l_par('KHAL_MssgIdObj2_num', 	'num', 	0, 	5000, 	'uint16', 	'' );

%% Monitored Signals
% Module Signals %
a2l_mon('VHAL_ABS2TransChecksum_raw8', 	'raw8', 	0, 	255, 	'uint8', 	'',	1 );
a2l_mon('VHAL_ABS2CalcChecksum_raw8', 	'raw8', 	0, 	255, 	'uint8', 	'',	1 );
a2l_mon('VHAL_SAS1TransChecksum_raw8', 	'raw8', 	0, 	255, 	'uint8', 	'',	1 );
a2l_mon('VHAL_SAS1CalcChecksum_raw8', 	'raw8', 	0, 	255, 	'uint8', 	'',	1 );
a2l_mon('VHAL_EPAS2TransChecksum_raw8', 	'raw8', 	0, 	255, 	'uint8', 	'',	1 );
a2l_mon('VHAL_EPAS2CalcChecksum_raw8', 	'raw8', 	0, 	255, 	'uint8', 	'',	1 );
a2l_mon('VHAL_EPAS3TransChecksum_raw8', 	'raw8', 	0, 	255, 	'uint8', 	'',	1 );
a2l_mon('VHAL_EPAS3CalcChecksum_raw8', 	'raw8', 	0, 	255, 	'uint8', 	'',	1 );
a2l_mon('VHAL_VCU1TransChecksum_raw8', 	'raw8', 	0, 	255, 	'uint8', 	'',	1 );
a2l_mon('VHAL_VCU1CalcChecksum_raw8', 	'raw8', 	0, 	255, 	'uint8', 	'',	1 );
a2l_mon('VHAL_VCU2TransChecksum_raw8', 	'raw8', 	0, 	255, 	'uint8', 	'',	1 );
a2l_mon('VHAL_VCU2CalcChecksum_raw8', 	'raw8', 	0, 	255, 	'uint8', 	'',	1 );

% Output Signals %
a2l_mon('VHAL_IgnitionVolt_V', 	'V', 	-1000000, 	1000000, 	'single', 	'',	1 );
a2l_mon('VHAL_VbatprotVolt_V', 	'V', 	-1000000, 	1000000, 	'single', 	'',	1 );
a2l_mon('VHAL_AppTime_ms', 	'ms', 	-9000000000, 	9000000000, 	'single', 	'',	1 );
a2l_mon('VHAL_ADCFault_enum', 	'enum', 	0, 	255, 	'uint8', 	'',	1 );
a2l_mon('VHAL_EEPROMFault_enum', 	'enum', 	0, 	255, 	'uint8', 	'',	1 );
a2l_mon('VHAL_RAMFault_enum', 	'enum', 	0, 	255, 	'uint8', 	'',	1 );
a2l_mon('VHAL_ROMFault_enum', 	'enum', 	0, 	255, 	'uint8', 	'',	1 );
a2l_mon('VHAL_VREF1Fault_enum', 	'enum', 	0, 	255, 	'uint8', 	'',	1 );
a2l_mon('VHAL_VREF2Fault_enum', 	'enum', 	0, 	255, 	'uint8', 	'',	1 );
a2l_mon('VHAL_AccelPedalPosn_pct', 	'pct', 	-1000000, 	1000000, 	'single', 	'',	1 );
a2l_mon('VHAL_AccelPedalPosnInvalid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VHAL_EffAccelPedalPosn_pct', 	'pct', 	-1000000, 	1000000, 	'single', 	'',	1 );
a2l_mon('VHAL_EffAccelPedalPosnInvalid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VHAL_EngSpd_erpm', 	'erpm', 	-1000000, 	1000000, 	'single', 	'',	1 );
a2l_mon('VHAL_EngSpdInvalid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VHAL_EngTqIndicated_Nm', 	'Nm', 	-1000000, 	1000000, 	'single', 	'',	1 );
a2l_mon('VHAL_EngTqIndicatedInvalid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VHAL_EngTqIndicatedCOR_Nm', 	'Nm', 	-1000000, 	1000000, 	'single', 	'',	1 );
a2l_mon('VHAL_EngTqIndicatedCORInvalid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VHAL_EngTqUnCORFault_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VHAL_EngTqFriction_Nm', 	'Nm', 	-1000000, 	1000000, 	'single', 	'',	1 );
a2l_mon('VHAL_EngTqFrictionInvalid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VHAL_EngTqMax_Nm', 	'Nm', 	-1000000, 	1000000, 	'single', 	'',	1 );
a2l_mon('VHAL_EngTqMaxInvalid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VHAL_EngTqMin_Nm', 	'Nm', 	-1000000, 	1000000, 	'single', 	'',	1 );
a2l_mon('VHAL_EngTqMinInvalid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VHAL_EMSHybridOpState_enum', 	'enum', 	0, 	255, 	'uint8', 	'',	1 );
a2l_mon('VHAL_EMSOpState_enum', 	'enum', 	0, 	255, 	'uint8', 	'',	1 );
a2l_mon('VHAL_ECM9RollCnt_cnt', 	'cnt', 	0, 	255, 	'uint8', 	'',	1 );
a2l_mon('VHAL_EngHoodOpen_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VHAL_OBDWarnCycAchiv_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VHAL_OBDDriveCycAchiv_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VHAL_ABSActive_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VHAL_ABSFault_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VHAL_BrkLampOn_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VHAL_BrkLampSigInvalid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VHAL_EBDFault_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VHAL_ESCActive_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VHAL_ESCFault_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VHAL_HSAActive_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VHAL_HSAFault_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VHAL_TCSActive_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VHAL_TCSEnabled_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VHAL_TCSFault_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VHAL_VehSpd_kph', 	'kph', 	-1000000, 	1000000, 	'single', 	'',	1 );
a2l_mon('VHAL_VehSpdInvalid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VHAL_ABS2RollCnt_cnt', 	'cnt', 	0, 	255, 	'uint8', 	'',	1 );
a2l_mon('VHAL_ABS2ChkSumValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VHAL_LatAccel_G', 	'G', 	-1000000, 	1000000, 	'single', 	'',	1 );
a2l_mon('VHAL_LatAccelInvalid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VHAL_LongAccel_G', 	'G', 	-1000000, 	1000000, 	'single', 	'',	1 );
a2l_mon('VHAL_LongAccelInvalid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VHAL_MCPressure_bar', 	'bar', 	-1000000, 	1000000, 	'single', 	'',	1 );
a2l_mon('VHAL_MCPressureInvalid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VHAL_YawRate_degps', 	'degps', 	-1000000, 	1000000, 	'single', 	'',	1 );
a2l_mon('VHAL_YawRateInvalid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VHAL_SurfaceGrade_deg', 	'deg', 	-1000000, 	1000000, 	'single', 	'',	1 );
a2l_mon('VHAL_SurfaceGradeInvalid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VHAL_BrakBoosterPres_kPa', 	'kPa', 	-1000000, 	1000000, 	'single', 	'',	1 );
a2l_mon('VHAL_BrakBoosterPresInvalid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VHAL_LowBrakBoosterPres_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VHAL_ABS1RollCnt_cnt', 	'cnt', 	0, 	255, 	'uint8', 	'',	1 );
a2l_mon('VHAL_LFWheelSpeed_kph', 	'kph', 	-1000000, 	1000000, 	'single', 	'',	1 );
a2l_mon('VHAL_LFWheelSpeedInvalid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VHAL_LRWheelSpeed_kph', 	'kph', 	-1000000, 	1000000, 	'single', 	'',	1 );
a2l_mon('VHAL_LRWheelSpeedInvalid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VHAL_RFWheelSpeed_kph', 	'kph', 	-1000000, 	1000000, 	'single', 	'',	1 );
a2l_mon('VHAL_RFWheelSpeedInvalid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VHAL_RRWheelSpeed_kph', 	'kph', 	-1000000, 	1000000, 	'single', 	'',	1 );
a2l_mon('VHAL_RRWheelSpeedInvalid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VHAL_KeySwitchStatus_enum', 	'enum', 	0, 	255, 	'uint8', 	'',	1 );
a2l_mon('VHAL_TurnSignalSwL_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VHAL_TurnSignalSwR_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VHAL_DriverDoorOpen_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VHAL_PassengerDoorOpen_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VHAL_LRDoorOpen_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VHAL_RRDoorOpen_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VHAL_TailGateOpen_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VHAL_AnyDoorOpen_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VHAL_HazardLightSw_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VHAL_VehCrashed_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VHAL_VehCrashedInvalid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VHAL_ShifterPosn_enum', 	'enum', 	0, 	255, 	'uint8', 	'',	1 );
a2l_mon('VHAL_ShifterPosnInvalid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VHAL_NowGearPosn_enum', 	'enum', 	0, 	255, 	'uint8', 	'',	1 );
a2l_mon('VHAL_NowGearPosnInvalid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VHAL_TMTurbineSpd_rpm', 	'rpm', 	-1000000, 	1000000, 	'single', 	'',	1 );
a2l_mon('VHAL_TMTurbineSpdInvalid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VHAL_TqConvClutchSt_enum', 	'enum', 	0, 	255, 	'uint8', 	'',	1 );
a2l_mon('VHAL_TCMMILReq_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VHAL_TCMWinterMode_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VHAL_TCMPowerMode_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VHAL_TCMFaultStatus_enum', 	'enum', 	0, 	255, 	'uint8', 	'',	1 );
a2l_mon('VHAL_DriverMode_enum', 	'enum', 	0, 	255, 	'uint8', 	'',	1 );
a2l_mon('VHAL_SASAngle_deg', 	'deg', 	-1000000, 	1000000, 	'single', 	'',	1 );
a2l_mon('VHAL_SASAngleInvalid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VHAL_SASCalibrated_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VHAL_SASSensorValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VHAL_SAS1ChkSumValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VHAL_SAS1RollCnt_cnt', 	'cnt', 	0, 	255, 	'uint8', 	'',	1 );
a2l_mon('VHAL_SASSpeed_degps', 	'degps', 	-1000000, 	1000000, 	'single', 	'',	1 );
a2l_mon('VHAL_SASSpeedValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VHAL_EPASMILReq_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VHAL_RelSteerAngle_deg', 	'deg', 	-1000000, 	1000000, 	'single', 	'',	1 );
a2l_mon('VHAL_RelSteerAngleInvalid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VHAL_SteerTorque_Nm', 	'Nm', 	-1000000, 	1000000, 	'single', 	'',	1 );
a2l_mon('VHAL_SteerTorqueInvalid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VHAL_EPSElectPWR_A', 	'A', 	-1000000, 	1000000, 	'single', 	'',	1 );
a2l_mon('VHAL_EPSFailed_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VHAL_EPAS2ChkSumValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VHAL_EPAS2RollCnt_cnt', 	'cnt', 	0, 	255, 	'uint8', 	'',	1 );
a2l_mon('VHAL_AckCurStrAngReq_deg', 	'deg', 	-1000000, 	1000000, 	'single', 	'',	1 );
a2l_mon('VHAL_AckCurStrAngReqInvalid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VHAL_AckCurStrAngReqApplable_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VHAL_AckCurStrTqReq_Nm', 	'Nm', 	-1000000, 	1000000, 	'single', 	'',	1 );
a2l_mon('VHAL_AckCurStrTqReqInvalid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VHAL_AckCurStrTqReqApplable_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VHAL_EPSBattVolt_V', 	'V', 	-1000000, 	1000000, 	'single', 	'',	1 );
a2l_mon('VHAL_EPSBattVoltInvalid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VHAL_EPSLKAStatus_enum', 	'enum', 	0, 	255, 	'uint8', 	'',	1 );
a2l_mon('VHAL_EPSLFCStatus_enum', 	'enum', 	0, 	255, 	'uint8', 	'',	1 );
a2l_mon('VHAL_EPSADASAbReason_enum', 	'enum', 	0, 	255, 	'uint8', 	'',	1 );
a2l_mon('VHAL_EPAS3ChkSumValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VHAL_EPAS3RollCnt_cnt', 	'cnt', 	0, 	255, 	'uint8', 	'',	1 );
a2l_mon('VHAL_OdoMeter_km', 	'km', 	0, 	1000000, 	'uint32', 	'',	1 );
a2l_mon('VHAL_OdoMeterInvalid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VHAL_LowBrakeFluid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VHAL_ParkBrakeOn_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VHAL_SeatBeltNOTFasten_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VHAL_MeterVehSpd_kph', 	'kph', 	-1000000, 	1000000, 	'single', 	'',	1 );
a2l_mon('VHAL_MeterVehSpdInvalid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VHAL_OutsideTemp_degC', 	'degC', 	-1000000, 	1000000, 	'single', 	'',	1 );
a2l_mon('VHAL_OutsideTempInvalid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VHAL_ParkBrakeBindSta_enum', 	'enum', 	0, 	255, 	'uint8', 	'',	1 );
a2l_mon('VHAL_ParkBrakeBindStaInvalid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VHAL_RearFogSwOn_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VHAL_HighBeamSwOn_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VHAL_AckCurBrakDecReq_mps2', 	'mps2', 	-1000000, 	1000000, 	'single', 	'',	1 );
a2l_mon('VHAL_AckCurBrakDecReqInvalid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VHAL_AckCurBrakDecReqApplable_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VHAL_AckCurPTTqReq_Nm', 	'Nm', 	-1000000, 	1000000, 	'single', 	'',	1 );
a2l_mon('VHAL_AckCurPTTqReqInvalid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VHAL_AckCurPTTqReqApplable_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VHAL_AckCurVehDec_mps2', 	'mps2', 	-1000000, 	1000000, 	'single', 	'',	1 );
a2l_mon('VHAL_AckCurVehDecInvalid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VHAL_DeceContManag_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VHAL_DriverBrakPedalOn_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VHAL_DriverBrakPedalOnInvalid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VHAL_ECMExtnTqAvailable_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VHAL_ECMTqSource_enum', 	'enum', 	0, 	255, 	'uint8', 	'',	1 );
a2l_mon('VHAL_ESCBrakeStatus_enum', 	'enum', 	0, 	255, 	'uint8', 	'',	1 );
a2l_mon('VHAL_ESCExtnBrkAvailable_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VHAL_VCUSysFault_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VHAL_ESCBattVolt_V', 	'V', 	-1000000, 	1000000, 	'single', 	'',	1 );
a2l_mon('VHAL_ESCBattVoltInvalid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VHAL_VCU1ChkSumValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VHAL_VCU1RollCnt_cnt', 	'cnt', 	0, 	255, 	'uint8', 	'',	1 );
a2l_mon('VHAL_HWAccelPedalPosn_pct', 	'pct', 	-1000000, 	1000000, 	'single', 	'',	1 );
a2l_mon('VHAL_HWAccelPedalPosnInvalid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VHAL_CurDriverTqReq_Nm', 	'Nm', 	-1000000, 	1000000, 	'single', 	'',	1 );
a2l_mon('VHAL_CurDriverTqReqInvalid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VHAL_TCMGearPosnReqAllow_enum', 	'enum', 	0, 	255, 	'uint8', 	'',	1 );
a2l_mon('VHAL_MSAStatus_enum', 	'enum', 	0, 	255, 	'uint8', 	'',	1 );
a2l_mon('VHAL_VCU2ChkSumValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VHAL_VCU2RollCnt_cnt', 	'cnt', 	0, 	255, 	'uint8', 	'',	1 );
a2l_mon('VHAL_HybridLimpHome_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VHAL_HCU3RollCnt_cnt', 	'cnt', 	0, 	255, 	'uint8', 	'',	1 );
a2l_mon('VHAL_HCUMILReq_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VHAL_ACCOnVCU_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VHAL_ACCResSpdIncVCU_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VHAL_ACCSetSpdDecVCU_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VHAL_ACCTimeGapIncVCU_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VHAL_ACCTimeGapDecVCU_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VHAL_LFCOnVCU_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VHAL_MSAOnVCU_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VHAL_AEBEnableH_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VHAL_FCWEnableH_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VHAL_CSCEnableH_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VHAL_LKAEnableH_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VHAL_MAPAEnableH_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VHAL_LCSEnableH_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VHAL_LFCPilotOnH_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VHAL_LFCPilotCancelH_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VHAL_ACCOnH_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VHAL_ACCCancelH_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VHAL_ACCResSpdIncH_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VHAL_ACCSetSpdDecH_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VHAL_ACCSpdIncH_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VHAL_ACCSpdDecH_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VHAL_ACCTimeGapIncH_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VHAL_ACCTimeGapDecH_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VHAL_IGSAOnH_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VHAL_IGSAResSpdIncH_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VHAL_IGSASetSpdDecH_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VHAL_IGSASwitchModeH_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VHAL_FCWWarningModeH_enum', 	'enum', 	0, 	255, 	'uint8', 	'',	1 );
a2l_mon('VHAL_DefMaxACCSetSpeed_kph', 	'kph', 	-1000000, 	1000000, 	'single', 	'',	1 );
a2l_mon('VHAL_LaneQualityL_enum', 	'enum', 	0, 	255, 	'uint8', 	'',	1 );
a2l_mon('VHAL_LaneQualityR_enum', 	'enum', 	0, 	255, 	'uint8', 	'',	1 );
a2l_mon('VHAL_LaneC0L_m', 	'm', 	-1000000, 	1000000, 	'single', 	'',	1 );
a2l_mon('VHAL_LaneC1L_rad', 	'rad', 	-1000000, 	1000000, 	'single', 	'',	1 );
a2l_mon('VHAL_LaneC2L_rat', 	'rat', 	-1000000, 	1000000, 	'single', 	'',	1 );
a2l_mon('VHAL_LaneC3L_rat', 	'rat', 	-1000000, 	1000000, 	'single', 	'',	1 );
a2l_mon('VHAL_LaneC0R_m', 	'm', 	-1000000, 	1000000, 	'single', 	'',	1 );
a2l_mon('VHAL_LaneC1R_rad', 	'rad', 	-1000000, 	1000000, 	'single', 	'',	1 );
a2l_mon('VHAL_LaneC2R_rat', 	'rat', 	-1000000, 	1000000, 	'single', 	'',	1 );
a2l_mon('VHAL_LaneC3R_rat', 	'rat', 	-1000000, 	1000000, 	'single', 	'',	1 );
a2l_mon('VHAL_LaneTypeL_enum', 	'enum', 	0, 	255, 	'uint8', 	'',	1 );
a2l_mon('VHAL_LaneTypeR_enum', 	'enum', 	0, 	255, 	'uint8', 	'',	1 );
a2l_mon('VHAL_LaneMrkWidL_m', 	'm', 	-1000000, 	1000000, 	'single', 	'',	1 );
a2l_mon('VHAL_LaneMrkWidR_m', 	'm', 	-1000000, 	1000000, 	'single', 	'',	1 );
a2l_mon('VHAL_ViewRangeStartL_m', 	'm', 	-1000000, 	1000000, 	'single', 	'',	1 );
a2l_mon('VHAL_ViewRangeEndL_m', 	'm', 	-1000000, 	1000000, 	'single', 	'',	1 );
a2l_mon('VHAL_ViewRangeStartR_m', 	'm', 	-1000000, 	1000000, 	'single', 	'',	1 );
a2l_mon('VHAL_ViewRangeEndR_m', 	'm', 	-1000000, 	1000000, 	'single', 	'',	1 );
a2l_mon('VHAL_LaneCrosL_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VHAL_LaneCrosR_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VHAL_LaneMrkClrL_enum', 	'enum', 	0, 	255, 	'uint8', 	'',	1 );
a2l_mon('VHAL_LaneMrkClrR_enum', 	'enum', 	0, 	255, 	'uint8', 	'',	1 );
a2l_mon('VHAL_TLCL_s', 	's', 	-1000000, 	1000000, 	'single', 	'',	1 );
a2l_mon('VHAL_TLCR_s', 	's', 	-1000000, 	1000000, 	'single', 	'',	1 );
a2l_mon('VHAL_CamNofObjects_num', 	'num', 	0, 	255, 	'uint8', 	'',	1 );
a2l_mon('VHAL_CamGoDecision_enum', 	'enum', 	0, 	255, 	'uint8', 	'',	1 );
a2l_mon('VHAL_CloseCarDetected_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VHAL_RightCarCutIn_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VHAL_LeftCarCutIn_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VHAL_CamFSImpairedVD_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VHAL_CamFSLowSun_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VHAL_CamFSBlurImage_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VHAL_CamFSSmearImage_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VHAL_CamFSPartialBlockage_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VHAL_CamFSFullBlockage_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VHAL_CamFSSplashes_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VHAL_CamFSOutofCal_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VHAL_CamFSCalMisalign_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VHAL_CamFSSmearedspots_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VHAL_CamFSSpotHalosFrozen_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VHAL_CamFSFoggySpots_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VHAL_CamFSSunRay_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VHAL_CamObs1ID_num', 	'num', 	0, 	255, 	'uint8', 	'',	1 );
a2l_mon('VHAL_CamObs1PosX_m', 	'm', 	-1000000, 	1000000, 	'single', 	'',	1 );
a2l_mon('VHAL_CamObs1PosY_m', 	'm', 	-1000000, 	1000000, 	'single', 	'',	1 );
a2l_mon('VHAL_CamObs1VelX_mps', 	'mps', 	-1000000, 	1000000, 	'single', 	'',	1 );
a2l_mon('VHAL_CamObs1Type_enum', 	'enum', 	0, 	255, 	'uint8', 	'',	1 );
a2l_mon('VHAL_CamObs1Status_enum', 	'enum', 	0, 	255, 	'uint8', 	'',	1 );
a2l_mon('VHAL_CamObs1Valid_enum', 	'enum', 	0, 	255, 	'uint8', 	'',	1 );
a2l_mon('VHAL_CamObs1MoveInO_enum', 	'enum', 	0, 	255, 	'uint8', 	'',	1 );
a2l_mon('VHAL_CamObs1Blinker_enum', 	'enum', 	0, 	255, 	'uint8', 	'',	1 );
a2l_mon('VHAL_CamObs1BrakeLight_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VHAL_CamObs1Length_m', 	'm', 	-1000000, 	1000000, 	'single', 	'',	1 );
a2l_mon('VHAL_CamObs1Width_m', 	'm', 	-1000000, 	1000000, 	'single', 	'',	1 );
a2l_mon('VHAL_CamObs1Age_cnt', 	'cnt', 	0, 	255, 	'uint8', 	'',	1 );
a2l_mon('VHAL_CamObs1Lane_enum', 	'enum', 	0, 	255, 	'uint8', 	'',	1 );
a2l_mon('VHAL_CamObs1CIPV_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VHAL_CamObs1VelY_mps', 	'mps', 	-1000000, 	1000000, 	'single', 	'',	1 );
a2l_mon('VHAL_CamObs1AccX_mps2', 	'mps2', 	-1000000, 	1000000, 	'single', 	'',	1 );
a2l_mon('VHAL_CamObs1Ang_deg', 	'deg', 	-1000000, 	1000000, 	'single', 	'',	1 );
a2l_mon('VHAL_CamObs1AngRate_degps', 	'degps', 	-1000000, 	1000000, 	'single', 	'',	1 );
a2l_mon('VHAL_CamObs1Replaced_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VHAL_CamObs2ID_num', 	'num', 	0, 	255, 	'uint8', 	'',	1 );
a2l_mon('VHAL_CamObs2PosX_m', 	'm', 	-1000000, 	1000000, 	'single', 	'',	1 );
a2l_mon('VHAL_CamObs2PosY_m', 	'm', 	-1000000, 	1000000, 	'single', 	'',	1 );
a2l_mon('VHAL_CamObs2VelX_mps', 	'mps', 	-1000000, 	1000000, 	'single', 	'',	1 );
a2l_mon('VHAL_CamObs2Type_enum', 	'enum', 	0, 	255, 	'uint8', 	'',	1 );
a2l_mon('VHAL_CamObs2Status_enum', 	'enum', 	0, 	255, 	'uint8', 	'',	1 );
a2l_mon('VHAL_CamObs2Valid_enum', 	'enum', 	0, 	255, 	'uint8', 	'',	1 );
a2l_mon('VHAL_CamObs2MoveInO_enum', 	'enum', 	0, 	255, 	'uint8', 	'',	1 );
a2l_mon('VHAL_CamObs2Blinker_enum', 	'enum', 	0, 	255, 	'uint8', 	'',	1 );
a2l_mon('VHAL_CamObs2BrakeLight_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VHAL_CamObs2Length_m', 	'm', 	-1000000, 	1000000, 	'single', 	'',	1 );
a2l_mon('VHAL_CamObs2Width_m', 	'm', 	-1000000, 	1000000, 	'single', 	'',	1 );
a2l_mon('VHAL_CamObs2Age_cnt', 	'cnt', 	0, 	255, 	'uint8', 	'',	1 );
a2l_mon('VHAL_CamObs2Lane_enum', 	'enum', 	0, 	255, 	'uint8', 	'',	1 );
a2l_mon('VHAL_CamObs2CIPV_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VHAL_CamObs2VelY_mps', 	'mps', 	-1000000, 	1000000, 	'single', 	'',	1 );
a2l_mon('VHAL_CamObs2AccX_mps2', 	'mps2', 	-1000000, 	1000000, 	'single', 	'',	1 );
a2l_mon('VHAL_CamObs2Ang_deg', 	'deg', 	-1000000, 	1000000, 	'single', 	'',	1 );
a2l_mon('VHAL_CamObs2AngRate_degps', 	'degps', 	-1000000, 	1000000, 	'single', 	'',	1 );
a2l_mon('VHAL_CamObs2Replaced_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VHAL_CamObs3ID_num', 	'num', 	0, 	255, 	'uint8', 	'',	1 );
a2l_mon('VHAL_CamObs3PosX_m', 	'm', 	-1000000, 	1000000, 	'single', 	'',	1 );
a2l_mon('VHAL_CamObs3PosY_m', 	'm', 	-1000000, 	1000000, 	'single', 	'',	1 );
a2l_mon('VHAL_CamObs3VelX_mps', 	'mps', 	-1000000, 	1000000, 	'single', 	'',	1 );
a2l_mon('VHAL_CamObs3Type_enum', 	'enum', 	0, 	255, 	'uint8', 	'',	1 );
a2l_mon('VHAL_CamObs3Status_enum', 	'enum', 	0, 	255, 	'uint8', 	'',	1 );
a2l_mon('VHAL_CamObs3Valid_enum', 	'enum', 	0, 	255, 	'uint8', 	'',	1 );
a2l_mon('VHAL_CamObs3MoveInO_enum', 	'enum', 	0, 	255, 	'uint8', 	'',	1 );
a2l_mon('VHAL_CamObs3Blinker_enum', 	'enum', 	0, 	255, 	'uint8', 	'',	1 );
a2l_mon('VHAL_CamObs3BrakeLight_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VHAL_CamObs3Length_m', 	'm', 	-1000000, 	1000000, 	'single', 	'',	1 );
a2l_mon('VHAL_CamObs3Width_m', 	'm', 	-1000000, 	1000000, 	'single', 	'',	1 );
a2l_mon('VHAL_CamObs3Age_cnt', 	'cnt', 	0, 	255, 	'uint8', 	'',	1 );
a2l_mon('VHAL_CamObs3Lane_enum', 	'enum', 	0, 	255, 	'uint8', 	'',	1 );
a2l_mon('VHAL_CamObs3CIPV_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VHAL_CamObs3VelY_mps', 	'mps', 	-1000000, 	1000000, 	'single', 	'',	1 );
a2l_mon('VHAL_CamObs3AccX_mps2', 	'mps2', 	-1000000, 	1000000, 	'single', 	'',	1 );
a2l_mon('VHAL_CamObs3Ang_deg', 	'deg', 	-1000000, 	1000000, 	'single', 	'',	1 );
a2l_mon('VHAL_CamObs3AngRate_degps', 	'degps', 	-1000000, 	1000000, 	'single', 	'',	1 );
a2l_mon('VHAL_CamObs3Replaced_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VHAL_CamObs4ID_num', 	'num', 	0, 	255, 	'uint8', 	'',	1 );
a2l_mon('VHAL_CamObs4PosX_m', 	'm', 	-1000000, 	1000000, 	'single', 	'',	1 );
a2l_mon('VHAL_CamObs4PosY_m', 	'm', 	-1000000, 	1000000, 	'single', 	'',	1 );
a2l_mon('VHAL_CamObs4VelX_mps', 	'mps', 	-1000000, 	1000000, 	'single', 	'',	1 );
a2l_mon('VHAL_CamObs4Type_enum', 	'enum', 	0, 	255, 	'uint8', 	'',	1 );
a2l_mon('VHAL_CamObs4Status_enum', 	'enum', 	0, 	255, 	'uint8', 	'',	1 );
a2l_mon('VHAL_CamObs4Valid_enum', 	'enum', 	0, 	255, 	'uint8', 	'',	1 );
a2l_mon('VHAL_CamObs4MoveInO_enum', 	'enum', 	0, 	255, 	'uint8', 	'',	1 );
a2l_mon('VHAL_CamObs4Blinker_enum', 	'enum', 	0, 	255, 	'uint8', 	'',	1 );
a2l_mon('VHAL_CamObs4BrakeLight_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VHAL_CamObs4Length_m', 	'm', 	-1000000, 	1000000, 	'single', 	'',	1 );
a2l_mon('VHAL_CamObs4Width_m', 	'm', 	-1000000, 	1000000, 	'single', 	'',	1 );
a2l_mon('VHAL_CamObs4Age_cnt', 	'cnt', 	0, 	255, 	'uint8', 	'',	1 );
a2l_mon('VHAL_CamObs4Lane_enum', 	'enum', 	0, 	255, 	'uint8', 	'',	1 );
a2l_mon('VHAL_CamObs4CIPV_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VHAL_CamObs4VelY_mps', 	'mps', 	-1000000, 	1000000, 	'single', 	'',	1 );
a2l_mon('VHAL_CamObs4AccX_mps2', 	'mps2', 	-1000000, 	1000000, 	'single', 	'',	1 );
a2l_mon('VHAL_CamObs4Ang_deg', 	'deg', 	-1000000, 	1000000, 	'single', 	'',	1 );
a2l_mon('VHAL_CamObs4AngRate_degps', 	'degps', 	-1000000, 	1000000, 	'single', 	'',	1 );
a2l_mon('VHAL_CamObs4Replaced_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VHAL_CamObs5ID_num', 	'num', 	0, 	255, 	'uint8', 	'',	1 );
a2l_mon('VHAL_CamObs5PosX_m', 	'm', 	-1000000, 	1000000, 	'single', 	'',	1 );
a2l_mon('VHAL_CamObs5PosY_m', 	'm', 	-1000000, 	1000000, 	'single', 	'',	1 );
a2l_mon('VHAL_CamObs5VelX_mps', 	'mps', 	-1000000, 	1000000, 	'single', 	'',	1 );
a2l_mon('VHAL_CamObs5Type_enum', 	'enum', 	0, 	255, 	'uint8', 	'',	1 );
a2l_mon('VHAL_CamObs5Status_enum', 	'enum', 	0, 	255, 	'uint8', 	'',	1 );
a2l_mon('VHAL_CamObs5Valid_enum', 	'enum', 	0, 	255, 	'uint8', 	'',	1 );
a2l_mon('VHAL_CamObs5MoveInO_enum', 	'enum', 	0, 	255, 	'uint8', 	'',	1 );
a2l_mon('VHAL_CamObs5Blinker_enum', 	'enum', 	0, 	255, 	'uint8', 	'',	1 );
a2l_mon('VHAL_CamObs5BrakeLight_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VHAL_CamObs5Length_m', 	'm', 	-1000000, 	1000000, 	'single', 	'',	1 );
a2l_mon('VHAL_CamObs5Width_m', 	'm', 	-1000000, 	1000000, 	'single', 	'',	1 );
a2l_mon('VHAL_CamObs5Age_cnt', 	'cnt', 	0, 	255, 	'uint8', 	'',	1 );
a2l_mon('VHAL_CamObs5Lane_enum', 	'enum', 	0, 	255, 	'uint8', 	'',	1 );
a2l_mon('VHAL_CamObs5CIPV_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VHAL_CamObs5VelY_mps', 	'mps', 	-1000000, 	1000000, 	'single', 	'',	1 );
a2l_mon('VHAL_CamObs5AccX_mps2', 	'mps2', 	-1000000, 	1000000, 	'single', 	'',	1 );
a2l_mon('VHAL_CamObs5Ang_deg', 	'deg', 	-1000000, 	1000000, 	'single', 	'',	1 );
a2l_mon('VHAL_CamObs5AngRate_degps', 	'degps', 	-1000000, 	1000000, 	'single', 	'',	1 );
a2l_mon('VHAL_CamObs5Replaced_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VHAL_CamObs6ID_num', 	'num', 	0, 	255, 	'uint8', 	'',	1 );
a2l_mon('VHAL_CamObs6PosX_m', 	'm', 	-1000000, 	1000000, 	'single', 	'',	1 );
a2l_mon('VHAL_CamObs6PosY_m', 	'm', 	-1000000, 	1000000, 	'single', 	'',	1 );
a2l_mon('VHAL_CamObs6VelX_mps', 	'mps', 	-1000000, 	1000000, 	'single', 	'',	1 );
a2l_mon('VHAL_CamObs6Type_enum', 	'enum', 	0, 	255, 	'uint8', 	'',	1 );
a2l_mon('VHAL_CamObs6Status_enum', 	'enum', 	0, 	255, 	'uint8', 	'',	1 );
a2l_mon('VHAL_CamObs6Valid_enum', 	'enum', 	0, 	255, 	'uint8', 	'',	1 );
a2l_mon('VHAL_CamObs6MoveInO_enum', 	'enum', 	0, 	255, 	'uint8', 	'',	1 );
a2l_mon('VHAL_CamObs6Blinker_enum', 	'enum', 	0, 	255, 	'uint8', 	'',	1 );
a2l_mon('VHAL_CamObs6BrakeLight_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VHAL_CamObs6Length_m', 	'm', 	-1000000, 	1000000, 	'single', 	'',	1 );
a2l_mon('VHAL_CamObs6Width_m', 	'm', 	-1000000, 	1000000, 	'single', 	'',	1 );
a2l_mon('VHAL_CamObs6Age_cnt', 	'cnt', 	0, 	255, 	'uint8', 	'',	1 );
a2l_mon('VHAL_CamObs6Lane_enum', 	'enum', 	0, 	255, 	'uint8', 	'',	1 );
a2l_mon('VHAL_CamObs6CIPV_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VHAL_CamObs6VelY_mps', 	'mps', 	-1000000, 	1000000, 	'single', 	'',	1 );
a2l_mon('VHAL_CamObs6AccX_mps2', 	'mps2', 	-1000000, 	1000000, 	'single', 	'',	1 );
a2l_mon('VHAL_CamObs6Ang_deg', 	'deg', 	-1000000, 	1000000, 	'single', 	'',	1 );
a2l_mon('VHAL_CamObs6AngRate_degps', 	'degps', 	-1000000, 	1000000, 	'single', 	'',	1 );
a2l_mon('VHAL_CamObs6Replaced_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VHAL_CamObs7ID_num', 	'num', 	0, 	255, 	'uint8', 	'',	1 );
a2l_mon('VHAL_CamObs7PosX_m', 	'm', 	-1000000, 	1000000, 	'single', 	'',	1 );
a2l_mon('VHAL_CamObs7PosY_m', 	'm', 	-1000000, 	1000000, 	'single', 	'',	1 );
a2l_mon('VHAL_CamObs7VelX_mps', 	'mps', 	-1000000, 	1000000, 	'single', 	'',	1 );
a2l_mon('VHAL_CamObs7Type_enum', 	'enum', 	0, 	255, 	'uint8', 	'',	1 );
a2l_mon('VHAL_CamObs7Status_enum', 	'enum', 	0, 	255, 	'uint8', 	'',	1 );
a2l_mon('VHAL_CamObs7Valid_enum', 	'enum', 	0, 	255, 	'uint8', 	'',	1 );
a2l_mon('VHAL_CamObs7MoveInO_enum', 	'enum', 	0, 	255, 	'uint8', 	'',	1 );
a2l_mon('VHAL_CamObs7Blinker_enum', 	'enum', 	0, 	255, 	'uint8', 	'',	1 );
a2l_mon('VHAL_CamObs7BrakeLight_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VHAL_CamObs7Length_m', 	'm', 	-1000000, 	1000000, 	'single', 	'',	1 );
a2l_mon('VHAL_CamObs7Width_m', 	'm', 	-1000000, 	1000000, 	'single', 	'',	1 );
a2l_mon('VHAL_CamObs7Age_cnt', 	'cnt', 	0, 	255, 	'uint8', 	'',	1 );
a2l_mon('VHAL_CamObs7Lane_enum', 	'enum', 	0, 	255, 	'uint8', 	'',	1 );
a2l_mon('VHAL_CamObs7CIPV_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VHAL_CamObs7VelY_mps', 	'mps', 	-1000000, 	1000000, 	'single', 	'',	1 );
a2l_mon('VHAL_CamObs7AccX_mps2', 	'mps2', 	-1000000, 	1000000, 	'single', 	'',	1 );
a2l_mon('VHAL_CamObs7Ang_deg', 	'deg', 	-1000000, 	1000000, 	'single', 	'',	1 );
a2l_mon('VHAL_CamObs7AngRate_degps', 	'degps', 	-1000000, 	1000000, 	'single', 	'',	1 );
a2l_mon('VHAL_CamObs7Replaced_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VHAL_CamObs8ID_num', 	'num', 	0, 	255, 	'uint8', 	'',	1 );
a2l_mon('VHAL_CamObs8PosX_m', 	'm', 	-1000000, 	1000000, 	'single', 	'',	1 );
a2l_mon('VHAL_CamObs8PosY_m', 	'm', 	-1000000, 	1000000, 	'single', 	'',	1 );
a2l_mon('VHAL_CamObs8VelX_mps', 	'mps', 	-1000000, 	1000000, 	'single', 	'',	1 );
a2l_mon('VHAL_CamObs8Type_enum', 	'enum', 	0, 	255, 	'uint8', 	'',	1 );
a2l_mon('VHAL_CamObs8Status_enum', 	'enum', 	0, 	255, 	'uint8', 	'',	1 );
a2l_mon('VHAL_CamObs8Valid_enum', 	'enum', 	0, 	255, 	'uint8', 	'',	1 );
a2l_mon('VHAL_CamObs8MoveInO_enum', 	'enum', 	0, 	255, 	'uint8', 	'',	1 );
a2l_mon('VHAL_CamObs8Blinker_enum', 	'enum', 	0, 	255, 	'uint8', 	'',	1 );
a2l_mon('VHAL_CamObs8BrakeLight_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VHAL_CamObs8Length_m', 	'm', 	-1000000, 	1000000, 	'single', 	'',	1 );
a2l_mon('VHAL_CamObs8Width_m', 	'm', 	-1000000, 	1000000, 	'single', 	'',	1 );
a2l_mon('VHAL_CamObs8Age_cnt', 	'cnt', 	0, 	255, 	'uint8', 	'',	1 );
a2l_mon('VHAL_CamObs8Lane_enum', 	'enum', 	0, 	255, 	'uint8', 	'',	1 );
a2l_mon('VHAL_CamObs8CIPV_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VHAL_CamObs8VelY_mps', 	'mps', 	-1000000, 	1000000, 	'single', 	'',	1 );
a2l_mon('VHAL_CamObs8AccX_mps2', 	'mps2', 	-1000000, 	1000000, 	'single', 	'',	1 );
a2l_mon('VHAL_CamObs8Ang_deg', 	'deg', 	-1000000, 	1000000, 	'single', 	'',	1 );
a2l_mon('VHAL_CamObs8AngRate_degps', 	'degps', 	-1000000, 	1000000, 	'single', 	'',	1 );
a2l_mon('VHAL_CamObs8Replaced_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VHAL_CamObs9ID_num', 	'num', 	0, 	255, 	'uint8', 	'',	1 );
a2l_mon('VHAL_CamObs9PosX_m', 	'm', 	-1000000, 	1000000, 	'single', 	'',	1 );
a2l_mon('VHAL_CamObs9PosY_m', 	'm', 	-1000000, 	1000000, 	'single', 	'',	1 );
a2l_mon('VHAL_CamObs9VelX_mps', 	'mps', 	-1000000, 	1000000, 	'single', 	'',	1 );
a2l_mon('VHAL_CamObs9Type_enum', 	'enum', 	0, 	255, 	'uint8', 	'',	1 );
a2l_mon('VHAL_CamObs9Status_enum', 	'enum', 	0, 	255, 	'uint8', 	'',	1 );
a2l_mon('VHAL_CamObs9Valid_enum', 	'enum', 	0, 	255, 	'uint8', 	'',	1 );
a2l_mon('VHAL_CamObs9MoveInO_enum', 	'enum', 	0, 	255, 	'uint8', 	'',	1 );
a2l_mon('VHAL_CamObs9Blinker_enum', 	'enum', 	0, 	255, 	'uint8', 	'',	1 );
a2l_mon('VHAL_CamObs9BrakeLight_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VHAL_CamObs9Length_m', 	'm', 	-1000000, 	1000000, 	'single', 	'',	1 );
a2l_mon('VHAL_CamObs9Width_m', 	'm', 	-1000000, 	1000000, 	'single', 	'',	1 );
a2l_mon('VHAL_CamObs9Age_cnt', 	'cnt', 	0, 	255, 	'uint8', 	'',	1 );
a2l_mon('VHAL_CamObs9Lane_enum', 	'enum', 	0, 	255, 	'uint8', 	'',	1 );
a2l_mon('VHAL_CamObs9CIPV_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VHAL_CamObs9VelY_mps', 	'mps', 	-1000000, 	1000000, 	'single', 	'',	1 );
a2l_mon('VHAL_CamObs9AccX_mps2', 	'mps2', 	-1000000, 	1000000, 	'single', 	'',	1 );
a2l_mon('VHAL_CamObs9Ang_deg', 	'deg', 	-1000000, 	1000000, 	'single', 	'',	1 );
a2l_mon('VHAL_CamObs9AngRate_degps', 	'degps', 	-1000000, 	1000000, 	'single', 	'',	1 );
a2l_mon('VHAL_CamObs9Replaced_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VHAL_CamObs10ID_num', 	'num', 	0, 	255, 	'uint8', 	'',	1 );
a2l_mon('VHAL_CamObs10PosX_m', 	'm', 	-1000000, 	1000000, 	'single', 	'',	1 );
a2l_mon('VHAL_CamObs10PosY_m', 	'm', 	-1000000, 	1000000, 	'single', 	'',	1 );
a2l_mon('VHAL_CamObs10VelX_mps', 	'mps', 	-1000000, 	1000000, 	'single', 	'',	1 );
a2l_mon('VHAL_CamObs10Type_enum', 	'enum', 	0, 	255, 	'uint8', 	'',	1 );
a2l_mon('VHAL_CamObs10Status_enum', 	'enum', 	0, 	255, 	'uint8', 	'',	1 );
a2l_mon('VHAL_CamObs10Valid_enum', 	'enum', 	0, 	255, 	'uint8', 	'',	1 );
a2l_mon('VHAL_CamObs10MoveInO_enum', 	'enum', 	0, 	255, 	'uint8', 	'',	1 );
a2l_mon('VHAL_CamObs10Blinker_enum', 	'enum', 	0, 	255, 	'uint8', 	'',	1 );
a2l_mon('VHAL_CamObs10BrakeLight_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VHAL_CamObs10Length_m', 	'm', 	-1000000, 	1000000, 	'single', 	'',	1 );
a2l_mon('VHAL_CamObs10Width_m', 	'm', 	-1000000, 	1000000, 	'single', 	'',	1 );
a2l_mon('VHAL_CamObs10Age_cnt', 	'cnt', 	0, 	255, 	'uint8', 	'',	1 );
a2l_mon('VHAL_CamObs10Lane_enum', 	'enum', 	0, 	255, 	'uint8', 	'',	1 );
a2l_mon('VHAL_CamObs10CIPV_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VHAL_CamObs10VelY_mps', 	'mps', 	-1000000, 	1000000, 	'single', 	'',	1 );
a2l_mon('VHAL_CamObs10AccX_mps2', 	'mps2', 	-1000000, 	1000000, 	'single', 	'',	1 );
a2l_mon('VHAL_CamObs10Ang_deg', 	'deg', 	-1000000, 	1000000, 	'single', 	'',	1 );
a2l_mon('VHAL_CamObs10AngRate_degps', 	'degps', 	-1000000, 	1000000, 	'single', 	'',	1 );
a2l_mon('VHAL_CamObs10Replaced_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VHAL_LowBeamDecision_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VHAL_NextLaneTypeL_enum', 	'enum', 	0, 	255, 	'uint8', 	'',	1 );
a2l_mon('VHAL_NextLaneQualityL_enum', 	'enum', 	0, 	255, 	'uint8', 	'',	1 );
a2l_mon('VHAL_NextLaneC0L_m', 	'm', 	-1000000, 	1000000, 	'single', 	'',	1 );
a2l_mon('VHAL_NextLaneC2L_rat', 	'rat', 	-1000000, 	1000000, 	'single', 	'',	1 );
a2l_mon('VHAL_NextLaneC3L_rat', 	'rat', 	-1000000, 	1000000, 	'single', 	'',	1 );
a2l_mon('VHAL_NextLaneMrkWidL_m', 	'm', 	-1000000, 	1000000, 	'single', 	'',	1 );
a2l_mon('VHAL_NextLaneC1L_rad', 	'rad', 	-1000000, 	1000000, 	'single', 	'',	1 );
a2l_mon('VHAL_NextViewRangeStartL_m', 	'm', 	-1000000, 	1000000, 	'single', 	'',	1 );
a2l_mon('VHAL_NextViewRangeEndL_m', 	'm', 	-1000000, 	1000000, 	'single', 	'',	1 );
a2l_mon('VHAL_NextLaneTypeR_enum', 	'enum', 	0, 	255, 	'uint8', 	'',	1 );
a2l_mon('VHAL_NextLaneQualityR_enum', 	'enum', 	0, 	255, 	'uint8', 	'',	1 );
a2l_mon('VHAL_NextLaneC0R_m', 	'm', 	-1000000, 	1000000, 	'single', 	'',	1 );
a2l_mon('VHAL_NextLaneC2R_rat', 	'rat', 	-1000000, 	1000000, 	'single', 	'',	1 );
a2l_mon('VHAL_NextLaneC3R_rat', 	'rat', 	-1000000, 	1000000, 	'single', 	'',	1 );
a2l_mon('VHAL_NextLaneMrkWidR_m', 	'm', 	-1000000, 	1000000, 	'single', 	'',	1 );
a2l_mon('VHAL_NextLaneC1R_rad', 	'rad', 	-1000000, 	1000000, 	'single', 	'',	1 );
a2l_mon('VHAL_NextViewRangeStartR_m', 	'm', 	-1000000, 	1000000, 	'single', 	'',	1 );
a2l_mon('VHAL_NextViewRangeEndR_m', 	'm', 	-1000000, 	1000000, 	'single', 	'',	1 );
a2l_mon('VHAL_RadNofObjects_num', 	'num', 	0, 	255, 	'uint8', 	'',	1 );
a2l_mon('VHAL_MeasCounter_num', 	'num', 	0, 	255, 	'uint8', 	'',	1 );
a2l_mon('VHAL_SensorRxInvalid_enum', 	'enum', 	0, 	255, 	'uint8', 	'',	1 );
a2l_mon('VHAL_SensorSupplyVoltage_V', 	'V', 	-1000000, 	1000000, 	'single', 	'',	1 );
a2l_mon('VHAL_SensorDefective_enum', 	'enum', 	0, 	255, 	'uint8', 	'',	1 );
a2l_mon('VHAL_SensorMisaligned_enum', 	'enum', 	0, 	255, 	'uint8', 	'',	1 );
a2l_mon('VHAL_SensorSwitchedOff_enum', 	'enum', 	0, 	255, 	'uint8', 	'',	1 );
a2l_mon('VHAL_SensorExternalDisturbed_enum', 	'enum', 	0, 	255, 	'uint8', 	'',	1 );
a2l_mon('VHAL_SensorOutputReduced_enum', 	'enum', 	0, 	255, 	'uint8', 	'',	1 );
a2l_mon('VHAL_LatDistToborderLeft_m', 	'm', 	-1000000, 	1000000, 	'single', 	'',	1 );
a2l_mon('VHAL_LatDistToborderRight_m', 	'm', 	-1000000, 	1000000, 	'single', 	'',	1 );
a2l_mon('VHAL_RadObjRolCountVect40_num', 	'num', 	0, 	255, 	'uint8', 	'',	40 );
a2l_mon('VHAL_RadObjIDVect40_num', 	'num', 	0, 	255, 	'uint8', 	'',	40 );
a2l_mon('VHAL_RadObjXDisplVect40_m', 	'm', 	-1000000, 	1000000, 	'single', 	'',	40 );
a2l_mon('VHAL_RadObjVrelXVect40_mps', 	'mps', 	-1000000, 	1000000, 	'single', 	'',	40 );
a2l_mon('VHAL_RadObjAccelXVect40_mps2', 	'mps2', 	-1000000, 	1000000, 	'single', 	'',	40 );
a2l_mon('VHAL_RadObjYDisplVect40_m', 	'm', 	-1000000, 	1000000, 	'single', 	'',	40 );
a2l_mon('VHAL_RadObjDynPropVect40_enum', 	'enum', 	0, 	255, 	'uint8', 	'',	40 );
a2l_mon('VHAL_RadObjPExistVect40_enum', 	'enum', 	0, 	255, 	'uint8', 	'',	40 );
a2l_mon('VHAL_RadObjMeasStatVect40_enum', 	'enum', 	0, 	255, 	'uint8', 	'',	40 );
a2l_mon('VHAL_RadObjWidthVect40_m', 	'm', 	-1000000, 	1000000, 	'single', 	'',	40 );
a2l_mon('VHAL_RadObjLengthVect40_m', 	'm', 	-1000000, 	1000000, 	'single', 	'',	40 );
a2l_mon('VHAL_RadObjRCSVect40_num', 	'', 	0, 	255, 	'uint8', 	'',	40 );
a2l_mon('VHAL_RadObjVrelYVect40_mps', 	'', 	-1000000, 	1000000, 	'single', 	'',	40 );
a2l_mon('VHAL_RadObjProbVect40_num', 	'num', 	0, 	255, 	'uint8', 	'',	40 );
a2l_mon('VHAL_RadWarningLevel_enum', 	'enum', 	0, 	255, 	'uint8', 	'',	1 );
a2l_mon('VHAL_RadWarningObjID_num', 	'num', 	0, 	255, 	'uint8', 	'',	1 );
a2l_mon('VHAL_CANMsgValidABS1_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VHAL_CANMsgValidABS2_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VHAL_CANMsgValidABS3_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VHAL_CANMsgValidABS4_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VHAL_CANMsgValidECM1_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VHAL_CANMsgValidECM2_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VHAL_CANMsgValidECM3_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VHAL_CANMsgValidECM9_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VHAL_CANMsgValidTCM1_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VHAL_CANMsgValidTCM2_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VHAL_CANMsgValidSAS1_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VHAL_CANMsgValidEPAS1_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VHAL_CANMsgValidEPAS2_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VHAL_CANMsgValidEPAS3_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VHAL_CANMsgValidBCM1_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VHAL_CANMsgValidBCM2_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VHAL_CANMsgValidMETER1_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VHAL_CANMsgValidMETER3_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VHAL_CANMsgValidAC1_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VHAL_CANMsgValidEPB1_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VHAL_CANMsgValidCSW1_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VHAL_CANMsgValidVCU1_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VHAL_CANMsgValidVCU2_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VHAL_CANMsgValidHCU3_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VHAL_CANMsgValidHCU4_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VHAL_CANMsgValidHMI1_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VHAL_CANMsgValidHMI2_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VHAL_CANMsgValidEPM1_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VHAL_CANMsgValidEPM2_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VHAL_CANMsgValidEPM3_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VHAL_CANMsgValidEPM4_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VHAL_CANMsgValidEPM5_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VHAL_CANMsgValidEPM6_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VHAL_CANMsgValidEPM7_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VHAL_CANMsgValidEPM8_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VHAL_CANMsgValidEPM9_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VHAL_CANMsgValidEPM10_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VHAL_CANMsgValidEPM11_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VHAL_CANMsgValidEPM12_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VHAL_CANMsgValidEPM13_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VHAL_CANMsgValidEPM14_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VHAL_CANMsgValidEPM15_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VHAL_CANMsgValidEPM16_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VHAL_CANMsgValidEPM17_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VHAL_CANMsgValidEPM18_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VHAL_CANMsgValidEPM19_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VHAL_CANMsgValidEPM20_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VHAL_CANMsgValidEPM21_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VHAL_CANMsgValidEPM22_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VHAL_CANMsgValidEPM23_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VHAL_CANMsgValidEPM24_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VHAL_CANMsgValidEPM25_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VHAL_CANMsgValidEPM26_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VHAL_CANMsgValidEPM27_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VHAL_CANMsgValidEPM28_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VHAL_CANMsgValidEPM29_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VHAL_CANMsgValidEPM30_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VHAL_CANMsgValidEPM31_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VHAL_CANMsgValidEPM32_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VHAL_CANMsgValidEPM33_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VHAL_CANMsgValidEPM34_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VHAL_CANMsgValidEPM35_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VHAL_CamLeftLaneReceiveValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VHAL_CamRightLaneReceiveValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VHAL_CamObs1ReceiveValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VHAL_CamObs2ReceiveValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VHAL_CamObs3ReceiveValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VHAL_CamObs4ReceiveValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VHAL_CamObs5ReceiveValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VHAL_CamObs6ReceiveValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VHAL_CamObs7ReceiveValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VHAL_CamObs8ReceiveValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VHAL_CamObs9ReceiveValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VHAL_CamObs10ReceiveValid_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
