% =========== $Update Time : 04-Nov-2016 17:28:40 $  =========
disp('Loading $Id: outp_var.m 1526 2016-11-07 08:20:13Z chimotsai $')

%% Calibration Name, Units, Min, Max, Data Type, Comment
a2l_par('KOUTP_StrAngReq_deg_srvcflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KOUTP_StrAngReq_deg_srvcval', 	'deg', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KOUTP_StrAngReq_deg_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KOUTP_StrAngReq_deg_ovrdval', 	'deg', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KOUTP_StrAngReq_deg_defval', 	'deg', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KOUTP_StrAngReq_deg_maxval', 	'deg', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KOUTP_StrAngReq_deg_minval', 	'deg', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KOUTP_StrAngAppl_flg_srvcflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KOUTP_StrAngAppl_flg_srvcval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KOUTP_StrAngAppl_flg_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KOUTP_StrAngAppl_flg_ovrdval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KOUTP_StrAngAppl_flg_defval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KOUTP_StrTqReq_Nm_srvcflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KOUTP_StrTqReq_Nm_srvcval', 	'Nm', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KOUTP_StrTqReq_Nm_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KOUTP_StrTqReq_Nm_ovrdval', 	'Nm', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KOUTP_StrTqReq_Nm_defval', 	'Nm', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KOUTP_StrTqReq_Nm_maxval', 	'Nm', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KOUTP_StrTqReq_Nm_minval', 	'Nm', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KOUTP_StrTqAppl_flg_srvcflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KOUTP_StrTqAppl_flg_srvcval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KOUTP_StrTqAppl_flg_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KOUTP_StrTqAppl_flg_ovrdval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KOUTP_StrTqAppl_flg_defval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KOUTP_LFCTransGain_rat_srvcflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KOUTP_LFCTransGain_rat_srvcval', 	'rat', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KOUTP_LFCTransGain_rat_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KOUTP_LFCTransGain_rat_ovrdval', 	'rat', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KOUTP_LFCTransGain_rat_defval', 	'rat', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KOUTP_LFCTransGain_rat_maxval', 	'rat', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KOUTP_LFCTransGain_rat_minval', 	'rat', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KOUTP_LFCTransGainAppl_flg_srvcflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KOUTP_LFCTransGainAppl_flg_srvcval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KOUTP_LFCTransGainAppl_flg_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KOUTP_LFCTransGainAppl_flg_ovrdval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KOUTP_LFCTransGainAppl_flg_defval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KOUTP_ADASLFCStatus_enum_srvcflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KOUTP_ADASLFCStatus_enum_srvcval', 	'enum', 	0, 	255, 	'uint8', 	'' );
a2l_par('KOUTP_ADASLFCStatus_enum_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KOUTP_ADASLFCStatus_enum_ovrdval', 	'enum', 	0, 	255, 	'uint8', 	'' );
a2l_par('KOUTP_ADASLFCStatus_enum_defval', 	'enum', 	0, 	255, 	'uint8', 	'' );
a2l_par('KOUTP_ADASLKAStatus_enum_srvcflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KOUTP_ADASLKAStatus_enum_srvcval', 	'enum', 	0, 	255, 	'uint8', 	'' );
a2l_par('KOUTP_ADASLKAStatus_enum_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KOUTP_ADASLKAStatus_enum_ovrdval', 	'enum', 	0, 	255, 	'uint8', 	'' );
a2l_par('KOUTP_ADASLKAStatus_enum_defval', 	'enum', 	0, 	255, 	'uint8', 	'' );
a2l_par('KOUTP_EPSModeReq_enum_srvcflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KOUTP_EPSModeReq_enum_srvcval', 	'enum', 	0, 	255, 	'uint8', 	'' );
a2l_par('KOUTP_EPSModeReq_enum_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KOUTP_EPSModeReq_enum_ovrdval', 	'enum', 	0, 	255, 	'uint8', 	'' );
a2l_par('KOUTP_EPSModeReq_enum_defval', 	'enum', 	0, 	255, 	'uint8', 	'' );
a2l_par('KOUTP_ADAS1RollCnt_cnt_srvcflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KOUTP_ADAS1RollCnt_cnt_srvcval', 	'cnt', 	0, 	255, 	'uint8', 	'' );
a2l_par('KOUTP_ADAS1RollCnt_cnt_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KOUTP_ADAS1RollCnt_cnt_ovrdval', 	'cnt', 	0, 	255, 	'uint8', 	'' );
a2l_par('KOUTP_ADAS1RollCnt_cnt_defval', 	'cnt', 	0, 	255, 	'uint8', 	'' );
a2l_par('KOUTP_PTTqReq_Nm_srvcflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KOUTP_PTTqReq_Nm_srvcval', 	'Nm', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KOUTP_PTTqReq_Nm_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KOUTP_PTTqReq_Nm_ovrdval', 	'Nm', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KOUTP_PTTqReq_Nm_defval', 	'Nm', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KOUTP_PTTqReq_Nm_maxval', 	'Nm', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KOUTP_PTTqReq_Nm_minval', 	'Nm', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KOUTP_PTTqReqAppl_flg_srvcflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KOUTP_PTTqReqAppl_flg_srvcval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KOUTP_PTTqReqAppl_flg_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KOUTP_PTTqReqAppl_flg_ovrdval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KOUTP_PTTqReqAppl_flg_defval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KOUTP_ForceIdle_flg_srvcflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KOUTP_ForceIdle_flg_srvcval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KOUTP_ForceIdle_flg_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KOUTP_ForceIdle_flg_ovrdval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KOUTP_ForceIdle_flg_defval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KOUTP_ForceIdleAppl_flg_srvcflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KOUTP_ForceIdleAppl_flg_srvcval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KOUTP_ForceIdleAppl_flg_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KOUTP_ForceIdleAppl_flg_ovrdval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KOUTP_ForceIdleAppl_flg_defval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KOUTP_DecReq_mps2_srvcflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KOUTP_DecReq_mps2_srvcval', 	'mps2', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KOUTP_DecReq_mps2_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KOUTP_DecReq_mps2_ovrdval', 	'mps2', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KOUTP_DecReq_mps2_defval', 	'mps2', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KOUTP_DecReq_mps2_maxval', 	'mps2', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KOUTP_DecReq_mps2_minval', 	'mps2', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KOUTP_DecReqAppl_flg_srvcflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KOUTP_DecReqAppl_flg_srvcval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KOUTP_DecReqAppl_flg_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KOUTP_DecReqAppl_flg_ovrdval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KOUTP_DecReqAppl_flg_defval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KOUTP_AEBReq_flg_srvcflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KOUTP_AEBReq_flg_srvcval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KOUTP_AEBReq_flg_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KOUTP_AEBReq_flg_ovrdval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KOUTP_AEBReq_flg_defval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KOUTP_AEBReqAppl_flg_srvcflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KOUTP_AEBReqAppl_flg_srvcval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KOUTP_AEBReqAppl_flg_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KOUTP_AEBReqAppl_flg_ovrdval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KOUTP_AEBReqAppl_flg_defval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KOUTP_BrakePrefillReq_flg_srvcflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KOUTP_BrakePrefillReq_flg_srvcval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KOUTP_BrakePrefillReq_flg_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KOUTP_BrakePrefillReq_flg_ovrdval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KOUTP_BrakePrefillReq_flg_defval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KOUTP_BrakePrefillReqAppl_flg_srvcflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KOUTP_BrakePrefillReqAppl_flg_srvcval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KOUTP_BrakePrefillReqAppl_flg_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KOUTP_BrakePrefillReqAppl_flg_ovrdval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KOUTP_BrakePrefillReqAppl_flg_defval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KOUTP_VehHoldReq_flg_srvcflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KOUTP_VehHoldReq_flg_srvcval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KOUTP_VehHoldReq_flg_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KOUTP_VehHoldReq_flg_ovrdval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KOUTP_VehHoldReq_flg_defval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KOUTP_BrakeHapticReq_flg_srvcflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KOUTP_BrakeHapticReq_flg_srvcval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KOUTP_BrakeHapticReq_flg_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KOUTP_BrakeHapticReq_flg_ovrdval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KOUTP_BrakeHapticReq_flg_defval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KOUTP_ADASACCStatus_enum_srvcflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KOUTP_ADASACCStatus_enum_srvcval', 	'enum', 	0, 	255, 	'uint8', 	'' );
a2l_par('KOUTP_ADASACCStatus_enum_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KOUTP_ADASACCStatus_enum_ovrdval', 	'enum', 	0, 	255, 	'uint8', 	'' );
a2l_par('KOUTP_ADASACCStatus_enum_defval', 	'enum', 	0, 	255, 	'uint8', 	'' );
a2l_par('KOUTP_VirtualGearRatio_enum_srvcflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KOUTP_VirtualGearRatio_enum_srvcval', 	'enum', 	0, 	255, 	'uint8', 	'' );
a2l_par('KOUTP_VirtualGearRatio_enum_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KOUTP_VirtualGearRatio_enum_ovrdval', 	'enum', 	0, 	255, 	'uint8', 	'' );
a2l_par('KOUTP_VirtualGearRatio_enum_defval', 	'enum', 	0, 	255, 	'uint8', 	'' );
a2l_par('KOUTP_ADAS2RollCnt_cnt_srvcflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KOUTP_ADAS2RollCnt_cnt_srvcval', 	'cnt', 	0, 	255, 	'uint8', 	'' );
a2l_par('KOUTP_ADAS2RollCnt_cnt_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KOUTP_ADAS2RollCnt_cnt_ovrdval', 	'cnt', 	0, 	255, 	'uint8', 	'' );
a2l_par('KOUTP_ADAS2RollCnt_cnt_defval', 	'cnt', 	0, 	255, 	'uint8', 	'' );
a2l_par('KOUTP_VehSpdLim_kph_srvcflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KOUTP_VehSpdLim_kph_srvcval', 	'kph', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KOUTP_VehSpdLim_kph_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KOUTP_VehSpdLim_kph_ovrdval', 	'kph', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KOUTP_VehSpdLim_kph_defval', 	'kph', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KOUTP_VehSpdLim_kph_maxval', 	'kph', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KOUTP_VehSpdLim_kph_minval', 	'kph', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KOUTP_VehSpdLimAppl_flg_srvcflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KOUTP_VehSpdLimAppl_flg_srvcval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KOUTP_VehSpdLimAppl_flg_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KOUTP_VehSpdLimAppl_flg_ovrdval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KOUTP_VehSpdLimAppl_flg_defval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KOUTP_GearPosnReq_enum_srvcflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KOUTP_GearPosnReq_enum_srvcval', 	'enum', 	0, 	255, 	'uint8', 	'' );
a2l_par('KOUTP_GearPosnReq_enum_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KOUTP_GearPosnReq_enum_ovrdval', 	'enum', 	0, 	255, 	'uint8', 	'' );
a2l_par('KOUTP_GearPosnReq_enum_defval', 	'enum', 	0, 	255, 	'uint8', 	'' );
a2l_par('KOUTP_GearPosnReqAppl_flg_srvcflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KOUTP_GearPosnReqAppl_flg_srvcval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KOUTP_GearPosnReqAppl_flg_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KOUTP_GearPosnReqAppl_flg_ovrdval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KOUTP_GearPosnReqAppl_flg_defval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KOUTP_ShiftPosnReq_enum_srvcflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KOUTP_ShiftPosnReq_enum_srvcval', 	'enum', 	0, 	255, 	'uint8', 	'' );
a2l_par('KOUTP_ShiftPosnReq_enum_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KOUTP_ShiftPosnReq_enum_ovrdval', 	'enum', 	0, 	255, 	'uint8', 	'' );
a2l_par('KOUTP_ShiftPosnReq_enum_defval', 	'enum', 	0, 	255, 	'uint8', 	'' );
a2l_par('KOUTP_ShiftPosnReqAppl_flg_srvcflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KOUTP_ShiftPosnReqAppl_flg_srvcval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KOUTP_ShiftPosnReqAppl_flg_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KOUTP_ShiftPosnReqAppl_flg_ovrdval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KOUTP_ShiftPosnReqAppl_flg_defval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KOUTP_ADAS3RollCnt_cnt_srvcflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KOUTP_ADAS3RollCnt_cnt_srvcval', 	'cnt', 	0, 	255, 	'uint8', 	'' );
a2l_par('KOUTP_ADAS3RollCnt_cnt_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KOUTP_ADAS3RollCnt_cnt_ovrdval', 	'cnt', 	0, 	255, 	'uint8', 	'' );
a2l_par('KOUTP_ADAS3RollCnt_cnt_defval', 	'cnt', 	0, 	255, 	'uint8', 	'' );
a2l_par('KOUTP_ForceLowBeam_flg_srvcflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KOUTP_ForceLowBeam_flg_srvcval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KOUTP_ForceLowBeam_flg_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KOUTP_ForceLowBeam_flg_ovrdval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KOUTP_ForceLowBeam_flg_defval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KOUTP_ADASMILReq_flg_srvcflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KOUTP_ADASMILReq_flg_srvcval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KOUTP_ADASMILReq_flg_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KOUTP_ADASMILReq_flg_ovrdval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KOUTP_ADASMILReq_flg_defval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KOUTP_HazardWarningReq_flg_srvcflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KOUTP_HazardWarningReq_flg_srvcval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KOUTP_HazardWarningReq_flg_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KOUTP_HazardWarningReq_flg_ovrdval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KOUTP_HazardWarningReq_flg_defval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KOUTP_FCWWarningReq_flg_srvcflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KOUTP_FCWWarningReq_flg_srvcval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KOUTP_FCWWarningReq_flg_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KOUTP_FCWWarningReq_flg_ovrdval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KOUTP_FCWWarningReq_flg_defval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KOUTP_ACCWarningReq_flg_srvcflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KOUTP_ACCWarningReq_flg_srvcval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KOUTP_ACCWarningReq_flg_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KOUTP_ACCWarningReq_flg_ovrdval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KOUTP_ACCWarningReq_flg_defval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KOUTP_AEBWarningReq_flg_srvcflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KOUTP_AEBWarningReq_flg_srvcval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KOUTP_AEBWarningReq_flg_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KOUTP_AEBWarningReq_flg_ovrdval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KOUTP_AEBWarningReq_flg_defval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KOUTP_IGSAWarningReq_flg_srvcflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KOUTP_IGSAWarningReq_flg_srvcval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KOUTP_IGSAWarningReq_flg_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KOUTP_IGSAWarningReq_flg_ovrdval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KOUTP_IGSAWarningReq_flg_defval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KOUTP_FaultWarningReq_flg_srvcflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KOUTP_FaultWarningReq_flg_srvcval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KOUTP_FaultWarningReq_flg_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KOUTP_FaultWarningReq_flg_ovrdval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KOUTP_FaultWarningReq_flg_defval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KOUTP_ACCSetSpeed_kph_srvcflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KOUTP_ACCSetSpeed_kph_srvcval', 	'kph', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KOUTP_ACCSetSpeed_kph_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KOUTP_ACCSetSpeed_kph_ovrdval', 	'kph', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KOUTP_ACCSetSpeed_kph_defval', 	'kph', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KOUTP_ACCSetSpeed_kph_maxval', 	'kph', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KOUTP_ACCSetSpeed_kph_minval', 	'kph', 	-1000000, 	1000000, 	'single', 	'' );
a2l_par('KOUTP_ADASFaultMode_enum_srvcflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KOUTP_ADASFaultMode_enum_srvcval', 	'enum', 	0, 	255, 	'uint8', 	'' );
a2l_par('KOUTP_ADASFaultMode_enum_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KOUTP_ADASFaultMode_enum_ovrdval', 	'enum', 	0, 	255, 	'uint8', 	'' );
a2l_par('KOUTP_ADASFaultMode_enum_defval', 	'enum', 	0, 	255, 	'uint8', 	'' );
a2l_par('KOUTP_ACCSetTimeGap_enum_srvcflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KOUTP_ACCSetTimeGap_enum_srvcval', 	'enum', 	0, 	255, 	'uint8', 	'' );
a2l_par('KOUTP_ACCSetTimeGap_enum_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KOUTP_ACCSetTimeGap_enum_ovrdval', 	'enum', 	0, 	255, 	'uint8', 	'' );
a2l_par('KOUTP_ACCSetTimeGap_enum_defval', 	'enum', 	0, 	255, 	'uint8', 	'' );
a2l_par('KOUTP_ACCSetTimeGapTmp_enum_srvcflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KOUTP_ACCSetTimeGapTmp_enum_srvcval', 	'enum', 	0, 	255, 	'uint8', 	'' );
a2l_par('KOUTP_ACCSetTimeGapTmp_enum_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KOUTP_ACCSetTimeGapTmp_enum_ovrdval', 	'enum', 	0, 	255, 	'uint8', 	'' );
a2l_par('KOUTP_ACCSetTimeGapTmp_enum_defval', 	'enum', 	0, 	255, 	'uint8', 	'' );
a2l_par('KOUTP_LeftLaneLampMode_enum_srvcflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KOUTP_LeftLaneLampMode_enum_srvcval', 	'enum', 	0, 	255, 	'uint8', 	'' );
a2l_par('KOUTP_LeftLaneLampMode_enum_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KOUTP_LeftLaneLampMode_enum_ovrdval', 	'enum', 	0, 	255, 	'uint8', 	'' );
a2l_par('KOUTP_LeftLaneLampMode_enum_defval', 	'enum', 	0, 	255, 	'uint8', 	'' );
a2l_par('KOUTP_RightLaneLampMode_enum_srvcflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KOUTP_RightLaneLampMode_enum_srvcval', 	'enum', 	0, 	255, 	'uint8', 	'' );
a2l_par('KOUTP_RightLaneLampMode_enum_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KOUTP_RightLaneLampMode_enum_ovrdval', 	'enum', 	0, 	255, 	'uint8', 	'' );
a2l_par('KOUTP_RightLaneLampMode_enum_defval', 	'enum', 	0, 	255, 	'uint8', 	'' );
a2l_par('KOUTP_LFCHMIStatus_enum_srvcflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KOUTP_LFCHMIStatus_enum_srvcval', 	'enum', 	0, 	255, 	'uint8', 	'' );
a2l_par('KOUTP_LFCHMIStatus_enum_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KOUTP_LFCHMIStatus_enum_ovrdval', 	'enum', 	0, 	255, 	'uint8', 	'' );
a2l_par('KOUTP_LFCHMIStatus_enum_defval', 	'enum', 	0, 	255, 	'uint8', 	'' );
a2l_par('KOUTP_LKAHMIStatus_enum_srvcflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KOUTP_LKAHMIStatus_enum_srvcval', 	'enum', 	0, 	255, 	'uint8', 	'' );
a2l_par('KOUTP_LKAHMIStatus_enum_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KOUTP_LKAHMIStatus_enum_ovrdval', 	'enum', 	0, 	255, 	'uint8', 	'' );
a2l_par('KOUTP_LKAHMIStatus_enum_defval', 	'enum', 	0, 	255, 	'uint8', 	'' );
a2l_par('KOUTP_LFCWarningReq_flg_srvcflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KOUTP_LFCWarningReq_flg_srvcval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KOUTP_LFCWarningReq_flg_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KOUTP_LFCWarningReq_flg_ovrdval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KOUTP_LFCWarningReq_flg_defval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KOUTP_ADASFunOnSoundReq_flg_srvcflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KOUTP_ADASFunOnSoundReq_flg_srvcval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KOUTP_ADASFunOnSoundReq_flg_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KOUTP_ADASFunOnSoundReq_flg_ovrdval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KOUTP_ADASFunOnSoundReq_flg_defval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KOUTP_ADASFunOffSoundReq_flg_srvcflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KOUTP_ADASFunOffSoundReq_flg_srvcval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KOUTP_ADASFunOffSoundReq_flg_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KOUTP_ADASFunOffSoundReq_flg_ovrdval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KOUTP_ADASFunOffSoundReq_flg_defval', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KOUTP_NumberOfTargets_num_srvcflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KOUTP_NumberOfTargets_num_srvcval', 	'num', 	0, 	255, 	'uint8', 	'' );
a2l_par('KOUTP_NumberOfTargets_num_ovrdflg', 	'flg', 	0, 	1, 	'boolean', 	'' );
a2l_par('KOUTP_NumberOfTargets_num_ovrdval', 	'num', 	0, 	255, 	'uint8', 	'' );
a2l_par('KOUTP_NumberOfTargets_num_defval', 	'num', 	0, 	255, 	'uint8', 	'' );

%% Monitored Signals
% Module Signals %
a2l_mon('VOUTP_SysPowerDownCmd_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );

% Output Signals %
a2l_mon('VOUTP_StrAngReq_deg', 	'deg', 	-720, 	720, 	'single', 	'',	1 );
a2l_mon('VOUTP_StrAngAppl_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VOUTP_StrTqReq_Nm', 	'Nm', 	-10, 	10, 	'single', 	'',	1 );
a2l_mon('VOUTP_StrTqAppl_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VOUTP_LFCTransGain_rat', 	'rat', 	0.8, 	1.2, 	'single', 	'',	1 );
a2l_mon('VOUTP_LFCTransGainAppl_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VOUTP_ADASLFCStatus_enum', 	'enum', 	0, 	255, 	'uint8', 	'',	1 );
a2l_mon('VOUTP_ADASLKAStatus_enum', 	'enum', 	0, 	255, 	'uint8', 	'',	1 );
a2l_mon('VOUTP_EPSModeReq_enum', 	'enum', 	0, 	255, 	'uint8', 	'',	1 );
a2l_mon('VOUTP_ADAS1RollCnt_cnt', 	'enum', 	0, 	255, 	'uint8', 	'',	1 );
a2l_mon('VOUTP_PTTqReq_Nm', 	'Nm', 	-100, 	718.8, 	'single', 	'',	1 );
a2l_mon('VOUTP_PTTqReqAppl_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VOUTP_ForceIdle_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VOUTP_ForceIdleAppl_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VOUTP_DecReq_mps2', 	'mps2', 	0, 	25.4, 	'single', 	'',	1 );
a2l_mon('VOUTP_DecReqAppl_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VOUTP_AEBReq_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VOUTP_AEBReqAppl_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VOUTP_BrakePrefillReq_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VOUTP_BrakePrefillReqAppl_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VOUTP_VehHoldReq_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VOUTP_BrakeHapticReq_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VOUTP_ADASACCStatus_enum', 	'enum', 	0, 	255, 	'uint8', 	'',	1 );
a2l_mon('VOUTP_VirtualGearRatio_enum', 	'enum', 	0, 	255, 	'uint8', 	'',	1 );
a2l_mon('VOUTP_ADAS2RollCnt_cnt', 	'enum', 	0, 	255, 	'uint8', 	'',	1 );
a2l_mon('VOUTP_VehSpdLim_kph', 	'kph', 	0, 	254, 	'single', 	'',	1 );
a2l_mon('VOUTP_VehSpdLimAppl_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VOUTP_GearPosnReq_enum', 	'enum', 	0, 	255, 	'uint8', 	'',	1 );
a2l_mon('VOUTP_GearPosnReqAppl_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VOUTP_ShiftPosnReq_enum', 	'enum', 	0, 	255, 	'uint8', 	'',	1 );
a2l_mon('VOUTP_ShiftPosnReqAppl_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VOUTP_ADAS3RollCnt_cnt', 	'enum', 	0, 	255, 	'uint8', 	'',	1 );
a2l_mon('VOUTP_ForceLowBeam_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VOUTP_ADASMILReq_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VOUTP_HazardWarningReq_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VOUTP_FCWWarningReq_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VOUTP_ACCWarningReq_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VOUTP_AEBWarningReq_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VOUTP_IGSAWarningReq_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VOUTP_FaultWarningReq_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VOUTP_ACCSetSpeed_kph', 	'kph', 	0, 	254, 	'single', 	'',	1 );
a2l_mon('VOUTP_ADASFaultMode_enum', 	'enum', 	0, 	255, 	'uint8', 	'',	1 );
a2l_mon('VOUTP_ACCSetTimeGap_enum', 	'enum', 	0, 	255, 	'uint8', 	'',	1 );
a2l_mon('VOUTP_ACCSetTimeGapTmp_enum', 	'enum', 	0, 	255, 	'uint8', 	'',	1 );
a2l_mon('VOUTP_LeftLaneLampMode_enum', 	'enum', 	0, 	255, 	'uint8', 	'',	1 );
a2l_mon('VOUTP_RightLaneLampMode_enum', 	'enum', 	0, 	255, 	'uint8', 	'',	1 );
a2l_mon('VOUTP_LFCHMIStatus_enum', 	'enum', 	0, 	255, 	'uint8', 	'',	1 );
a2l_mon('VOUTP_LKAHMIStatus_enum', 	'enum', 	0, 	255, 	'uint8', 	'',	1 );
a2l_mon('VOUTP_LFCWarningReq_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VOUTP_ADASFunOnSoundReq_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VOUTP_ADASFunOffSoundReq_flg', 	'flg', 	0, 	1, 	'boolean', 	'',	1 );
a2l_mon('VOUTP_NumberOfTargets_num', 	'num', 	0, 	255, 	'uint8', 	'',	1 );
